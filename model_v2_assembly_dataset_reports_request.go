/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2AssemblyDatasetReportsRequest struct for V2AssemblyDatasetReportsRequest
type V2AssemblyDatasetReportsRequest struct {
	Taxons []string `json:"taxons,omitempty"`
	Bioprojects []string `json:"bioprojects,omitempty"`
	BiosampleIds []string `json:"biosample_ids,omitempty"`
	AssemblyNames []string `json:"assembly_names,omitempty"`
	WgsAccessions []string `json:"wgs_accessions,omitempty"`
	Accessions []string `json:"accessions,omitempty"`
	Filters *V2AssemblyDatasetDescriptorsFilter `json:"filters,omitempty"`
	TaxExactMatch *bool `json:"tax_exact_match,omitempty"`
	Chromosomes []string `json:"chromosomes,omitempty"`
	TableFields []string `json:"table_fields,omitempty"`
	ReturnedContent *V2AssemblyDatasetReportsRequestContentType `json:"returned_content,omitempty"`
	PageSize *int32 `json:"page_size,omitempty"`
	PageToken *string `json:"page_token,omitempty"`
	Sort []V2SortField `json:"sort,omitempty"`
	IncludeTabularHeader *V2IncludeTabularHeader `json:"include_tabular_header,omitempty"`
	TableFormat *string `json:"table_format,omitempty"`
}

// NewV2AssemblyDatasetReportsRequest instantiates a new V2AssemblyDatasetReportsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2AssemblyDatasetReportsRequest() *V2AssemblyDatasetReportsRequest {
	this := V2AssemblyDatasetReportsRequest{}
	var returnedContent V2AssemblyDatasetReportsRequestContentType = V2ASSEMBLYDATASETREPORTSREQUESTCONTENTTYPE_COMPLETE
	this.ReturnedContent = &returnedContent
	var includeTabularHeader V2IncludeTabularHeader = V2INCLUDETABULARHEADER_FIRST_PAGE_ONLY
	this.IncludeTabularHeader = &includeTabularHeader
	return &this
}

// NewV2AssemblyDatasetReportsRequestWithDefaults instantiates a new V2AssemblyDatasetReportsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2AssemblyDatasetReportsRequestWithDefaults() *V2AssemblyDatasetReportsRequest {
	this := V2AssemblyDatasetReportsRequest{}
	var returnedContent V2AssemblyDatasetReportsRequestContentType = V2ASSEMBLYDATASETREPORTSREQUESTCONTENTTYPE_COMPLETE
	this.ReturnedContent = &returnedContent
	var includeTabularHeader V2IncludeTabularHeader = V2INCLUDETABULARHEADER_FIRST_PAGE_ONLY
	this.IncludeTabularHeader = &includeTabularHeader
	return &this
}

// GetTaxons returns the Taxons field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetTaxons() []string {
	if o == nil || o.Taxons == nil {
		var ret []string
		return ret
	}
	return o.Taxons
}

// GetTaxonsOk returns a tuple with the Taxons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetTaxonsOk() ([]string, bool) {
	if o == nil || o.Taxons == nil {
		return nil, false
	}
	return o.Taxons, true
}

// HasTaxons returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasTaxons() bool {
	if o != nil && o.Taxons != nil {
		return true
	}

	return false
}

// SetTaxons gets a reference to the given []string and assigns it to the Taxons field.
func (o *V2AssemblyDatasetReportsRequest) SetTaxons(v []string) {
	o.Taxons = v
}

// GetBioprojects returns the Bioprojects field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetBioprojects() []string {
	if o == nil || o.Bioprojects == nil {
		var ret []string
		return ret
	}
	return o.Bioprojects
}

// GetBioprojectsOk returns a tuple with the Bioprojects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetBioprojectsOk() ([]string, bool) {
	if o == nil || o.Bioprojects == nil {
		return nil, false
	}
	return o.Bioprojects, true
}

// HasBioprojects returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasBioprojects() bool {
	if o != nil && o.Bioprojects != nil {
		return true
	}

	return false
}

// SetBioprojects gets a reference to the given []string and assigns it to the Bioprojects field.
func (o *V2AssemblyDatasetReportsRequest) SetBioprojects(v []string) {
	o.Bioprojects = v
}

// GetBiosampleIds returns the BiosampleIds field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetBiosampleIds() []string {
	if o == nil || o.BiosampleIds == nil {
		var ret []string
		return ret
	}
	return o.BiosampleIds
}

// GetBiosampleIdsOk returns a tuple with the BiosampleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetBiosampleIdsOk() ([]string, bool) {
	if o == nil || o.BiosampleIds == nil {
		return nil, false
	}
	return o.BiosampleIds, true
}

// HasBiosampleIds returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasBiosampleIds() bool {
	if o != nil && o.BiosampleIds != nil {
		return true
	}

	return false
}

// SetBiosampleIds gets a reference to the given []string and assigns it to the BiosampleIds field.
func (o *V2AssemblyDatasetReportsRequest) SetBiosampleIds(v []string) {
	o.BiosampleIds = v
}

// GetAssemblyNames returns the AssemblyNames field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetAssemblyNames() []string {
	if o == nil || o.AssemblyNames == nil {
		var ret []string
		return ret
	}
	return o.AssemblyNames
}

// GetAssemblyNamesOk returns a tuple with the AssemblyNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetAssemblyNamesOk() ([]string, bool) {
	if o == nil || o.AssemblyNames == nil {
		return nil, false
	}
	return o.AssemblyNames, true
}

// HasAssemblyNames returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasAssemblyNames() bool {
	if o != nil && o.AssemblyNames != nil {
		return true
	}

	return false
}

// SetAssemblyNames gets a reference to the given []string and assigns it to the AssemblyNames field.
func (o *V2AssemblyDatasetReportsRequest) SetAssemblyNames(v []string) {
	o.AssemblyNames = v
}

// GetWgsAccessions returns the WgsAccessions field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetWgsAccessions() []string {
	if o == nil || o.WgsAccessions == nil {
		var ret []string
		return ret
	}
	return o.WgsAccessions
}

// GetWgsAccessionsOk returns a tuple with the WgsAccessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetWgsAccessionsOk() ([]string, bool) {
	if o == nil || o.WgsAccessions == nil {
		return nil, false
	}
	return o.WgsAccessions, true
}

// HasWgsAccessions returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasWgsAccessions() bool {
	if o != nil && o.WgsAccessions != nil {
		return true
	}

	return false
}

// SetWgsAccessions gets a reference to the given []string and assigns it to the WgsAccessions field.
func (o *V2AssemblyDatasetReportsRequest) SetWgsAccessions(v []string) {
	o.WgsAccessions = v
}

// GetAccessions returns the Accessions field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetAccessions() []string {
	if o == nil || o.Accessions == nil {
		var ret []string
		return ret
	}
	return o.Accessions
}

// GetAccessionsOk returns a tuple with the Accessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetAccessionsOk() ([]string, bool) {
	if o == nil || o.Accessions == nil {
		return nil, false
	}
	return o.Accessions, true
}

// HasAccessions returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasAccessions() bool {
	if o != nil && o.Accessions != nil {
		return true
	}

	return false
}

// SetAccessions gets a reference to the given []string and assigns it to the Accessions field.
func (o *V2AssemblyDatasetReportsRequest) SetAccessions(v []string) {
	o.Accessions = v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetFilters() V2AssemblyDatasetDescriptorsFilter {
	if o == nil || o.Filters == nil {
		var ret V2AssemblyDatasetDescriptorsFilter
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetFiltersOk() (*V2AssemblyDatasetDescriptorsFilter, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given V2AssemblyDatasetDescriptorsFilter and assigns it to the Filters field.
func (o *V2AssemblyDatasetReportsRequest) SetFilters(v V2AssemblyDatasetDescriptorsFilter) {
	o.Filters = &v
}

// GetTaxExactMatch returns the TaxExactMatch field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetTaxExactMatch() bool {
	if o == nil || o.TaxExactMatch == nil {
		var ret bool
		return ret
	}
	return *o.TaxExactMatch
}

// GetTaxExactMatchOk returns a tuple with the TaxExactMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetTaxExactMatchOk() (*bool, bool) {
	if o == nil || o.TaxExactMatch == nil {
		return nil, false
	}
	return o.TaxExactMatch, true
}

// HasTaxExactMatch returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasTaxExactMatch() bool {
	if o != nil && o.TaxExactMatch != nil {
		return true
	}

	return false
}

// SetTaxExactMatch gets a reference to the given bool and assigns it to the TaxExactMatch field.
func (o *V2AssemblyDatasetReportsRequest) SetTaxExactMatch(v bool) {
	o.TaxExactMatch = &v
}

// GetChromosomes returns the Chromosomes field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetChromosomes() []string {
	if o == nil || o.Chromosomes == nil {
		var ret []string
		return ret
	}
	return o.Chromosomes
}

// GetChromosomesOk returns a tuple with the Chromosomes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetChromosomesOk() ([]string, bool) {
	if o == nil || o.Chromosomes == nil {
		return nil, false
	}
	return o.Chromosomes, true
}

// HasChromosomes returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasChromosomes() bool {
	if o != nil && o.Chromosomes != nil {
		return true
	}

	return false
}

// SetChromosomes gets a reference to the given []string and assigns it to the Chromosomes field.
func (o *V2AssemblyDatasetReportsRequest) SetChromosomes(v []string) {
	o.Chromosomes = v
}

// GetTableFields returns the TableFields field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetTableFields() []string {
	if o == nil || o.TableFields == nil {
		var ret []string
		return ret
	}
	return o.TableFields
}

// GetTableFieldsOk returns a tuple with the TableFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetTableFieldsOk() ([]string, bool) {
	if o == nil || o.TableFields == nil {
		return nil, false
	}
	return o.TableFields, true
}

// HasTableFields returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasTableFields() bool {
	if o != nil && o.TableFields != nil {
		return true
	}

	return false
}

// SetTableFields gets a reference to the given []string and assigns it to the TableFields field.
func (o *V2AssemblyDatasetReportsRequest) SetTableFields(v []string) {
	o.TableFields = v
}

// GetReturnedContent returns the ReturnedContent field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetReturnedContent() V2AssemblyDatasetReportsRequestContentType {
	if o == nil || o.ReturnedContent == nil {
		var ret V2AssemblyDatasetReportsRequestContentType
		return ret
	}
	return *o.ReturnedContent
}

// GetReturnedContentOk returns a tuple with the ReturnedContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetReturnedContentOk() (*V2AssemblyDatasetReportsRequestContentType, bool) {
	if o == nil || o.ReturnedContent == nil {
		return nil, false
	}
	return o.ReturnedContent, true
}

// HasReturnedContent returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasReturnedContent() bool {
	if o != nil && o.ReturnedContent != nil {
		return true
	}

	return false
}

// SetReturnedContent gets a reference to the given V2AssemblyDatasetReportsRequestContentType and assigns it to the ReturnedContent field.
func (o *V2AssemblyDatasetReportsRequest) SetReturnedContent(v V2AssemblyDatasetReportsRequestContentType) {
	o.ReturnedContent = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetPageSize() int32 {
	if o == nil || o.PageSize == nil {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil || o.PageSize == nil {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasPageSize() bool {
	if o != nil && o.PageSize != nil {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *V2AssemblyDatasetReportsRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetPageToken returns the PageToken field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetPageToken() string {
	if o == nil || o.PageToken == nil {
		var ret string
		return ret
	}
	return *o.PageToken
}

// GetPageTokenOk returns a tuple with the PageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetPageTokenOk() (*string, bool) {
	if o == nil || o.PageToken == nil {
		return nil, false
	}
	return o.PageToken, true
}

// HasPageToken returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasPageToken() bool {
	if o != nil && o.PageToken != nil {
		return true
	}

	return false
}

// SetPageToken gets a reference to the given string and assigns it to the PageToken field.
func (o *V2AssemblyDatasetReportsRequest) SetPageToken(v string) {
	o.PageToken = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetSort() []V2SortField {
	if o == nil || o.Sort == nil {
		var ret []V2SortField
		return ret
	}
	return o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetSortOk() ([]V2SortField, bool) {
	if o == nil || o.Sort == nil {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasSort() bool {
	if o != nil && o.Sort != nil {
		return true
	}

	return false
}

// SetSort gets a reference to the given []V2SortField and assigns it to the Sort field.
func (o *V2AssemblyDatasetReportsRequest) SetSort(v []V2SortField) {
	o.Sort = v
}

// GetIncludeTabularHeader returns the IncludeTabularHeader field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetIncludeTabularHeader() V2IncludeTabularHeader {
	if o == nil || o.IncludeTabularHeader == nil {
		var ret V2IncludeTabularHeader
		return ret
	}
	return *o.IncludeTabularHeader
}

// GetIncludeTabularHeaderOk returns a tuple with the IncludeTabularHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetIncludeTabularHeaderOk() (*V2IncludeTabularHeader, bool) {
	if o == nil || o.IncludeTabularHeader == nil {
		return nil, false
	}
	return o.IncludeTabularHeader, true
}

// HasIncludeTabularHeader returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasIncludeTabularHeader() bool {
	if o != nil && o.IncludeTabularHeader != nil {
		return true
	}

	return false
}

// SetIncludeTabularHeader gets a reference to the given V2IncludeTabularHeader and assigns it to the IncludeTabularHeader field.
func (o *V2AssemblyDatasetReportsRequest) SetIncludeTabularHeader(v V2IncludeTabularHeader) {
	o.IncludeTabularHeader = &v
}

// GetTableFormat returns the TableFormat field value if set, zero value otherwise.
func (o *V2AssemblyDatasetReportsRequest) GetTableFormat() string {
	if o == nil || o.TableFormat == nil {
		var ret string
		return ret
	}
	return *o.TableFormat
}

// GetTableFormatOk returns a tuple with the TableFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyDatasetReportsRequest) GetTableFormatOk() (*string, bool) {
	if o == nil || o.TableFormat == nil {
		return nil, false
	}
	return o.TableFormat, true
}

// HasTableFormat returns a boolean if a field has been set.
func (o *V2AssemblyDatasetReportsRequest) HasTableFormat() bool {
	if o != nil && o.TableFormat != nil {
		return true
	}

	return false
}

// SetTableFormat gets a reference to the given string and assigns it to the TableFormat field.
func (o *V2AssemblyDatasetReportsRequest) SetTableFormat(v string) {
	o.TableFormat = &v
}

func (o V2AssemblyDatasetReportsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Taxons != nil {
		toSerialize["taxons"] = o.Taxons
	}
	if o.Bioprojects != nil {
		toSerialize["bioprojects"] = o.Bioprojects
	}
	if o.BiosampleIds != nil {
		toSerialize["biosample_ids"] = o.BiosampleIds
	}
	if o.AssemblyNames != nil {
		toSerialize["assembly_names"] = o.AssemblyNames
	}
	if o.WgsAccessions != nil {
		toSerialize["wgs_accessions"] = o.WgsAccessions
	}
	if o.Accessions != nil {
		toSerialize["accessions"] = o.Accessions
	}
	if o.Filters != nil {
		toSerialize["filters"] = o.Filters
	}
	if o.TaxExactMatch != nil {
		toSerialize["tax_exact_match"] = o.TaxExactMatch
	}
	if o.Chromosomes != nil {
		toSerialize["chromosomes"] = o.Chromosomes
	}
	if o.TableFields != nil {
		toSerialize["table_fields"] = o.TableFields
	}
	if o.ReturnedContent != nil {
		toSerialize["returned_content"] = o.ReturnedContent
	}
	if o.PageSize != nil {
		toSerialize["page_size"] = o.PageSize
	}
	if o.PageToken != nil {
		toSerialize["page_token"] = o.PageToken
	}
	if o.Sort != nil {
		toSerialize["sort"] = o.Sort
	}
	if o.IncludeTabularHeader != nil {
		toSerialize["include_tabular_header"] = o.IncludeTabularHeader
	}
	if o.TableFormat != nil {
		toSerialize["table_format"] = o.TableFormat
	}
	return json.Marshal(toSerialize)
}

type NullableV2AssemblyDatasetReportsRequest struct {
	value *V2AssemblyDatasetReportsRequest
	isSet bool
}

func (v NullableV2AssemblyDatasetReportsRequest) Get() *V2AssemblyDatasetReportsRequest {
	return v.value
}

func (v *NullableV2AssemblyDatasetReportsRequest) Set(val *V2AssemblyDatasetReportsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV2AssemblyDatasetReportsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV2AssemblyDatasetReportsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2AssemblyDatasetReportsRequest(val *V2AssemblyDatasetReportsRequest) *NullableV2AssemblyDatasetReportsRequest {
	return &NullableV2AssemblyDatasetReportsRequest{value: val, isSet: true}
}

func (v NullableV2AssemblyDatasetReportsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2AssemblyDatasetReportsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


