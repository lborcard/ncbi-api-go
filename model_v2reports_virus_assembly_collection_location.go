/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2reportsVirusAssemblyCollectionLocation struct for V2reportsVirusAssemblyCollectionLocation
type V2reportsVirusAssemblyCollectionLocation struct {
	GeographicLocation *string `json:"geographic_location,omitempty"`
	GeographicRegion *string `json:"geographic_region,omitempty"`
}

// NewV2reportsVirusAssemblyCollectionLocation instantiates a new V2reportsVirusAssemblyCollectionLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsVirusAssemblyCollectionLocation() *V2reportsVirusAssemblyCollectionLocation {
	this := V2reportsVirusAssemblyCollectionLocation{}
	return &this
}

// NewV2reportsVirusAssemblyCollectionLocationWithDefaults instantiates a new V2reportsVirusAssemblyCollectionLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsVirusAssemblyCollectionLocationWithDefaults() *V2reportsVirusAssemblyCollectionLocation {
	this := V2reportsVirusAssemblyCollectionLocation{}
	return &this
}

// GetGeographicLocation returns the GeographicLocation field value if set, zero value otherwise.
func (o *V2reportsVirusAssemblyCollectionLocation) GetGeographicLocation() string {
	if o == nil || o.GeographicLocation == nil {
		var ret string
		return ret
	}
	return *o.GeographicLocation
}

// GetGeographicLocationOk returns a tuple with the GeographicLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssemblyCollectionLocation) GetGeographicLocationOk() (*string, bool) {
	if o == nil || o.GeographicLocation == nil {
		return nil, false
	}
	return o.GeographicLocation, true
}

// HasGeographicLocation returns a boolean if a field has been set.
func (o *V2reportsVirusAssemblyCollectionLocation) HasGeographicLocation() bool {
	if o != nil && o.GeographicLocation != nil {
		return true
	}

	return false
}

// SetGeographicLocation gets a reference to the given string and assigns it to the GeographicLocation field.
func (o *V2reportsVirusAssemblyCollectionLocation) SetGeographicLocation(v string) {
	o.GeographicLocation = &v
}

// GetGeographicRegion returns the GeographicRegion field value if set, zero value otherwise.
func (o *V2reportsVirusAssemblyCollectionLocation) GetGeographicRegion() string {
	if o == nil || o.GeographicRegion == nil {
		var ret string
		return ret
	}
	return *o.GeographicRegion
}

// GetGeographicRegionOk returns a tuple with the GeographicRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssemblyCollectionLocation) GetGeographicRegionOk() (*string, bool) {
	if o == nil || o.GeographicRegion == nil {
		return nil, false
	}
	return o.GeographicRegion, true
}

// HasGeographicRegion returns a boolean if a field has been set.
func (o *V2reportsVirusAssemblyCollectionLocation) HasGeographicRegion() bool {
	if o != nil && o.GeographicRegion != nil {
		return true
	}

	return false
}

// SetGeographicRegion gets a reference to the given string and assigns it to the GeographicRegion field.
func (o *V2reportsVirusAssemblyCollectionLocation) SetGeographicRegion(v string) {
	o.GeographicRegion = &v
}

func (o V2reportsVirusAssemblyCollectionLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GeographicLocation != nil {
		toSerialize["geographic_location"] = o.GeographicLocation
	}
	if o.GeographicRegion != nil {
		toSerialize["geographic_region"] = o.GeographicRegion
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsVirusAssemblyCollectionLocation struct {
	value *V2reportsVirusAssemblyCollectionLocation
	isSet bool
}

func (v NullableV2reportsVirusAssemblyCollectionLocation) Get() *V2reportsVirusAssemblyCollectionLocation {
	return v.value
}

func (v *NullableV2reportsVirusAssemblyCollectionLocation) Set(val *V2reportsVirusAssemblyCollectionLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsVirusAssemblyCollectionLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsVirusAssemblyCollectionLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsVirusAssemblyCollectionLocation(val *V2reportsVirusAssemblyCollectionLocation) *NullableV2reportsVirusAssemblyCollectionLocation {
	return &NullableV2reportsVirusAssemblyCollectionLocation{value: val, isSet: true}
}

func (v NullableV2reportsVirusAssemblyCollectionLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsVirusAssemblyCollectionLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


