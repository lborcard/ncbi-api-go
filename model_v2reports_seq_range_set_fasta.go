/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2reportsSeqRangeSetFasta struct for V2reportsSeqRangeSetFasta
type V2reportsSeqRangeSetFasta struct {
	SeqId *string `json:"seq_id,omitempty"`
	AccessionVersion *string `json:"accession_version,omitempty"`
	Title *string `json:"title,omitempty"`
	SequenceHash *string `json:"sequence_hash,omitempty"`
	Range []V2reportsRange `json:"range,omitempty"`
}

// NewV2reportsSeqRangeSetFasta instantiates a new V2reportsSeqRangeSetFasta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsSeqRangeSetFasta() *V2reportsSeqRangeSetFasta {
	this := V2reportsSeqRangeSetFasta{}
	return &this
}

// NewV2reportsSeqRangeSetFastaWithDefaults instantiates a new V2reportsSeqRangeSetFasta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsSeqRangeSetFastaWithDefaults() *V2reportsSeqRangeSetFasta {
	this := V2reportsSeqRangeSetFasta{}
	return &this
}

// GetSeqId returns the SeqId field value if set, zero value otherwise.
func (o *V2reportsSeqRangeSetFasta) GetSeqId() string {
	if o == nil || o.SeqId == nil {
		var ret string
		return ret
	}
	return *o.SeqId
}

// GetSeqIdOk returns a tuple with the SeqId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsSeqRangeSetFasta) GetSeqIdOk() (*string, bool) {
	if o == nil || o.SeqId == nil {
		return nil, false
	}
	return o.SeqId, true
}

// HasSeqId returns a boolean if a field has been set.
func (o *V2reportsSeqRangeSetFasta) HasSeqId() bool {
	if o != nil && o.SeqId != nil {
		return true
	}

	return false
}

// SetSeqId gets a reference to the given string and assigns it to the SeqId field.
func (o *V2reportsSeqRangeSetFasta) SetSeqId(v string) {
	o.SeqId = &v
}

// GetAccessionVersion returns the AccessionVersion field value if set, zero value otherwise.
func (o *V2reportsSeqRangeSetFasta) GetAccessionVersion() string {
	if o == nil || o.AccessionVersion == nil {
		var ret string
		return ret
	}
	return *o.AccessionVersion
}

// GetAccessionVersionOk returns a tuple with the AccessionVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsSeqRangeSetFasta) GetAccessionVersionOk() (*string, bool) {
	if o == nil || o.AccessionVersion == nil {
		return nil, false
	}
	return o.AccessionVersion, true
}

// HasAccessionVersion returns a boolean if a field has been set.
func (o *V2reportsSeqRangeSetFasta) HasAccessionVersion() bool {
	if o != nil && o.AccessionVersion != nil {
		return true
	}

	return false
}

// SetAccessionVersion gets a reference to the given string and assigns it to the AccessionVersion field.
func (o *V2reportsSeqRangeSetFasta) SetAccessionVersion(v string) {
	o.AccessionVersion = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *V2reportsSeqRangeSetFasta) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsSeqRangeSetFasta) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *V2reportsSeqRangeSetFasta) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *V2reportsSeqRangeSetFasta) SetTitle(v string) {
	o.Title = &v
}

// GetSequenceHash returns the SequenceHash field value if set, zero value otherwise.
func (o *V2reportsSeqRangeSetFasta) GetSequenceHash() string {
	if o == nil || o.SequenceHash == nil {
		var ret string
		return ret
	}
	return *o.SequenceHash
}

// GetSequenceHashOk returns a tuple with the SequenceHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsSeqRangeSetFasta) GetSequenceHashOk() (*string, bool) {
	if o == nil || o.SequenceHash == nil {
		return nil, false
	}
	return o.SequenceHash, true
}

// HasSequenceHash returns a boolean if a field has been set.
func (o *V2reportsSeqRangeSetFasta) HasSequenceHash() bool {
	if o != nil && o.SequenceHash != nil {
		return true
	}

	return false
}

// SetSequenceHash gets a reference to the given string and assigns it to the SequenceHash field.
func (o *V2reportsSeqRangeSetFasta) SetSequenceHash(v string) {
	o.SequenceHash = &v
}

// GetRange returns the Range field value if set, zero value otherwise.
func (o *V2reportsSeqRangeSetFasta) GetRange() []V2reportsRange {
	if o == nil || o.Range == nil {
		var ret []V2reportsRange
		return ret
	}
	return o.Range
}

// GetRangeOk returns a tuple with the Range field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsSeqRangeSetFasta) GetRangeOk() ([]V2reportsRange, bool) {
	if o == nil || o.Range == nil {
		return nil, false
	}
	return o.Range, true
}

// HasRange returns a boolean if a field has been set.
func (o *V2reportsSeqRangeSetFasta) HasRange() bool {
	if o != nil && o.Range != nil {
		return true
	}

	return false
}

// SetRange gets a reference to the given []V2reportsRange and assigns it to the Range field.
func (o *V2reportsSeqRangeSetFasta) SetRange(v []V2reportsRange) {
	o.Range = v
}

func (o V2reportsSeqRangeSetFasta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SeqId != nil {
		toSerialize["seq_id"] = o.SeqId
	}
	if o.AccessionVersion != nil {
		toSerialize["accession_version"] = o.AccessionVersion
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.SequenceHash != nil {
		toSerialize["sequence_hash"] = o.SequenceHash
	}
	if o.Range != nil {
		toSerialize["range"] = o.Range
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsSeqRangeSetFasta struct {
	value *V2reportsSeqRangeSetFasta
	isSet bool
}

func (v NullableV2reportsSeqRangeSetFasta) Get() *V2reportsSeqRangeSetFasta {
	return v.value
}

func (v *NullableV2reportsSeqRangeSetFasta) Set(val *V2reportsSeqRangeSetFasta) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsSeqRangeSetFasta) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsSeqRangeSetFasta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsSeqRangeSetFasta(val *V2reportsSeqRangeSetFasta) *NullableV2reportsSeqRangeSetFasta {
	return &NullableV2reportsSeqRangeSetFasta{value: val, isSet: true}
}

func (v NullableV2reportsSeqRangeSetFasta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsSeqRangeSetFasta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


