/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2ProkaryoteGeneRequest struct for V2ProkaryoteGeneRequest
type V2ProkaryoteGeneRequest struct {
	Accessions []string `json:"accessions,omitempty"`
	IncludeAnnotationType []V2Fasta `json:"include_annotation_type,omitempty"`
	GeneFlankConfig *V2ProkaryoteGeneRequestGeneFlankConfig `json:"gene_flank_config,omitempty"`
	Taxon *string `json:"taxon,omitempty"`
}

// NewV2ProkaryoteGeneRequest instantiates a new V2ProkaryoteGeneRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2ProkaryoteGeneRequest() *V2ProkaryoteGeneRequest {
	this := V2ProkaryoteGeneRequest{}
	return &this
}

// NewV2ProkaryoteGeneRequestWithDefaults instantiates a new V2ProkaryoteGeneRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2ProkaryoteGeneRequestWithDefaults() *V2ProkaryoteGeneRequest {
	this := V2ProkaryoteGeneRequest{}
	return &this
}

// GetAccessions returns the Accessions field value if set, zero value otherwise.
func (o *V2ProkaryoteGeneRequest) GetAccessions() []string {
	if o == nil || o.Accessions == nil {
		var ret []string
		return ret
	}
	return o.Accessions
}

// GetAccessionsOk returns a tuple with the Accessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2ProkaryoteGeneRequest) GetAccessionsOk() ([]string, bool) {
	if o == nil || o.Accessions == nil {
		return nil, false
	}
	return o.Accessions, true
}

// HasAccessions returns a boolean if a field has been set.
func (o *V2ProkaryoteGeneRequest) HasAccessions() bool {
	if o != nil && o.Accessions != nil {
		return true
	}

	return false
}

// SetAccessions gets a reference to the given []string and assigns it to the Accessions field.
func (o *V2ProkaryoteGeneRequest) SetAccessions(v []string) {
	o.Accessions = v
}

// GetIncludeAnnotationType returns the IncludeAnnotationType field value if set, zero value otherwise.
func (o *V2ProkaryoteGeneRequest) GetIncludeAnnotationType() []V2Fasta {
	if o == nil || o.IncludeAnnotationType == nil {
		var ret []V2Fasta
		return ret
	}
	return o.IncludeAnnotationType
}

// GetIncludeAnnotationTypeOk returns a tuple with the IncludeAnnotationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2ProkaryoteGeneRequest) GetIncludeAnnotationTypeOk() ([]V2Fasta, bool) {
	if o == nil || o.IncludeAnnotationType == nil {
		return nil, false
	}
	return o.IncludeAnnotationType, true
}

// HasIncludeAnnotationType returns a boolean if a field has been set.
func (o *V2ProkaryoteGeneRequest) HasIncludeAnnotationType() bool {
	if o != nil && o.IncludeAnnotationType != nil {
		return true
	}

	return false
}

// SetIncludeAnnotationType gets a reference to the given []V2Fasta and assigns it to the IncludeAnnotationType field.
func (o *V2ProkaryoteGeneRequest) SetIncludeAnnotationType(v []V2Fasta) {
	o.IncludeAnnotationType = v
}

// GetGeneFlankConfig returns the GeneFlankConfig field value if set, zero value otherwise.
func (o *V2ProkaryoteGeneRequest) GetGeneFlankConfig() V2ProkaryoteGeneRequestGeneFlankConfig {
	if o == nil || o.GeneFlankConfig == nil {
		var ret V2ProkaryoteGeneRequestGeneFlankConfig
		return ret
	}
	return *o.GeneFlankConfig
}

// GetGeneFlankConfigOk returns a tuple with the GeneFlankConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2ProkaryoteGeneRequest) GetGeneFlankConfigOk() (*V2ProkaryoteGeneRequestGeneFlankConfig, bool) {
	if o == nil || o.GeneFlankConfig == nil {
		return nil, false
	}
	return o.GeneFlankConfig, true
}

// HasGeneFlankConfig returns a boolean if a field has been set.
func (o *V2ProkaryoteGeneRequest) HasGeneFlankConfig() bool {
	if o != nil && o.GeneFlankConfig != nil {
		return true
	}

	return false
}

// SetGeneFlankConfig gets a reference to the given V2ProkaryoteGeneRequestGeneFlankConfig and assigns it to the GeneFlankConfig field.
func (o *V2ProkaryoteGeneRequest) SetGeneFlankConfig(v V2ProkaryoteGeneRequestGeneFlankConfig) {
	o.GeneFlankConfig = &v
}

// GetTaxon returns the Taxon field value if set, zero value otherwise.
func (o *V2ProkaryoteGeneRequest) GetTaxon() string {
	if o == nil || o.Taxon == nil {
		var ret string
		return ret
	}
	return *o.Taxon
}

// GetTaxonOk returns a tuple with the Taxon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2ProkaryoteGeneRequest) GetTaxonOk() (*string, bool) {
	if o == nil || o.Taxon == nil {
		return nil, false
	}
	return o.Taxon, true
}

// HasTaxon returns a boolean if a field has been set.
func (o *V2ProkaryoteGeneRequest) HasTaxon() bool {
	if o != nil && o.Taxon != nil {
		return true
	}

	return false
}

// SetTaxon gets a reference to the given string and assigns it to the Taxon field.
func (o *V2ProkaryoteGeneRequest) SetTaxon(v string) {
	o.Taxon = &v
}

func (o V2ProkaryoteGeneRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accessions != nil {
		toSerialize["accessions"] = o.Accessions
	}
	if o.IncludeAnnotationType != nil {
		toSerialize["include_annotation_type"] = o.IncludeAnnotationType
	}
	if o.GeneFlankConfig != nil {
		toSerialize["gene_flank_config"] = o.GeneFlankConfig
	}
	if o.Taxon != nil {
		toSerialize["taxon"] = o.Taxon
	}
	return json.Marshal(toSerialize)
}

type NullableV2ProkaryoteGeneRequest struct {
	value *V2ProkaryoteGeneRequest
	isSet bool
}

func (v NullableV2ProkaryoteGeneRequest) Get() *V2ProkaryoteGeneRequest {
	return v.value
}

func (v *NullableV2ProkaryoteGeneRequest) Set(val *V2ProkaryoteGeneRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV2ProkaryoteGeneRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV2ProkaryoteGeneRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2ProkaryoteGeneRequest(val *V2ProkaryoteGeneRequest) *NullableV2ProkaryoteGeneRequest {
	return &NullableV2ProkaryoteGeneRequest{value: val, isSet: true}
}

func (v NullableV2ProkaryoteGeneRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2ProkaryoteGeneRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


