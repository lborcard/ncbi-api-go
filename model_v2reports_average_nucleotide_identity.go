/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2reportsAverageNucleotideIdentity struct for V2reportsAverageNucleotideIdentity
type V2reportsAverageNucleotideIdentity struct {
	TaxonomyCheckStatus *V2reportsAverageNucleotideIdentityTaxonomyCheckStatus `json:"taxonomy_check_status,omitempty"`
	MatchStatus *V2reportsAverageNucleotideIdentityMatchStatus `json:"match_status,omitempty"`
	SubmittedOrganism *string `json:"submitted_organism,omitempty"`
	SubmittedSpecies *string `json:"submitted_species,omitempty"`
	Category *V2reportsANITypeCategory `json:"category,omitempty"`
	SubmittedAniMatch *V2reportsANIMatch `json:"submitted_ani_match,omitempty"`
	BestAniMatch *V2reportsANIMatch `json:"best_ani_match,omitempty"`
	Comment *string `json:"comment,omitempty"`
}

// NewV2reportsAverageNucleotideIdentity instantiates a new V2reportsAverageNucleotideIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsAverageNucleotideIdentity() *V2reportsAverageNucleotideIdentity {
	this := V2reportsAverageNucleotideIdentity{}
	var taxonomyCheckStatus V2reportsAverageNucleotideIdentityTaxonomyCheckStatus = V2REPORTSAVERAGENUCLEOTIDEIDENTITYTAXONOMYCHECKSTATUS_TAXONOMY_CHECK_STATUS_UNKNOWN
	this.TaxonomyCheckStatus = &taxonomyCheckStatus
	var matchStatus V2reportsAverageNucleotideIdentityMatchStatus = V2REPORTSAVERAGENUCLEOTIDEIDENTITYMATCHSTATUS_BEST_MATCH_STATUS_UNKNOWN
	this.MatchStatus = &matchStatus
	var category V2reportsANITypeCategory = V2REPORTSANITYPECATEGORY_ANI_CATEGORY_UNKNOWN
	this.Category = &category
	return &this
}

// NewV2reportsAverageNucleotideIdentityWithDefaults instantiates a new V2reportsAverageNucleotideIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsAverageNucleotideIdentityWithDefaults() *V2reportsAverageNucleotideIdentity {
	this := V2reportsAverageNucleotideIdentity{}
	var taxonomyCheckStatus V2reportsAverageNucleotideIdentityTaxonomyCheckStatus = V2REPORTSAVERAGENUCLEOTIDEIDENTITYTAXONOMYCHECKSTATUS_TAXONOMY_CHECK_STATUS_UNKNOWN
	this.TaxonomyCheckStatus = &taxonomyCheckStatus
	var matchStatus V2reportsAverageNucleotideIdentityMatchStatus = V2REPORTSAVERAGENUCLEOTIDEIDENTITYMATCHSTATUS_BEST_MATCH_STATUS_UNKNOWN
	this.MatchStatus = &matchStatus
	var category V2reportsANITypeCategory = V2REPORTSANITYPECATEGORY_ANI_CATEGORY_UNKNOWN
	this.Category = &category
	return &this
}

// GetTaxonomyCheckStatus returns the TaxonomyCheckStatus field value if set, zero value otherwise.
func (o *V2reportsAverageNucleotideIdentity) GetTaxonomyCheckStatus() V2reportsAverageNucleotideIdentityTaxonomyCheckStatus {
	if o == nil || o.TaxonomyCheckStatus == nil {
		var ret V2reportsAverageNucleotideIdentityTaxonomyCheckStatus
		return ret
	}
	return *o.TaxonomyCheckStatus
}

// GetTaxonomyCheckStatusOk returns a tuple with the TaxonomyCheckStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAverageNucleotideIdentity) GetTaxonomyCheckStatusOk() (*V2reportsAverageNucleotideIdentityTaxonomyCheckStatus, bool) {
	if o == nil || o.TaxonomyCheckStatus == nil {
		return nil, false
	}
	return o.TaxonomyCheckStatus, true
}

// HasTaxonomyCheckStatus returns a boolean if a field has been set.
func (o *V2reportsAverageNucleotideIdentity) HasTaxonomyCheckStatus() bool {
	if o != nil && o.TaxonomyCheckStatus != nil {
		return true
	}

	return false
}

// SetTaxonomyCheckStatus gets a reference to the given V2reportsAverageNucleotideIdentityTaxonomyCheckStatus and assigns it to the TaxonomyCheckStatus field.
func (o *V2reportsAverageNucleotideIdentity) SetTaxonomyCheckStatus(v V2reportsAverageNucleotideIdentityTaxonomyCheckStatus) {
	o.TaxonomyCheckStatus = &v
}

// GetMatchStatus returns the MatchStatus field value if set, zero value otherwise.
func (o *V2reportsAverageNucleotideIdentity) GetMatchStatus() V2reportsAverageNucleotideIdentityMatchStatus {
	if o == nil || o.MatchStatus == nil {
		var ret V2reportsAverageNucleotideIdentityMatchStatus
		return ret
	}
	return *o.MatchStatus
}

// GetMatchStatusOk returns a tuple with the MatchStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAverageNucleotideIdentity) GetMatchStatusOk() (*V2reportsAverageNucleotideIdentityMatchStatus, bool) {
	if o == nil || o.MatchStatus == nil {
		return nil, false
	}
	return o.MatchStatus, true
}

// HasMatchStatus returns a boolean if a field has been set.
func (o *V2reportsAverageNucleotideIdentity) HasMatchStatus() bool {
	if o != nil && o.MatchStatus != nil {
		return true
	}

	return false
}

// SetMatchStatus gets a reference to the given V2reportsAverageNucleotideIdentityMatchStatus and assigns it to the MatchStatus field.
func (o *V2reportsAverageNucleotideIdentity) SetMatchStatus(v V2reportsAverageNucleotideIdentityMatchStatus) {
	o.MatchStatus = &v
}

// GetSubmittedOrganism returns the SubmittedOrganism field value if set, zero value otherwise.
func (o *V2reportsAverageNucleotideIdentity) GetSubmittedOrganism() string {
	if o == nil || o.SubmittedOrganism == nil {
		var ret string
		return ret
	}
	return *o.SubmittedOrganism
}

// GetSubmittedOrganismOk returns a tuple with the SubmittedOrganism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAverageNucleotideIdentity) GetSubmittedOrganismOk() (*string, bool) {
	if o == nil || o.SubmittedOrganism == nil {
		return nil, false
	}
	return o.SubmittedOrganism, true
}

// HasSubmittedOrganism returns a boolean if a field has been set.
func (o *V2reportsAverageNucleotideIdentity) HasSubmittedOrganism() bool {
	if o != nil && o.SubmittedOrganism != nil {
		return true
	}

	return false
}

// SetSubmittedOrganism gets a reference to the given string and assigns it to the SubmittedOrganism field.
func (o *V2reportsAverageNucleotideIdentity) SetSubmittedOrganism(v string) {
	o.SubmittedOrganism = &v
}

// GetSubmittedSpecies returns the SubmittedSpecies field value if set, zero value otherwise.
func (o *V2reportsAverageNucleotideIdentity) GetSubmittedSpecies() string {
	if o == nil || o.SubmittedSpecies == nil {
		var ret string
		return ret
	}
	return *o.SubmittedSpecies
}

// GetSubmittedSpeciesOk returns a tuple with the SubmittedSpecies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAverageNucleotideIdentity) GetSubmittedSpeciesOk() (*string, bool) {
	if o == nil || o.SubmittedSpecies == nil {
		return nil, false
	}
	return o.SubmittedSpecies, true
}

// HasSubmittedSpecies returns a boolean if a field has been set.
func (o *V2reportsAverageNucleotideIdentity) HasSubmittedSpecies() bool {
	if o != nil && o.SubmittedSpecies != nil {
		return true
	}

	return false
}

// SetSubmittedSpecies gets a reference to the given string and assigns it to the SubmittedSpecies field.
func (o *V2reportsAverageNucleotideIdentity) SetSubmittedSpecies(v string) {
	o.SubmittedSpecies = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *V2reportsAverageNucleotideIdentity) GetCategory() V2reportsANITypeCategory {
	if o == nil || o.Category == nil {
		var ret V2reportsANITypeCategory
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAverageNucleotideIdentity) GetCategoryOk() (*V2reportsANITypeCategory, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *V2reportsAverageNucleotideIdentity) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given V2reportsANITypeCategory and assigns it to the Category field.
func (o *V2reportsAverageNucleotideIdentity) SetCategory(v V2reportsANITypeCategory) {
	o.Category = &v
}

// GetSubmittedAniMatch returns the SubmittedAniMatch field value if set, zero value otherwise.
func (o *V2reportsAverageNucleotideIdentity) GetSubmittedAniMatch() V2reportsANIMatch {
	if o == nil || o.SubmittedAniMatch == nil {
		var ret V2reportsANIMatch
		return ret
	}
	return *o.SubmittedAniMatch
}

// GetSubmittedAniMatchOk returns a tuple with the SubmittedAniMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAverageNucleotideIdentity) GetSubmittedAniMatchOk() (*V2reportsANIMatch, bool) {
	if o == nil || o.SubmittedAniMatch == nil {
		return nil, false
	}
	return o.SubmittedAniMatch, true
}

// HasSubmittedAniMatch returns a boolean if a field has been set.
func (o *V2reportsAverageNucleotideIdentity) HasSubmittedAniMatch() bool {
	if o != nil && o.SubmittedAniMatch != nil {
		return true
	}

	return false
}

// SetSubmittedAniMatch gets a reference to the given V2reportsANIMatch and assigns it to the SubmittedAniMatch field.
func (o *V2reportsAverageNucleotideIdentity) SetSubmittedAniMatch(v V2reportsANIMatch) {
	o.SubmittedAniMatch = &v
}

// GetBestAniMatch returns the BestAniMatch field value if set, zero value otherwise.
func (o *V2reportsAverageNucleotideIdentity) GetBestAniMatch() V2reportsANIMatch {
	if o == nil || o.BestAniMatch == nil {
		var ret V2reportsANIMatch
		return ret
	}
	return *o.BestAniMatch
}

// GetBestAniMatchOk returns a tuple with the BestAniMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAverageNucleotideIdentity) GetBestAniMatchOk() (*V2reportsANIMatch, bool) {
	if o == nil || o.BestAniMatch == nil {
		return nil, false
	}
	return o.BestAniMatch, true
}

// HasBestAniMatch returns a boolean if a field has been set.
func (o *V2reportsAverageNucleotideIdentity) HasBestAniMatch() bool {
	if o != nil && o.BestAniMatch != nil {
		return true
	}

	return false
}

// SetBestAniMatch gets a reference to the given V2reportsANIMatch and assigns it to the BestAniMatch field.
func (o *V2reportsAverageNucleotideIdentity) SetBestAniMatch(v V2reportsANIMatch) {
	o.BestAniMatch = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *V2reportsAverageNucleotideIdentity) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAverageNucleotideIdentity) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *V2reportsAverageNucleotideIdentity) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *V2reportsAverageNucleotideIdentity) SetComment(v string) {
	o.Comment = &v
}

func (o V2reportsAverageNucleotideIdentity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TaxonomyCheckStatus != nil {
		toSerialize["taxonomy_check_status"] = o.TaxonomyCheckStatus
	}
	if o.MatchStatus != nil {
		toSerialize["match_status"] = o.MatchStatus
	}
	if o.SubmittedOrganism != nil {
		toSerialize["submitted_organism"] = o.SubmittedOrganism
	}
	if o.SubmittedSpecies != nil {
		toSerialize["submitted_species"] = o.SubmittedSpecies
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.SubmittedAniMatch != nil {
		toSerialize["submitted_ani_match"] = o.SubmittedAniMatch
	}
	if o.BestAniMatch != nil {
		toSerialize["best_ani_match"] = o.BestAniMatch
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsAverageNucleotideIdentity struct {
	value *V2reportsAverageNucleotideIdentity
	isSet bool
}

func (v NullableV2reportsAverageNucleotideIdentity) Get() *V2reportsAverageNucleotideIdentity {
	return v.value
}

func (v *NullableV2reportsAverageNucleotideIdentity) Set(val *V2reportsAverageNucleotideIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsAverageNucleotideIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsAverageNucleotideIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsAverageNucleotideIdentity(val *V2reportsAverageNucleotideIdentity) *NullableV2reportsAverageNucleotideIdentity {
	return &NullableV2reportsAverageNucleotideIdentity{value: val, isSet: true}
}

func (v NullableV2reportsAverageNucleotideIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsAverageNucleotideIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


