/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2reportsConservedDomain struct for V2reportsConservedDomain
type V2reportsConservedDomain struct {
	Accession *string `json:"accession,omitempty"`
	Name *string `json:"name,omitempty"`
	Range *V2reportsRange `json:"range,omitempty"`
}

// NewV2reportsConservedDomain instantiates a new V2reportsConservedDomain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsConservedDomain() *V2reportsConservedDomain {
	this := V2reportsConservedDomain{}
	return &this
}

// NewV2reportsConservedDomainWithDefaults instantiates a new V2reportsConservedDomain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsConservedDomainWithDefaults() *V2reportsConservedDomain {
	this := V2reportsConservedDomain{}
	return &this
}

// GetAccession returns the Accession field value if set, zero value otherwise.
func (o *V2reportsConservedDomain) GetAccession() string {
	if o == nil || o.Accession == nil {
		var ret string
		return ret
	}
	return *o.Accession
}

// GetAccessionOk returns a tuple with the Accession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsConservedDomain) GetAccessionOk() (*string, bool) {
	if o == nil || o.Accession == nil {
		return nil, false
	}
	return o.Accession, true
}

// HasAccession returns a boolean if a field has been set.
func (o *V2reportsConservedDomain) HasAccession() bool {
	if o != nil && o.Accession != nil {
		return true
	}

	return false
}

// SetAccession gets a reference to the given string and assigns it to the Accession field.
func (o *V2reportsConservedDomain) SetAccession(v string) {
	o.Accession = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V2reportsConservedDomain) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsConservedDomain) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V2reportsConservedDomain) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V2reportsConservedDomain) SetName(v string) {
	o.Name = &v
}

// GetRange returns the Range field value if set, zero value otherwise.
func (o *V2reportsConservedDomain) GetRange() V2reportsRange {
	if o == nil || o.Range == nil {
		var ret V2reportsRange
		return ret
	}
	return *o.Range
}

// GetRangeOk returns a tuple with the Range field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsConservedDomain) GetRangeOk() (*V2reportsRange, bool) {
	if o == nil || o.Range == nil {
		return nil, false
	}
	return o.Range, true
}

// HasRange returns a boolean if a field has been set.
func (o *V2reportsConservedDomain) HasRange() bool {
	if o != nil && o.Range != nil {
		return true
	}

	return false
}

// SetRange gets a reference to the given V2reportsRange and assigns it to the Range field.
func (o *V2reportsConservedDomain) SetRange(v V2reportsRange) {
	o.Range = &v
}

func (o V2reportsConservedDomain) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accession != nil {
		toSerialize["accession"] = o.Accession
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Range != nil {
		toSerialize["range"] = o.Range
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsConservedDomain struct {
	value *V2reportsConservedDomain
	isSet bool
}

func (v NullableV2reportsConservedDomain) Get() *V2reportsConservedDomain {
	return v.value
}

func (v *NullableV2reportsConservedDomain) Set(val *V2reportsConservedDomain) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsConservedDomain) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsConservedDomain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsConservedDomain(val *V2reportsConservedDomain) *NullableV2reportsConservedDomain {
	return &NullableV2reportsConservedDomain{value: val, isSet: true}
}

func (v NullableV2reportsConservedDomain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsConservedDomain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


