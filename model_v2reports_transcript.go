/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2reportsTranscript struct for V2reportsTranscript
type V2reportsTranscript struct {
	AccessionVersion *string `json:"accession_version,omitempty"`
	Name *string `json:"name,omitempty"`
	Length *int32 `json:"length,omitempty"`
	Cds *V2reportsSeqRangeSet `json:"cds,omitempty"`
	GenomicLocations []V2reportsGenomicLocation `json:"genomic_locations,omitempty"`
	EnsemblTranscript *string `json:"ensembl_transcript,omitempty"`
	Protein *V2reportsProtein `json:"protein,omitempty"`
	Type *V2reportsTranscriptTranscriptType `json:"type,omitempty"`
}

// NewV2reportsTranscript instantiates a new V2reportsTranscript object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsTranscript() *V2reportsTranscript {
	this := V2reportsTranscript{}
	var type_ V2reportsTranscriptTranscriptType = V2REPORTSTRANSCRIPTTRANSCRIPTTYPE_UNKNOWN
	this.Type = &type_
	return &this
}

// NewV2reportsTranscriptWithDefaults instantiates a new V2reportsTranscript object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsTranscriptWithDefaults() *V2reportsTranscript {
	this := V2reportsTranscript{}
	var type_ V2reportsTranscriptTranscriptType = V2REPORTSTRANSCRIPTTRANSCRIPTTYPE_UNKNOWN
	this.Type = &type_
	return &this
}

// GetAccessionVersion returns the AccessionVersion field value if set, zero value otherwise.
func (o *V2reportsTranscript) GetAccessionVersion() string {
	if o == nil || o.AccessionVersion == nil {
		var ret string
		return ret
	}
	return *o.AccessionVersion
}

// GetAccessionVersionOk returns a tuple with the AccessionVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTranscript) GetAccessionVersionOk() (*string, bool) {
	if o == nil || o.AccessionVersion == nil {
		return nil, false
	}
	return o.AccessionVersion, true
}

// HasAccessionVersion returns a boolean if a field has been set.
func (o *V2reportsTranscript) HasAccessionVersion() bool {
	if o != nil && o.AccessionVersion != nil {
		return true
	}

	return false
}

// SetAccessionVersion gets a reference to the given string and assigns it to the AccessionVersion field.
func (o *V2reportsTranscript) SetAccessionVersion(v string) {
	o.AccessionVersion = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V2reportsTranscript) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTranscript) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V2reportsTranscript) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V2reportsTranscript) SetName(v string) {
	o.Name = &v
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *V2reportsTranscript) GetLength() int32 {
	if o == nil || o.Length == nil {
		var ret int32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTranscript) GetLengthOk() (*int32, bool) {
	if o == nil || o.Length == nil {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *V2reportsTranscript) HasLength() bool {
	if o != nil && o.Length != nil {
		return true
	}

	return false
}

// SetLength gets a reference to the given int32 and assigns it to the Length field.
func (o *V2reportsTranscript) SetLength(v int32) {
	o.Length = &v
}

// GetCds returns the Cds field value if set, zero value otherwise.
func (o *V2reportsTranscript) GetCds() V2reportsSeqRangeSet {
	if o == nil || o.Cds == nil {
		var ret V2reportsSeqRangeSet
		return ret
	}
	return *o.Cds
}

// GetCdsOk returns a tuple with the Cds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTranscript) GetCdsOk() (*V2reportsSeqRangeSet, bool) {
	if o == nil || o.Cds == nil {
		return nil, false
	}
	return o.Cds, true
}

// HasCds returns a boolean if a field has been set.
func (o *V2reportsTranscript) HasCds() bool {
	if o != nil && o.Cds != nil {
		return true
	}

	return false
}

// SetCds gets a reference to the given V2reportsSeqRangeSet and assigns it to the Cds field.
func (o *V2reportsTranscript) SetCds(v V2reportsSeqRangeSet) {
	o.Cds = &v
}

// GetGenomicLocations returns the GenomicLocations field value if set, zero value otherwise.
func (o *V2reportsTranscript) GetGenomicLocations() []V2reportsGenomicLocation {
	if o == nil || o.GenomicLocations == nil {
		var ret []V2reportsGenomicLocation
		return ret
	}
	return o.GenomicLocations
}

// GetGenomicLocationsOk returns a tuple with the GenomicLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTranscript) GetGenomicLocationsOk() ([]V2reportsGenomicLocation, bool) {
	if o == nil || o.GenomicLocations == nil {
		return nil, false
	}
	return o.GenomicLocations, true
}

// HasGenomicLocations returns a boolean if a field has been set.
func (o *V2reportsTranscript) HasGenomicLocations() bool {
	if o != nil && o.GenomicLocations != nil {
		return true
	}

	return false
}

// SetGenomicLocations gets a reference to the given []V2reportsGenomicLocation and assigns it to the GenomicLocations field.
func (o *V2reportsTranscript) SetGenomicLocations(v []V2reportsGenomicLocation) {
	o.GenomicLocations = v
}

// GetEnsemblTranscript returns the EnsemblTranscript field value if set, zero value otherwise.
func (o *V2reportsTranscript) GetEnsemblTranscript() string {
	if o == nil || o.EnsemblTranscript == nil {
		var ret string
		return ret
	}
	return *o.EnsemblTranscript
}

// GetEnsemblTranscriptOk returns a tuple with the EnsemblTranscript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTranscript) GetEnsemblTranscriptOk() (*string, bool) {
	if o == nil || o.EnsemblTranscript == nil {
		return nil, false
	}
	return o.EnsemblTranscript, true
}

// HasEnsemblTranscript returns a boolean if a field has been set.
func (o *V2reportsTranscript) HasEnsemblTranscript() bool {
	if o != nil && o.EnsemblTranscript != nil {
		return true
	}

	return false
}

// SetEnsemblTranscript gets a reference to the given string and assigns it to the EnsemblTranscript field.
func (o *V2reportsTranscript) SetEnsemblTranscript(v string) {
	o.EnsemblTranscript = &v
}

// GetProtein returns the Protein field value if set, zero value otherwise.
func (o *V2reportsTranscript) GetProtein() V2reportsProtein {
	if o == nil || o.Protein == nil {
		var ret V2reportsProtein
		return ret
	}
	return *o.Protein
}

// GetProteinOk returns a tuple with the Protein field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTranscript) GetProteinOk() (*V2reportsProtein, bool) {
	if o == nil || o.Protein == nil {
		return nil, false
	}
	return o.Protein, true
}

// HasProtein returns a boolean if a field has been set.
func (o *V2reportsTranscript) HasProtein() bool {
	if o != nil && o.Protein != nil {
		return true
	}

	return false
}

// SetProtein gets a reference to the given V2reportsProtein and assigns it to the Protein field.
func (o *V2reportsTranscript) SetProtein(v V2reportsProtein) {
	o.Protein = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V2reportsTranscript) GetType() V2reportsTranscriptTranscriptType {
	if o == nil || o.Type == nil {
		var ret V2reportsTranscriptTranscriptType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTranscript) GetTypeOk() (*V2reportsTranscriptTranscriptType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V2reportsTranscript) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given V2reportsTranscriptTranscriptType and assigns it to the Type field.
func (o *V2reportsTranscript) SetType(v V2reportsTranscriptTranscriptType) {
	o.Type = &v
}

func (o V2reportsTranscript) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessionVersion != nil {
		toSerialize["accession_version"] = o.AccessionVersion
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Length != nil {
		toSerialize["length"] = o.Length
	}
	if o.Cds != nil {
		toSerialize["cds"] = o.Cds
	}
	if o.GenomicLocations != nil {
		toSerialize["genomic_locations"] = o.GenomicLocations
	}
	if o.EnsemblTranscript != nil {
		toSerialize["ensembl_transcript"] = o.EnsemblTranscript
	}
	if o.Protein != nil {
		toSerialize["protein"] = o.Protein
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsTranscript struct {
	value *V2reportsTranscript
	isSet bool
}

func (v NullableV2reportsTranscript) Get() *V2reportsTranscript {
	return v.value
}

func (v *NullableV2reportsTranscript) Set(val *V2reportsTranscript) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsTranscript) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsTranscript) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsTranscript(val *V2reportsTranscript) *NullableV2reportsTranscript {
	return &NullableV2reportsTranscript{value: val, isSet: true}
}

func (v NullableV2reportsTranscript) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsTranscript) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


