/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2GenomeAnnotationTableSummaryReply struct for V2GenomeAnnotationTableSummaryReply
type V2GenomeAnnotationTableSummaryReply struct {
	Accession *string `json:"accession,omitempty"`
	Chromosomes []string `json:"chromosomes,omitempty"`
	GeneTypes []string `json:"gene_types,omitempty"`
	EmptyColumns []string `json:"empty_columns,omitempty"`
}

// NewV2GenomeAnnotationTableSummaryReply instantiates a new V2GenomeAnnotationTableSummaryReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2GenomeAnnotationTableSummaryReply() *V2GenomeAnnotationTableSummaryReply {
	this := V2GenomeAnnotationTableSummaryReply{}
	return &this
}

// NewV2GenomeAnnotationTableSummaryReplyWithDefaults instantiates a new V2GenomeAnnotationTableSummaryReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2GenomeAnnotationTableSummaryReplyWithDefaults() *V2GenomeAnnotationTableSummaryReply {
	this := V2GenomeAnnotationTableSummaryReply{}
	return &this
}

// GetAccession returns the Accession field value if set, zero value otherwise.
func (o *V2GenomeAnnotationTableSummaryReply) GetAccession() string {
	if o == nil || o.Accession == nil {
		var ret string
		return ret
	}
	return *o.Accession
}

// GetAccessionOk returns a tuple with the Accession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationTableSummaryReply) GetAccessionOk() (*string, bool) {
	if o == nil || o.Accession == nil {
		return nil, false
	}
	return o.Accession, true
}

// HasAccession returns a boolean if a field has been set.
func (o *V2GenomeAnnotationTableSummaryReply) HasAccession() bool {
	if o != nil && o.Accession != nil {
		return true
	}

	return false
}

// SetAccession gets a reference to the given string and assigns it to the Accession field.
func (o *V2GenomeAnnotationTableSummaryReply) SetAccession(v string) {
	o.Accession = &v
}

// GetChromosomes returns the Chromosomes field value if set, zero value otherwise.
func (o *V2GenomeAnnotationTableSummaryReply) GetChromosomes() []string {
	if o == nil || o.Chromosomes == nil {
		var ret []string
		return ret
	}
	return o.Chromosomes
}

// GetChromosomesOk returns a tuple with the Chromosomes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationTableSummaryReply) GetChromosomesOk() ([]string, bool) {
	if o == nil || o.Chromosomes == nil {
		return nil, false
	}
	return o.Chromosomes, true
}

// HasChromosomes returns a boolean if a field has been set.
func (o *V2GenomeAnnotationTableSummaryReply) HasChromosomes() bool {
	if o != nil && o.Chromosomes != nil {
		return true
	}

	return false
}

// SetChromosomes gets a reference to the given []string and assigns it to the Chromosomes field.
func (o *V2GenomeAnnotationTableSummaryReply) SetChromosomes(v []string) {
	o.Chromosomes = v
}

// GetGeneTypes returns the GeneTypes field value if set, zero value otherwise.
func (o *V2GenomeAnnotationTableSummaryReply) GetGeneTypes() []string {
	if o == nil || o.GeneTypes == nil {
		var ret []string
		return ret
	}
	return o.GeneTypes
}

// GetGeneTypesOk returns a tuple with the GeneTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationTableSummaryReply) GetGeneTypesOk() ([]string, bool) {
	if o == nil || o.GeneTypes == nil {
		return nil, false
	}
	return o.GeneTypes, true
}

// HasGeneTypes returns a boolean if a field has been set.
func (o *V2GenomeAnnotationTableSummaryReply) HasGeneTypes() bool {
	if o != nil && o.GeneTypes != nil {
		return true
	}

	return false
}

// SetGeneTypes gets a reference to the given []string and assigns it to the GeneTypes field.
func (o *V2GenomeAnnotationTableSummaryReply) SetGeneTypes(v []string) {
	o.GeneTypes = v
}

// GetEmptyColumns returns the EmptyColumns field value if set, zero value otherwise.
func (o *V2GenomeAnnotationTableSummaryReply) GetEmptyColumns() []string {
	if o == nil || o.EmptyColumns == nil {
		var ret []string
		return ret
	}
	return o.EmptyColumns
}

// GetEmptyColumnsOk returns a tuple with the EmptyColumns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationTableSummaryReply) GetEmptyColumnsOk() ([]string, bool) {
	if o == nil || o.EmptyColumns == nil {
		return nil, false
	}
	return o.EmptyColumns, true
}

// HasEmptyColumns returns a boolean if a field has been set.
func (o *V2GenomeAnnotationTableSummaryReply) HasEmptyColumns() bool {
	if o != nil && o.EmptyColumns != nil {
		return true
	}

	return false
}

// SetEmptyColumns gets a reference to the given []string and assigns it to the EmptyColumns field.
func (o *V2GenomeAnnotationTableSummaryReply) SetEmptyColumns(v []string) {
	o.EmptyColumns = v
}

func (o V2GenomeAnnotationTableSummaryReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accession != nil {
		toSerialize["accession"] = o.Accession
	}
	if o.Chromosomes != nil {
		toSerialize["chromosomes"] = o.Chromosomes
	}
	if o.GeneTypes != nil {
		toSerialize["gene_types"] = o.GeneTypes
	}
	if o.EmptyColumns != nil {
		toSerialize["empty_columns"] = o.EmptyColumns
	}
	return json.Marshal(toSerialize)
}

type NullableV2GenomeAnnotationTableSummaryReply struct {
	value *V2GenomeAnnotationTableSummaryReply
	isSet bool
}

func (v NullableV2GenomeAnnotationTableSummaryReply) Get() *V2GenomeAnnotationTableSummaryReply {
	return v.value
}

func (v *NullableV2GenomeAnnotationTableSummaryReply) Set(val *V2GenomeAnnotationTableSummaryReply) {
	v.value = val
	v.isSet = true
}

func (v NullableV2GenomeAnnotationTableSummaryReply) IsSet() bool {
	return v.isSet
}

func (v *NullableV2GenomeAnnotationTableSummaryReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2GenomeAnnotationTableSummaryReply(val *V2GenomeAnnotationTableSummaryReply) *NullableV2GenomeAnnotationTableSummaryReply {
	return &NullableV2GenomeAnnotationTableSummaryReply{value: val, isSet: true}
}

func (v NullableV2GenomeAnnotationTableSummaryReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2GenomeAnnotationTableSummaryReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


