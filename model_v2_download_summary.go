/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
	"time"
)

// V2DownloadSummary struct for V2DownloadSummary
type V2DownloadSummary struct {
	RecordCount *int32 `json:"record_count,omitempty"`
	AssemblyCount *int32 `json:"assembly_count,omitempty"`
	ResourceUpdatedOn *time.Time `json:"resource_updated_on,omitempty"`
	Hydrated *V2DownloadSummaryHydrated `json:"hydrated,omitempty"`
	Dehydrated *V2DownloadSummaryDehydrated `json:"dehydrated,omitempty"`
	Errors []V2reportsError `json:"errors,omitempty"`
	Messages []V2reportsMessage `json:"messages,omitempty"`
	AvailableFiles *V2DownloadSummaryAvailableFiles `json:"available_files,omitempty"`
}

// NewV2DownloadSummary instantiates a new V2DownloadSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2DownloadSummary() *V2DownloadSummary {
	this := V2DownloadSummary{}
	return &this
}

// NewV2DownloadSummaryWithDefaults instantiates a new V2DownloadSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2DownloadSummaryWithDefaults() *V2DownloadSummary {
	this := V2DownloadSummary{}
	return &this
}

// GetRecordCount returns the RecordCount field value if set, zero value otherwise.
func (o *V2DownloadSummary) GetRecordCount() int32 {
	if o == nil || o.RecordCount == nil {
		var ret int32
		return ret
	}
	return *o.RecordCount
}

// GetRecordCountOk returns a tuple with the RecordCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DownloadSummary) GetRecordCountOk() (*int32, bool) {
	if o == nil || o.RecordCount == nil {
		return nil, false
	}
	return o.RecordCount, true
}

// HasRecordCount returns a boolean if a field has been set.
func (o *V2DownloadSummary) HasRecordCount() bool {
	if o != nil && o.RecordCount != nil {
		return true
	}

	return false
}

// SetRecordCount gets a reference to the given int32 and assigns it to the RecordCount field.
func (o *V2DownloadSummary) SetRecordCount(v int32) {
	o.RecordCount = &v
}

// GetAssemblyCount returns the AssemblyCount field value if set, zero value otherwise.
func (o *V2DownloadSummary) GetAssemblyCount() int32 {
	if o == nil || o.AssemblyCount == nil {
		var ret int32
		return ret
	}
	return *o.AssemblyCount
}

// GetAssemblyCountOk returns a tuple with the AssemblyCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DownloadSummary) GetAssemblyCountOk() (*int32, bool) {
	if o == nil || o.AssemblyCount == nil {
		return nil, false
	}
	return o.AssemblyCount, true
}

// HasAssemblyCount returns a boolean if a field has been set.
func (o *V2DownloadSummary) HasAssemblyCount() bool {
	if o != nil && o.AssemblyCount != nil {
		return true
	}

	return false
}

// SetAssemblyCount gets a reference to the given int32 and assigns it to the AssemblyCount field.
func (o *V2DownloadSummary) SetAssemblyCount(v int32) {
	o.AssemblyCount = &v
}

// GetResourceUpdatedOn returns the ResourceUpdatedOn field value if set, zero value otherwise.
func (o *V2DownloadSummary) GetResourceUpdatedOn() time.Time {
	if o == nil || o.ResourceUpdatedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.ResourceUpdatedOn
}

// GetResourceUpdatedOnOk returns a tuple with the ResourceUpdatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DownloadSummary) GetResourceUpdatedOnOk() (*time.Time, bool) {
	if o == nil || o.ResourceUpdatedOn == nil {
		return nil, false
	}
	return o.ResourceUpdatedOn, true
}

// HasResourceUpdatedOn returns a boolean if a field has been set.
func (o *V2DownloadSummary) HasResourceUpdatedOn() bool {
	if o != nil && o.ResourceUpdatedOn != nil {
		return true
	}

	return false
}

// SetResourceUpdatedOn gets a reference to the given time.Time and assigns it to the ResourceUpdatedOn field.
func (o *V2DownloadSummary) SetResourceUpdatedOn(v time.Time) {
	o.ResourceUpdatedOn = &v
}

// GetHydrated returns the Hydrated field value if set, zero value otherwise.
func (o *V2DownloadSummary) GetHydrated() V2DownloadSummaryHydrated {
	if o == nil || o.Hydrated == nil {
		var ret V2DownloadSummaryHydrated
		return ret
	}
	return *o.Hydrated
}

// GetHydratedOk returns a tuple with the Hydrated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DownloadSummary) GetHydratedOk() (*V2DownloadSummaryHydrated, bool) {
	if o == nil || o.Hydrated == nil {
		return nil, false
	}
	return o.Hydrated, true
}

// HasHydrated returns a boolean if a field has been set.
func (o *V2DownloadSummary) HasHydrated() bool {
	if o != nil && o.Hydrated != nil {
		return true
	}

	return false
}

// SetHydrated gets a reference to the given V2DownloadSummaryHydrated and assigns it to the Hydrated field.
func (o *V2DownloadSummary) SetHydrated(v V2DownloadSummaryHydrated) {
	o.Hydrated = &v
}

// GetDehydrated returns the Dehydrated field value if set, zero value otherwise.
func (o *V2DownloadSummary) GetDehydrated() V2DownloadSummaryDehydrated {
	if o == nil || o.Dehydrated == nil {
		var ret V2DownloadSummaryDehydrated
		return ret
	}
	return *o.Dehydrated
}

// GetDehydratedOk returns a tuple with the Dehydrated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DownloadSummary) GetDehydratedOk() (*V2DownloadSummaryDehydrated, bool) {
	if o == nil || o.Dehydrated == nil {
		return nil, false
	}
	return o.Dehydrated, true
}

// HasDehydrated returns a boolean if a field has been set.
func (o *V2DownloadSummary) HasDehydrated() bool {
	if o != nil && o.Dehydrated != nil {
		return true
	}

	return false
}

// SetDehydrated gets a reference to the given V2DownloadSummaryDehydrated and assigns it to the Dehydrated field.
func (o *V2DownloadSummary) SetDehydrated(v V2DownloadSummaryDehydrated) {
	o.Dehydrated = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *V2DownloadSummary) GetErrors() []V2reportsError {
	if o == nil || o.Errors == nil {
		var ret []V2reportsError
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DownloadSummary) GetErrorsOk() ([]V2reportsError, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *V2DownloadSummary) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []V2reportsError and assigns it to the Errors field.
func (o *V2DownloadSummary) SetErrors(v []V2reportsError) {
	o.Errors = v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *V2DownloadSummary) GetMessages() []V2reportsMessage {
	if o == nil || o.Messages == nil {
		var ret []V2reportsMessage
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DownloadSummary) GetMessagesOk() ([]V2reportsMessage, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *V2DownloadSummary) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []V2reportsMessage and assigns it to the Messages field.
func (o *V2DownloadSummary) SetMessages(v []V2reportsMessage) {
	o.Messages = v
}

// GetAvailableFiles returns the AvailableFiles field value if set, zero value otherwise.
func (o *V2DownloadSummary) GetAvailableFiles() V2DownloadSummaryAvailableFiles {
	if o == nil || o.AvailableFiles == nil {
		var ret V2DownloadSummaryAvailableFiles
		return ret
	}
	return *o.AvailableFiles
}

// GetAvailableFilesOk returns a tuple with the AvailableFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DownloadSummary) GetAvailableFilesOk() (*V2DownloadSummaryAvailableFiles, bool) {
	if o == nil || o.AvailableFiles == nil {
		return nil, false
	}
	return o.AvailableFiles, true
}

// HasAvailableFiles returns a boolean if a field has been set.
func (o *V2DownloadSummary) HasAvailableFiles() bool {
	if o != nil && o.AvailableFiles != nil {
		return true
	}

	return false
}

// SetAvailableFiles gets a reference to the given V2DownloadSummaryAvailableFiles and assigns it to the AvailableFiles field.
func (o *V2DownloadSummary) SetAvailableFiles(v V2DownloadSummaryAvailableFiles) {
	o.AvailableFiles = &v
}

func (o V2DownloadSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RecordCount != nil {
		toSerialize["record_count"] = o.RecordCount
	}
	if o.AssemblyCount != nil {
		toSerialize["assembly_count"] = o.AssemblyCount
	}
	if o.ResourceUpdatedOn != nil {
		toSerialize["resource_updated_on"] = o.ResourceUpdatedOn
	}
	if o.Hydrated != nil {
		toSerialize["hydrated"] = o.Hydrated
	}
	if o.Dehydrated != nil {
		toSerialize["dehydrated"] = o.Dehydrated
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	if o.AvailableFiles != nil {
		toSerialize["available_files"] = o.AvailableFiles
	}
	return json.Marshal(toSerialize)
}

type NullableV2DownloadSummary struct {
	value *V2DownloadSummary
	isSet bool
}

func (v NullableV2DownloadSummary) Get() *V2DownloadSummary {
	return v.value
}

func (v *NullableV2DownloadSummary) Set(val *V2DownloadSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableV2DownloadSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableV2DownloadSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2DownloadSummary(val *V2DownloadSummary) *NullableV2DownloadSummary {
	return &NullableV2DownloadSummary{value: val, isSet: true}
}

func (v NullableV2DownloadSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2DownloadSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


