/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2AssemblyLinksReplyAssemblyLink struct for V2AssemblyLinksReplyAssemblyLink
type V2AssemblyLinksReplyAssemblyLink struct {
	Accession *string `json:"accession,omitempty"`
	AssemblyLinkType *V2AssemblyLinksReplyAssemblyLinkType `json:"assembly_link_type,omitempty"`
	ResourceLink *string `json:"resource_link,omitempty"`
	LinkedIdentifiers []string `json:"linked_identifiers,omitempty"`
}

// NewV2AssemblyLinksReplyAssemblyLink instantiates a new V2AssemblyLinksReplyAssemblyLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2AssemblyLinksReplyAssemblyLink() *V2AssemblyLinksReplyAssemblyLink {
	this := V2AssemblyLinksReplyAssemblyLink{}
	var assemblyLinkType V2AssemblyLinksReplyAssemblyLinkType = "DEFAULT"
	this.AssemblyLinkType = &assemblyLinkType
	return &this
}

// NewV2AssemblyLinksReplyAssemblyLinkWithDefaults instantiates a new V2AssemblyLinksReplyAssemblyLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2AssemblyLinksReplyAssemblyLinkWithDefaults() *V2AssemblyLinksReplyAssemblyLink {
	this := V2AssemblyLinksReplyAssemblyLink{}
	var assemblyLinkType V2AssemblyLinksReplyAssemblyLinkType = "DEFAULT"
	this.AssemblyLinkType = &assemblyLinkType
	return &this
}

// GetAccession returns the Accession field value if set, zero value otherwise.
func (o *V2AssemblyLinksReplyAssemblyLink) GetAccession() string {
	if o == nil || o.Accession == nil {
		var ret string
		return ret
	}
	return *o.Accession
}

// GetAccessionOk returns a tuple with the Accession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyLinksReplyAssemblyLink) GetAccessionOk() (*string, bool) {
	if o == nil || o.Accession == nil {
		return nil, false
	}
	return o.Accession, true
}

// HasAccession returns a boolean if a field has been set.
func (o *V2AssemblyLinksReplyAssemblyLink) HasAccession() bool {
	if o != nil && o.Accession != nil {
		return true
	}

	return false
}

// SetAccession gets a reference to the given string and assigns it to the Accession field.
func (o *V2AssemblyLinksReplyAssemblyLink) SetAccession(v string) {
	o.Accession = &v
}

// GetAssemblyLinkType returns the AssemblyLinkType field value if set, zero value otherwise.
func (o *V2AssemblyLinksReplyAssemblyLink) GetAssemblyLinkType() V2AssemblyLinksReplyAssemblyLinkType {
	if o == nil || o.AssemblyLinkType == nil {
		var ret V2AssemblyLinksReplyAssemblyLinkType
		return ret
	}
	return *o.AssemblyLinkType
}

// GetAssemblyLinkTypeOk returns a tuple with the AssemblyLinkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyLinksReplyAssemblyLink) GetAssemblyLinkTypeOk() (*V2AssemblyLinksReplyAssemblyLinkType, bool) {
	if o == nil || o.AssemblyLinkType == nil {
		return nil, false
	}
	return o.AssemblyLinkType, true
}

// HasAssemblyLinkType returns a boolean if a field has been set.
func (o *V2AssemblyLinksReplyAssemblyLink) HasAssemblyLinkType() bool {
	if o != nil && o.AssemblyLinkType != nil {
		return true
	}

	return false
}

// SetAssemblyLinkType gets a reference to the given V2AssemblyLinksReplyAssemblyLinkType and assigns it to the AssemblyLinkType field.
func (o *V2AssemblyLinksReplyAssemblyLink) SetAssemblyLinkType(v V2AssemblyLinksReplyAssemblyLinkType) {
	o.AssemblyLinkType = &v
}

// GetResourceLink returns the ResourceLink field value if set, zero value otherwise.
func (o *V2AssemblyLinksReplyAssemblyLink) GetResourceLink() string {
	if o == nil || o.ResourceLink == nil {
		var ret string
		return ret
	}
	return *o.ResourceLink
}

// GetResourceLinkOk returns a tuple with the ResourceLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyLinksReplyAssemblyLink) GetResourceLinkOk() (*string, bool) {
	if o == nil || o.ResourceLink == nil {
		return nil, false
	}
	return o.ResourceLink, true
}

// HasResourceLink returns a boolean if a field has been set.
func (o *V2AssemblyLinksReplyAssemblyLink) HasResourceLink() bool {
	if o != nil && o.ResourceLink != nil {
		return true
	}

	return false
}

// SetResourceLink gets a reference to the given string and assigns it to the ResourceLink field.
func (o *V2AssemblyLinksReplyAssemblyLink) SetResourceLink(v string) {
	o.ResourceLink = &v
}

// GetLinkedIdentifiers returns the LinkedIdentifiers field value if set, zero value otherwise.
func (o *V2AssemblyLinksReplyAssemblyLink) GetLinkedIdentifiers() []string {
	if o == nil || o.LinkedIdentifiers == nil {
		var ret []string
		return ret
	}
	return o.LinkedIdentifiers
}

// GetLinkedIdentifiersOk returns a tuple with the LinkedIdentifiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyLinksReplyAssemblyLink) GetLinkedIdentifiersOk() ([]string, bool) {
	if o == nil || o.LinkedIdentifiers == nil {
		return nil, false
	}
	return o.LinkedIdentifiers, true
}

// HasLinkedIdentifiers returns a boolean if a field has been set.
func (o *V2AssemblyLinksReplyAssemblyLink) HasLinkedIdentifiers() bool {
	if o != nil && o.LinkedIdentifiers != nil {
		return true
	}

	return false
}

// SetLinkedIdentifiers gets a reference to the given []string and assigns it to the LinkedIdentifiers field.
func (o *V2AssemblyLinksReplyAssemblyLink) SetLinkedIdentifiers(v []string) {
	o.LinkedIdentifiers = v
}

func (o V2AssemblyLinksReplyAssemblyLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accession != nil {
		toSerialize["accession"] = o.Accession
	}
	if o.AssemblyLinkType != nil {
		toSerialize["assembly_link_type"] = o.AssemblyLinkType
	}
	if o.ResourceLink != nil {
		toSerialize["resource_link"] = o.ResourceLink
	}
	if o.LinkedIdentifiers != nil {
		toSerialize["linked_identifiers"] = o.LinkedIdentifiers
	}
	return json.Marshal(toSerialize)
}

type NullableV2AssemblyLinksReplyAssemblyLink struct {
	value *V2AssemblyLinksReplyAssemblyLink
	isSet bool
}

func (v NullableV2AssemblyLinksReplyAssemblyLink) Get() *V2AssemblyLinksReplyAssemblyLink {
	return v.value
}

func (v *NullableV2AssemblyLinksReplyAssemblyLink) Set(val *V2AssemblyLinksReplyAssemblyLink) {
	v.value = val
	v.isSet = true
}

func (v NullableV2AssemblyLinksReplyAssemblyLink) IsSet() bool {
	return v.isSet
}

func (v *NullableV2AssemblyLinksReplyAssemblyLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2AssemblyLinksReplyAssemblyLink(val *V2AssemblyLinksReplyAssemblyLink) *NullableV2AssemblyLinksReplyAssemblyLink {
	return &NullableV2AssemblyLinksReplyAssemblyLink{value: val, isSet: true}
}

func (v NullableV2AssemblyLinksReplyAssemblyLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2AssemblyLinksReplyAssemblyLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


