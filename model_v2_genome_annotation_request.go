/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2GenomeAnnotationRequest struct for V2GenomeAnnotationRequest
type V2GenomeAnnotationRequest struct {
	Accession *string `json:"accession,omitempty"`
	AnnotationIds []string `json:"annotation_ids,omitempty"`
	Symbols []string `json:"symbols,omitempty"`
	Locations []string `json:"locations,omitempty"`
	GeneTypes []string `json:"gene_types,omitempty"`
	SearchText []string `json:"search_text,omitempty"`
	Sort []V2SortField `json:"sort,omitempty"`
	IncludeAnnotationType []V2GenomeAnnotationRequestAnnotationType `json:"include_annotation_type,omitempty"`
	PageSize *int32 `json:"page_size,omitempty"`
	TableFields []string `json:"table_fields,omitempty"`
	TableFormat *V2GenomeAnnotationRequestGenomeAnnotationTableFormat `json:"table_format,omitempty"`
	IncludeTabularHeader *V2IncludeTabularHeader `json:"include_tabular_header,omitempty"`
	PageToken *string `json:"page_token,omitempty"`
}

// NewV2GenomeAnnotationRequest instantiates a new V2GenomeAnnotationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2GenomeAnnotationRequest() *V2GenomeAnnotationRequest {
	this := V2GenomeAnnotationRequest{}
	var tableFormat V2GenomeAnnotationRequestGenomeAnnotationTableFormat = V2GENOMEANNOTATIONREQUESTGENOMEANNOTATIONTABLEFORMAT_NO_TABLE
	this.TableFormat = &tableFormat
	var includeTabularHeader V2IncludeTabularHeader = V2INCLUDETABULARHEADER_FIRST_PAGE_ONLY
	this.IncludeTabularHeader = &includeTabularHeader
	return &this
}

// NewV2GenomeAnnotationRequestWithDefaults instantiates a new V2GenomeAnnotationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2GenomeAnnotationRequestWithDefaults() *V2GenomeAnnotationRequest {
	this := V2GenomeAnnotationRequest{}
	var tableFormat V2GenomeAnnotationRequestGenomeAnnotationTableFormat = V2GENOMEANNOTATIONREQUESTGENOMEANNOTATIONTABLEFORMAT_NO_TABLE
	this.TableFormat = &tableFormat
	var includeTabularHeader V2IncludeTabularHeader = V2INCLUDETABULARHEADER_FIRST_PAGE_ONLY
	this.IncludeTabularHeader = &includeTabularHeader
	return &this
}

// GetAccession returns the Accession field value if set, zero value otherwise.
func (o *V2GenomeAnnotationRequest) GetAccession() string {
	if o == nil || o.Accession == nil {
		var ret string
		return ret
	}
	return *o.Accession
}

// GetAccessionOk returns a tuple with the Accession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationRequest) GetAccessionOk() (*string, bool) {
	if o == nil || o.Accession == nil {
		return nil, false
	}
	return o.Accession, true
}

// HasAccession returns a boolean if a field has been set.
func (o *V2GenomeAnnotationRequest) HasAccession() bool {
	if o != nil && o.Accession != nil {
		return true
	}

	return false
}

// SetAccession gets a reference to the given string and assigns it to the Accession field.
func (o *V2GenomeAnnotationRequest) SetAccession(v string) {
	o.Accession = &v
}

// GetAnnotationIds returns the AnnotationIds field value if set, zero value otherwise.
func (o *V2GenomeAnnotationRequest) GetAnnotationIds() []string {
	if o == nil || o.AnnotationIds == nil {
		var ret []string
		return ret
	}
	return o.AnnotationIds
}

// GetAnnotationIdsOk returns a tuple with the AnnotationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationRequest) GetAnnotationIdsOk() ([]string, bool) {
	if o == nil || o.AnnotationIds == nil {
		return nil, false
	}
	return o.AnnotationIds, true
}

// HasAnnotationIds returns a boolean if a field has been set.
func (o *V2GenomeAnnotationRequest) HasAnnotationIds() bool {
	if o != nil && o.AnnotationIds != nil {
		return true
	}

	return false
}

// SetAnnotationIds gets a reference to the given []string and assigns it to the AnnotationIds field.
func (o *V2GenomeAnnotationRequest) SetAnnotationIds(v []string) {
	o.AnnotationIds = v
}

// GetSymbols returns the Symbols field value if set, zero value otherwise.
func (o *V2GenomeAnnotationRequest) GetSymbols() []string {
	if o == nil || o.Symbols == nil {
		var ret []string
		return ret
	}
	return o.Symbols
}

// GetSymbolsOk returns a tuple with the Symbols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationRequest) GetSymbolsOk() ([]string, bool) {
	if o == nil || o.Symbols == nil {
		return nil, false
	}
	return o.Symbols, true
}

// HasSymbols returns a boolean if a field has been set.
func (o *V2GenomeAnnotationRequest) HasSymbols() bool {
	if o != nil && o.Symbols != nil {
		return true
	}

	return false
}

// SetSymbols gets a reference to the given []string and assigns it to the Symbols field.
func (o *V2GenomeAnnotationRequest) SetSymbols(v []string) {
	o.Symbols = v
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *V2GenomeAnnotationRequest) GetLocations() []string {
	if o == nil || o.Locations == nil {
		var ret []string
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationRequest) GetLocationsOk() ([]string, bool) {
	if o == nil || o.Locations == nil {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *V2GenomeAnnotationRequest) HasLocations() bool {
	if o != nil && o.Locations != nil {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []string and assigns it to the Locations field.
func (o *V2GenomeAnnotationRequest) SetLocations(v []string) {
	o.Locations = v
}

// GetGeneTypes returns the GeneTypes field value if set, zero value otherwise.
func (o *V2GenomeAnnotationRequest) GetGeneTypes() []string {
	if o == nil || o.GeneTypes == nil {
		var ret []string
		return ret
	}
	return o.GeneTypes
}

// GetGeneTypesOk returns a tuple with the GeneTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationRequest) GetGeneTypesOk() ([]string, bool) {
	if o == nil || o.GeneTypes == nil {
		return nil, false
	}
	return o.GeneTypes, true
}

// HasGeneTypes returns a boolean if a field has been set.
func (o *V2GenomeAnnotationRequest) HasGeneTypes() bool {
	if o != nil && o.GeneTypes != nil {
		return true
	}

	return false
}

// SetGeneTypes gets a reference to the given []string and assigns it to the GeneTypes field.
func (o *V2GenomeAnnotationRequest) SetGeneTypes(v []string) {
	o.GeneTypes = v
}

// GetSearchText returns the SearchText field value if set, zero value otherwise.
func (o *V2GenomeAnnotationRequest) GetSearchText() []string {
	if o == nil || o.SearchText == nil {
		var ret []string
		return ret
	}
	return o.SearchText
}

// GetSearchTextOk returns a tuple with the SearchText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationRequest) GetSearchTextOk() ([]string, bool) {
	if o == nil || o.SearchText == nil {
		return nil, false
	}
	return o.SearchText, true
}

// HasSearchText returns a boolean if a field has been set.
func (o *V2GenomeAnnotationRequest) HasSearchText() bool {
	if o != nil && o.SearchText != nil {
		return true
	}

	return false
}

// SetSearchText gets a reference to the given []string and assigns it to the SearchText field.
func (o *V2GenomeAnnotationRequest) SetSearchText(v []string) {
	o.SearchText = v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *V2GenomeAnnotationRequest) GetSort() []V2SortField {
	if o == nil || o.Sort == nil {
		var ret []V2SortField
		return ret
	}
	return o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationRequest) GetSortOk() ([]V2SortField, bool) {
	if o == nil || o.Sort == nil {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *V2GenomeAnnotationRequest) HasSort() bool {
	if o != nil && o.Sort != nil {
		return true
	}

	return false
}

// SetSort gets a reference to the given []V2SortField and assigns it to the Sort field.
func (o *V2GenomeAnnotationRequest) SetSort(v []V2SortField) {
	o.Sort = v
}

// GetIncludeAnnotationType returns the IncludeAnnotationType field value if set, zero value otherwise.
func (o *V2GenomeAnnotationRequest) GetIncludeAnnotationType() []V2GenomeAnnotationRequestAnnotationType {
	if o == nil || o.IncludeAnnotationType == nil {
		var ret []V2GenomeAnnotationRequestAnnotationType
		return ret
	}
	return o.IncludeAnnotationType
}

// GetIncludeAnnotationTypeOk returns a tuple with the IncludeAnnotationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationRequest) GetIncludeAnnotationTypeOk() ([]V2GenomeAnnotationRequestAnnotationType, bool) {
	if o == nil || o.IncludeAnnotationType == nil {
		return nil, false
	}
	return o.IncludeAnnotationType, true
}

// HasIncludeAnnotationType returns a boolean if a field has been set.
func (o *V2GenomeAnnotationRequest) HasIncludeAnnotationType() bool {
	if o != nil && o.IncludeAnnotationType != nil {
		return true
	}

	return false
}

// SetIncludeAnnotationType gets a reference to the given []V2GenomeAnnotationRequestAnnotationType and assigns it to the IncludeAnnotationType field.
func (o *V2GenomeAnnotationRequest) SetIncludeAnnotationType(v []V2GenomeAnnotationRequestAnnotationType) {
	o.IncludeAnnotationType = v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *V2GenomeAnnotationRequest) GetPageSize() int32 {
	if o == nil || o.PageSize == nil {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil || o.PageSize == nil {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *V2GenomeAnnotationRequest) HasPageSize() bool {
	if o != nil && o.PageSize != nil {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *V2GenomeAnnotationRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetTableFields returns the TableFields field value if set, zero value otherwise.
func (o *V2GenomeAnnotationRequest) GetTableFields() []string {
	if o == nil || o.TableFields == nil {
		var ret []string
		return ret
	}
	return o.TableFields
}

// GetTableFieldsOk returns a tuple with the TableFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationRequest) GetTableFieldsOk() ([]string, bool) {
	if o == nil || o.TableFields == nil {
		return nil, false
	}
	return o.TableFields, true
}

// HasTableFields returns a boolean if a field has been set.
func (o *V2GenomeAnnotationRequest) HasTableFields() bool {
	if o != nil && o.TableFields != nil {
		return true
	}

	return false
}

// SetTableFields gets a reference to the given []string and assigns it to the TableFields field.
func (o *V2GenomeAnnotationRequest) SetTableFields(v []string) {
	o.TableFields = v
}

// GetTableFormat returns the TableFormat field value if set, zero value otherwise.
func (o *V2GenomeAnnotationRequest) GetTableFormat() V2GenomeAnnotationRequestGenomeAnnotationTableFormat {
	if o == nil || o.TableFormat == nil {
		var ret V2GenomeAnnotationRequestGenomeAnnotationTableFormat
		return ret
	}
	return *o.TableFormat
}

// GetTableFormatOk returns a tuple with the TableFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationRequest) GetTableFormatOk() (*V2GenomeAnnotationRequestGenomeAnnotationTableFormat, bool) {
	if o == nil || o.TableFormat == nil {
		return nil, false
	}
	return o.TableFormat, true
}

// HasTableFormat returns a boolean if a field has been set.
func (o *V2GenomeAnnotationRequest) HasTableFormat() bool {
	if o != nil && o.TableFormat != nil {
		return true
	}

	return false
}

// SetTableFormat gets a reference to the given V2GenomeAnnotationRequestGenomeAnnotationTableFormat and assigns it to the TableFormat field.
func (o *V2GenomeAnnotationRequest) SetTableFormat(v V2GenomeAnnotationRequestGenomeAnnotationTableFormat) {
	o.TableFormat = &v
}

// GetIncludeTabularHeader returns the IncludeTabularHeader field value if set, zero value otherwise.
func (o *V2GenomeAnnotationRequest) GetIncludeTabularHeader() V2IncludeTabularHeader {
	if o == nil || o.IncludeTabularHeader == nil {
		var ret V2IncludeTabularHeader
		return ret
	}
	return *o.IncludeTabularHeader
}

// GetIncludeTabularHeaderOk returns a tuple with the IncludeTabularHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationRequest) GetIncludeTabularHeaderOk() (*V2IncludeTabularHeader, bool) {
	if o == nil || o.IncludeTabularHeader == nil {
		return nil, false
	}
	return o.IncludeTabularHeader, true
}

// HasIncludeTabularHeader returns a boolean if a field has been set.
func (o *V2GenomeAnnotationRequest) HasIncludeTabularHeader() bool {
	if o != nil && o.IncludeTabularHeader != nil {
		return true
	}

	return false
}

// SetIncludeTabularHeader gets a reference to the given V2IncludeTabularHeader and assigns it to the IncludeTabularHeader field.
func (o *V2GenomeAnnotationRequest) SetIncludeTabularHeader(v V2IncludeTabularHeader) {
	o.IncludeTabularHeader = &v
}

// GetPageToken returns the PageToken field value if set, zero value otherwise.
func (o *V2GenomeAnnotationRequest) GetPageToken() string {
	if o == nil || o.PageToken == nil {
		var ret string
		return ret
	}
	return *o.PageToken
}

// GetPageTokenOk returns a tuple with the PageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GenomeAnnotationRequest) GetPageTokenOk() (*string, bool) {
	if o == nil || o.PageToken == nil {
		return nil, false
	}
	return o.PageToken, true
}

// HasPageToken returns a boolean if a field has been set.
func (o *V2GenomeAnnotationRequest) HasPageToken() bool {
	if o != nil && o.PageToken != nil {
		return true
	}

	return false
}

// SetPageToken gets a reference to the given string and assigns it to the PageToken field.
func (o *V2GenomeAnnotationRequest) SetPageToken(v string) {
	o.PageToken = &v
}

func (o V2GenomeAnnotationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accession != nil {
		toSerialize["accession"] = o.Accession
	}
	if o.AnnotationIds != nil {
		toSerialize["annotation_ids"] = o.AnnotationIds
	}
	if o.Symbols != nil {
		toSerialize["symbols"] = o.Symbols
	}
	if o.Locations != nil {
		toSerialize["locations"] = o.Locations
	}
	if o.GeneTypes != nil {
		toSerialize["gene_types"] = o.GeneTypes
	}
	if o.SearchText != nil {
		toSerialize["search_text"] = o.SearchText
	}
	if o.Sort != nil {
		toSerialize["sort"] = o.Sort
	}
	if o.IncludeAnnotationType != nil {
		toSerialize["include_annotation_type"] = o.IncludeAnnotationType
	}
	if o.PageSize != nil {
		toSerialize["page_size"] = o.PageSize
	}
	if o.TableFields != nil {
		toSerialize["table_fields"] = o.TableFields
	}
	if o.TableFormat != nil {
		toSerialize["table_format"] = o.TableFormat
	}
	if o.IncludeTabularHeader != nil {
		toSerialize["include_tabular_header"] = o.IncludeTabularHeader
	}
	if o.PageToken != nil {
		toSerialize["page_token"] = o.PageToken
	}
	return json.Marshal(toSerialize)
}

type NullableV2GenomeAnnotationRequest struct {
	value *V2GenomeAnnotationRequest
	isSet bool
}

func (v NullableV2GenomeAnnotationRequest) Get() *V2GenomeAnnotationRequest {
	return v.value
}

func (v *NullableV2GenomeAnnotationRequest) Set(val *V2GenomeAnnotationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV2GenomeAnnotationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV2GenomeAnnotationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2GenomeAnnotationRequest(val *V2GenomeAnnotationRequest) *NullableV2GenomeAnnotationRequest {
	return &NullableV2GenomeAnnotationRequest{value: val, isSet: true}
}

func (v NullableV2GenomeAnnotationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2GenomeAnnotationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


