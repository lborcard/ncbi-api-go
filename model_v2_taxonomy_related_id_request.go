/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2TaxonomyRelatedIdRequest struct for V2TaxonomyRelatedIdRequest
type V2TaxonomyRelatedIdRequest struct {
	TaxId *int32 `json:"tax_id,omitempty"`
	IncludeLineage *bool `json:"include_lineage,omitempty"`
	IncludeSubtree *bool `json:"include_subtree,omitempty"`
	Ranks []V2reportsRankType `json:"ranks,omitempty"`
	PageSize *int32 `json:"page_size,omitempty"`
	PageToken *string `json:"page_token,omitempty"`
}

// NewV2TaxonomyRelatedIdRequest instantiates a new V2TaxonomyRelatedIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2TaxonomyRelatedIdRequest() *V2TaxonomyRelatedIdRequest {
	this := V2TaxonomyRelatedIdRequest{}
	return &this
}

// NewV2TaxonomyRelatedIdRequestWithDefaults instantiates a new V2TaxonomyRelatedIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2TaxonomyRelatedIdRequestWithDefaults() *V2TaxonomyRelatedIdRequest {
	this := V2TaxonomyRelatedIdRequest{}
	return &this
}

// GetTaxId returns the TaxId field value if set, zero value otherwise.
func (o *V2TaxonomyRelatedIdRequest) GetTaxId() int32 {
	if o == nil || o.TaxId == nil {
		var ret int32
		return ret
	}
	return *o.TaxId
}

// GetTaxIdOk returns a tuple with the TaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2TaxonomyRelatedIdRequest) GetTaxIdOk() (*int32, bool) {
	if o == nil || o.TaxId == nil {
		return nil, false
	}
	return o.TaxId, true
}

// HasTaxId returns a boolean if a field has been set.
func (o *V2TaxonomyRelatedIdRequest) HasTaxId() bool {
	if o != nil && o.TaxId != nil {
		return true
	}

	return false
}

// SetTaxId gets a reference to the given int32 and assigns it to the TaxId field.
func (o *V2TaxonomyRelatedIdRequest) SetTaxId(v int32) {
	o.TaxId = &v
}

// GetIncludeLineage returns the IncludeLineage field value if set, zero value otherwise.
func (o *V2TaxonomyRelatedIdRequest) GetIncludeLineage() bool {
	if o == nil || o.IncludeLineage == nil {
		var ret bool
		return ret
	}
	return *o.IncludeLineage
}

// GetIncludeLineageOk returns a tuple with the IncludeLineage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2TaxonomyRelatedIdRequest) GetIncludeLineageOk() (*bool, bool) {
	if o == nil || o.IncludeLineage == nil {
		return nil, false
	}
	return o.IncludeLineage, true
}

// HasIncludeLineage returns a boolean if a field has been set.
func (o *V2TaxonomyRelatedIdRequest) HasIncludeLineage() bool {
	if o != nil && o.IncludeLineage != nil {
		return true
	}

	return false
}

// SetIncludeLineage gets a reference to the given bool and assigns it to the IncludeLineage field.
func (o *V2TaxonomyRelatedIdRequest) SetIncludeLineage(v bool) {
	o.IncludeLineage = &v
}

// GetIncludeSubtree returns the IncludeSubtree field value if set, zero value otherwise.
func (o *V2TaxonomyRelatedIdRequest) GetIncludeSubtree() bool {
	if o == nil || o.IncludeSubtree == nil {
		var ret bool
		return ret
	}
	return *o.IncludeSubtree
}

// GetIncludeSubtreeOk returns a tuple with the IncludeSubtree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2TaxonomyRelatedIdRequest) GetIncludeSubtreeOk() (*bool, bool) {
	if o == nil || o.IncludeSubtree == nil {
		return nil, false
	}
	return o.IncludeSubtree, true
}

// HasIncludeSubtree returns a boolean if a field has been set.
func (o *V2TaxonomyRelatedIdRequest) HasIncludeSubtree() bool {
	if o != nil && o.IncludeSubtree != nil {
		return true
	}

	return false
}

// SetIncludeSubtree gets a reference to the given bool and assigns it to the IncludeSubtree field.
func (o *V2TaxonomyRelatedIdRequest) SetIncludeSubtree(v bool) {
	o.IncludeSubtree = &v
}

// GetRanks returns the Ranks field value if set, zero value otherwise.
func (o *V2TaxonomyRelatedIdRequest) GetRanks() []V2reportsRankType {
	if o == nil || o.Ranks == nil {
		var ret []V2reportsRankType
		return ret
	}
	return o.Ranks
}

// GetRanksOk returns a tuple with the Ranks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2TaxonomyRelatedIdRequest) GetRanksOk() ([]V2reportsRankType, bool) {
	if o == nil || o.Ranks == nil {
		return nil, false
	}
	return o.Ranks, true
}

// HasRanks returns a boolean if a field has been set.
func (o *V2TaxonomyRelatedIdRequest) HasRanks() bool {
	if o != nil && o.Ranks != nil {
		return true
	}

	return false
}

// SetRanks gets a reference to the given []V2reportsRankType and assigns it to the Ranks field.
func (o *V2TaxonomyRelatedIdRequest) SetRanks(v []V2reportsRankType) {
	o.Ranks = v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *V2TaxonomyRelatedIdRequest) GetPageSize() int32 {
	if o == nil || o.PageSize == nil {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2TaxonomyRelatedIdRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil || o.PageSize == nil {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *V2TaxonomyRelatedIdRequest) HasPageSize() bool {
	if o != nil && o.PageSize != nil {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *V2TaxonomyRelatedIdRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetPageToken returns the PageToken field value if set, zero value otherwise.
func (o *V2TaxonomyRelatedIdRequest) GetPageToken() string {
	if o == nil || o.PageToken == nil {
		var ret string
		return ret
	}
	return *o.PageToken
}

// GetPageTokenOk returns a tuple with the PageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2TaxonomyRelatedIdRequest) GetPageTokenOk() (*string, bool) {
	if o == nil || o.PageToken == nil {
		return nil, false
	}
	return o.PageToken, true
}

// HasPageToken returns a boolean if a field has been set.
func (o *V2TaxonomyRelatedIdRequest) HasPageToken() bool {
	if o != nil && o.PageToken != nil {
		return true
	}

	return false
}

// SetPageToken gets a reference to the given string and assigns it to the PageToken field.
func (o *V2TaxonomyRelatedIdRequest) SetPageToken(v string) {
	o.PageToken = &v
}

func (o V2TaxonomyRelatedIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TaxId != nil {
		toSerialize["tax_id"] = o.TaxId
	}
	if o.IncludeLineage != nil {
		toSerialize["include_lineage"] = o.IncludeLineage
	}
	if o.IncludeSubtree != nil {
		toSerialize["include_subtree"] = o.IncludeSubtree
	}
	if o.Ranks != nil {
		toSerialize["ranks"] = o.Ranks
	}
	if o.PageSize != nil {
		toSerialize["page_size"] = o.PageSize
	}
	if o.PageToken != nil {
		toSerialize["page_token"] = o.PageToken
	}
	return json.Marshal(toSerialize)
}

type NullableV2TaxonomyRelatedIdRequest struct {
	value *V2TaxonomyRelatedIdRequest
	isSet bool
}

func (v NullableV2TaxonomyRelatedIdRequest) Get() *V2TaxonomyRelatedIdRequest {
	return v.value
}

func (v *NullableV2TaxonomyRelatedIdRequest) Set(val *V2TaxonomyRelatedIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV2TaxonomyRelatedIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV2TaxonomyRelatedIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2TaxonomyRelatedIdRequest(val *V2TaxonomyRelatedIdRequest) *NullableV2TaxonomyRelatedIdRequest {
	return &NullableV2TaxonomyRelatedIdRequest{value: val, isSet: true}
}

func (v NullableV2TaxonomyRelatedIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2TaxonomyRelatedIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


