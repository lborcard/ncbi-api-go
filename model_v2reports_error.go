/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2reportsError struct for V2reportsError
type V2reportsError struct {
	AssemblyErrorCode *V2reportsErrorAssemblyErrorCode `json:"assembly_error_code,omitempty"`
	GeneErrorCode *V2reportsErrorGeneErrorCode `json:"gene_error_code,omitempty"`
	OrganelleErrorCode *V2reportsErrorOrganelleErrorCode `json:"organelle_error_code,omitempty"`
	VirusErrorCode *V2reportsErrorVirusErrorCode `json:"virus_error_code,omitempty"`
	TaxonomyErrorCode *V2reportsErrorTaxonomyErrorCode `json:"taxonomy_error_code,omitempty"`
	Reason *string `json:"reason,omitempty"`
	Message *string `json:"message,omitempty"`
	InvalidIdentifiers []string `json:"invalid_identifiers,omitempty"`
}

// NewV2reportsError instantiates a new V2reportsError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsError() *V2reportsError {
	this := V2reportsError{}
	var assemblyErrorCode V2reportsErrorAssemblyErrorCode = V2REPORTSERRORASSEMBLYERRORCODE_UNKNOWN_ASSEMBLY_ERROR_CODE
	this.AssemblyErrorCode = &assemblyErrorCode
	var geneErrorCode V2reportsErrorGeneErrorCode = V2REPORTSERRORGENEERRORCODE_UNKNOWN_GENE_ERROR_CODE
	this.GeneErrorCode = &geneErrorCode
	var organelleErrorCode V2reportsErrorOrganelleErrorCode = V2REPORTSERRORORGANELLEERRORCODE_UNKNOWN_ORGANELLE_ERROR_CODE
	this.OrganelleErrorCode = &organelleErrorCode
	var virusErrorCode V2reportsErrorVirusErrorCode = V2REPORTSERRORVIRUSERRORCODE_UNKNOWN_VIRUS_ERROR_CODE
	this.VirusErrorCode = &virusErrorCode
	var taxonomyErrorCode V2reportsErrorTaxonomyErrorCode = V2REPORTSERRORTAXONOMYERRORCODE_UNKNOWN_TAXONOMY_ERROR_CODE
	this.TaxonomyErrorCode = &taxonomyErrorCode
	return &this
}

// NewV2reportsErrorWithDefaults instantiates a new V2reportsError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsErrorWithDefaults() *V2reportsError {
	this := V2reportsError{}
	var assemblyErrorCode V2reportsErrorAssemblyErrorCode = V2REPORTSERRORASSEMBLYERRORCODE_UNKNOWN_ASSEMBLY_ERROR_CODE
	this.AssemblyErrorCode = &assemblyErrorCode
	var geneErrorCode V2reportsErrorGeneErrorCode = V2REPORTSERRORGENEERRORCODE_UNKNOWN_GENE_ERROR_CODE
	this.GeneErrorCode = &geneErrorCode
	var organelleErrorCode V2reportsErrorOrganelleErrorCode = V2REPORTSERRORORGANELLEERRORCODE_UNKNOWN_ORGANELLE_ERROR_CODE
	this.OrganelleErrorCode = &organelleErrorCode
	var virusErrorCode V2reportsErrorVirusErrorCode = V2REPORTSERRORVIRUSERRORCODE_UNKNOWN_VIRUS_ERROR_CODE
	this.VirusErrorCode = &virusErrorCode
	var taxonomyErrorCode V2reportsErrorTaxonomyErrorCode = V2REPORTSERRORTAXONOMYERRORCODE_UNKNOWN_TAXONOMY_ERROR_CODE
	this.TaxonomyErrorCode = &taxonomyErrorCode
	return &this
}

// GetAssemblyErrorCode returns the AssemblyErrorCode field value if set, zero value otherwise.
func (o *V2reportsError) GetAssemblyErrorCode() V2reportsErrorAssemblyErrorCode {
	if o == nil || o.AssemblyErrorCode == nil {
		var ret V2reportsErrorAssemblyErrorCode
		return ret
	}
	return *o.AssemblyErrorCode
}

// GetAssemblyErrorCodeOk returns a tuple with the AssemblyErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsError) GetAssemblyErrorCodeOk() (*V2reportsErrorAssemblyErrorCode, bool) {
	if o == nil || o.AssemblyErrorCode == nil {
		return nil, false
	}
	return o.AssemblyErrorCode, true
}

// HasAssemblyErrorCode returns a boolean if a field has been set.
func (o *V2reportsError) HasAssemblyErrorCode() bool {
	if o != nil && o.AssemblyErrorCode != nil {
		return true
	}

	return false
}

// SetAssemblyErrorCode gets a reference to the given V2reportsErrorAssemblyErrorCode and assigns it to the AssemblyErrorCode field.
func (o *V2reportsError) SetAssemblyErrorCode(v V2reportsErrorAssemblyErrorCode) {
	o.AssemblyErrorCode = &v
}

// GetGeneErrorCode returns the GeneErrorCode field value if set, zero value otherwise.
func (o *V2reportsError) GetGeneErrorCode() V2reportsErrorGeneErrorCode {
	if o == nil || o.GeneErrorCode == nil {
		var ret V2reportsErrorGeneErrorCode
		return ret
	}
	return *o.GeneErrorCode
}

// GetGeneErrorCodeOk returns a tuple with the GeneErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsError) GetGeneErrorCodeOk() (*V2reportsErrorGeneErrorCode, bool) {
	if o == nil || o.GeneErrorCode == nil {
		return nil, false
	}
	return o.GeneErrorCode, true
}

// HasGeneErrorCode returns a boolean if a field has been set.
func (o *V2reportsError) HasGeneErrorCode() bool {
	if o != nil && o.GeneErrorCode != nil {
		return true
	}

	return false
}

// SetGeneErrorCode gets a reference to the given V2reportsErrorGeneErrorCode and assigns it to the GeneErrorCode field.
func (o *V2reportsError) SetGeneErrorCode(v V2reportsErrorGeneErrorCode) {
	o.GeneErrorCode = &v
}

// GetOrganelleErrorCode returns the OrganelleErrorCode field value if set, zero value otherwise.
func (o *V2reportsError) GetOrganelleErrorCode() V2reportsErrorOrganelleErrorCode {
	if o == nil || o.OrganelleErrorCode == nil {
		var ret V2reportsErrorOrganelleErrorCode
		return ret
	}
	return *o.OrganelleErrorCode
}

// GetOrganelleErrorCodeOk returns a tuple with the OrganelleErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsError) GetOrganelleErrorCodeOk() (*V2reportsErrorOrganelleErrorCode, bool) {
	if o == nil || o.OrganelleErrorCode == nil {
		return nil, false
	}
	return o.OrganelleErrorCode, true
}

// HasOrganelleErrorCode returns a boolean if a field has been set.
func (o *V2reportsError) HasOrganelleErrorCode() bool {
	if o != nil && o.OrganelleErrorCode != nil {
		return true
	}

	return false
}

// SetOrganelleErrorCode gets a reference to the given V2reportsErrorOrganelleErrorCode and assigns it to the OrganelleErrorCode field.
func (o *V2reportsError) SetOrganelleErrorCode(v V2reportsErrorOrganelleErrorCode) {
	o.OrganelleErrorCode = &v
}

// GetVirusErrorCode returns the VirusErrorCode field value if set, zero value otherwise.
func (o *V2reportsError) GetVirusErrorCode() V2reportsErrorVirusErrorCode {
	if o == nil || o.VirusErrorCode == nil {
		var ret V2reportsErrorVirusErrorCode
		return ret
	}
	return *o.VirusErrorCode
}

// GetVirusErrorCodeOk returns a tuple with the VirusErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsError) GetVirusErrorCodeOk() (*V2reportsErrorVirusErrorCode, bool) {
	if o == nil || o.VirusErrorCode == nil {
		return nil, false
	}
	return o.VirusErrorCode, true
}

// HasVirusErrorCode returns a boolean if a field has been set.
func (o *V2reportsError) HasVirusErrorCode() bool {
	if o != nil && o.VirusErrorCode != nil {
		return true
	}

	return false
}

// SetVirusErrorCode gets a reference to the given V2reportsErrorVirusErrorCode and assigns it to the VirusErrorCode field.
func (o *V2reportsError) SetVirusErrorCode(v V2reportsErrorVirusErrorCode) {
	o.VirusErrorCode = &v
}

// GetTaxonomyErrorCode returns the TaxonomyErrorCode field value if set, zero value otherwise.
func (o *V2reportsError) GetTaxonomyErrorCode() V2reportsErrorTaxonomyErrorCode {
	if o == nil || o.TaxonomyErrorCode == nil {
		var ret V2reportsErrorTaxonomyErrorCode
		return ret
	}
	return *o.TaxonomyErrorCode
}

// GetTaxonomyErrorCodeOk returns a tuple with the TaxonomyErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsError) GetTaxonomyErrorCodeOk() (*V2reportsErrorTaxonomyErrorCode, bool) {
	if o == nil || o.TaxonomyErrorCode == nil {
		return nil, false
	}
	return o.TaxonomyErrorCode, true
}

// HasTaxonomyErrorCode returns a boolean if a field has been set.
func (o *V2reportsError) HasTaxonomyErrorCode() bool {
	if o != nil && o.TaxonomyErrorCode != nil {
		return true
	}

	return false
}

// SetTaxonomyErrorCode gets a reference to the given V2reportsErrorTaxonomyErrorCode and assigns it to the TaxonomyErrorCode field.
func (o *V2reportsError) SetTaxonomyErrorCode(v V2reportsErrorTaxonomyErrorCode) {
	o.TaxonomyErrorCode = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *V2reportsError) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsError) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *V2reportsError) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *V2reportsError) SetReason(v string) {
	o.Reason = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *V2reportsError) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsError) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *V2reportsError) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *V2reportsError) SetMessage(v string) {
	o.Message = &v
}

// GetInvalidIdentifiers returns the InvalidIdentifiers field value if set, zero value otherwise.
func (o *V2reportsError) GetInvalidIdentifiers() []string {
	if o == nil || o.InvalidIdentifiers == nil {
		var ret []string
		return ret
	}
	return o.InvalidIdentifiers
}

// GetInvalidIdentifiersOk returns a tuple with the InvalidIdentifiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsError) GetInvalidIdentifiersOk() ([]string, bool) {
	if o == nil || o.InvalidIdentifiers == nil {
		return nil, false
	}
	return o.InvalidIdentifiers, true
}

// HasInvalidIdentifiers returns a boolean if a field has been set.
func (o *V2reportsError) HasInvalidIdentifiers() bool {
	if o != nil && o.InvalidIdentifiers != nil {
		return true
	}

	return false
}

// SetInvalidIdentifiers gets a reference to the given []string and assigns it to the InvalidIdentifiers field.
func (o *V2reportsError) SetInvalidIdentifiers(v []string) {
	o.InvalidIdentifiers = v
}

func (o V2reportsError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssemblyErrorCode != nil {
		toSerialize["assembly_error_code"] = o.AssemblyErrorCode
	}
	if o.GeneErrorCode != nil {
		toSerialize["gene_error_code"] = o.GeneErrorCode
	}
	if o.OrganelleErrorCode != nil {
		toSerialize["organelle_error_code"] = o.OrganelleErrorCode
	}
	if o.VirusErrorCode != nil {
		toSerialize["virus_error_code"] = o.VirusErrorCode
	}
	if o.TaxonomyErrorCode != nil {
		toSerialize["taxonomy_error_code"] = o.TaxonomyErrorCode
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.InvalidIdentifiers != nil {
		toSerialize["invalid_identifiers"] = o.InvalidIdentifiers
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsError struct {
	value *V2reportsError
	isSet bool
}

func (v NullableV2reportsError) Get() *V2reportsError {
	return v.value
}

func (v *NullableV2reportsError) Set(val *V2reportsError) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsError) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsError(val *V2reportsError) *NullableV2reportsError {
	return &NullableV2reportsError{value: val, isSet: true}
}

func (v NullableV2reportsError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


