/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2reportsAtypicalInfo struct for V2reportsAtypicalInfo
type V2reportsAtypicalInfo struct {
	IsAtypical *bool `json:"is_atypical,omitempty"`
	Warnings []string `json:"warnings,omitempty"`
}

// NewV2reportsAtypicalInfo instantiates a new V2reportsAtypicalInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsAtypicalInfo() *V2reportsAtypicalInfo {
	this := V2reportsAtypicalInfo{}
	return &this
}

// NewV2reportsAtypicalInfoWithDefaults instantiates a new V2reportsAtypicalInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsAtypicalInfoWithDefaults() *V2reportsAtypicalInfo {
	this := V2reportsAtypicalInfo{}
	return &this
}

// GetIsAtypical returns the IsAtypical field value if set, zero value otherwise.
func (o *V2reportsAtypicalInfo) GetIsAtypical() bool {
	if o == nil || o.IsAtypical == nil {
		var ret bool
		return ret
	}
	return *o.IsAtypical
}

// GetIsAtypicalOk returns a tuple with the IsAtypical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAtypicalInfo) GetIsAtypicalOk() (*bool, bool) {
	if o == nil || o.IsAtypical == nil {
		return nil, false
	}
	return o.IsAtypical, true
}

// HasIsAtypical returns a boolean if a field has been set.
func (o *V2reportsAtypicalInfo) HasIsAtypical() bool {
	if o != nil && o.IsAtypical != nil {
		return true
	}

	return false
}

// SetIsAtypical gets a reference to the given bool and assigns it to the IsAtypical field.
func (o *V2reportsAtypicalInfo) SetIsAtypical(v bool) {
	o.IsAtypical = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *V2reportsAtypicalInfo) GetWarnings() []string {
	if o == nil || o.Warnings == nil {
		var ret []string
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAtypicalInfo) GetWarningsOk() ([]string, bool) {
	if o == nil || o.Warnings == nil {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *V2reportsAtypicalInfo) HasWarnings() bool {
	if o != nil && o.Warnings != nil {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []string and assigns it to the Warnings field.
func (o *V2reportsAtypicalInfo) SetWarnings(v []string) {
	o.Warnings = v
}

func (o V2reportsAtypicalInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsAtypical != nil {
		toSerialize["is_atypical"] = o.IsAtypical
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsAtypicalInfo struct {
	value *V2reportsAtypicalInfo
	isSet bool
}

func (v NullableV2reportsAtypicalInfo) Get() *V2reportsAtypicalInfo {
	return v.value
}

func (v *NullableV2reportsAtypicalInfo) Set(val *V2reportsAtypicalInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsAtypicalInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsAtypicalInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsAtypicalInfo(val *V2reportsAtypicalInfo) *NullableV2reportsAtypicalInfo {
	return &NullableV2reportsAtypicalInfo{value: val, isSet: true}
}

func (v NullableV2reportsAtypicalInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsAtypicalInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


