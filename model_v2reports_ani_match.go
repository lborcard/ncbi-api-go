/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2reportsANIMatch struct for V2reportsANIMatch
type V2reportsANIMatch struct {
	Assembly *string `json:"assembly,omitempty"`
	OrganismName *string `json:"organism_name,omitempty"`
	Category *V2reportsANITypeCategory `json:"category,omitempty"`
	Ani *float32 `json:"ani,omitempty"`
	AssemblyCoverage *float32 `json:"assembly_coverage,omitempty"`
	TypeAssemblyCoverage *float32 `json:"type_assembly_coverage,omitempty"`
}

// NewV2reportsANIMatch instantiates a new V2reportsANIMatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsANIMatch() *V2reportsANIMatch {
	this := V2reportsANIMatch{}
	var category V2reportsANITypeCategory = V2REPORTSANITYPECATEGORY_ANI_CATEGORY_UNKNOWN
	this.Category = &category
	return &this
}

// NewV2reportsANIMatchWithDefaults instantiates a new V2reportsANIMatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsANIMatchWithDefaults() *V2reportsANIMatch {
	this := V2reportsANIMatch{}
	var category V2reportsANITypeCategory = V2REPORTSANITYPECATEGORY_ANI_CATEGORY_UNKNOWN
	this.Category = &category
	return &this
}

// GetAssembly returns the Assembly field value if set, zero value otherwise.
func (o *V2reportsANIMatch) GetAssembly() string {
	if o == nil || o.Assembly == nil {
		var ret string
		return ret
	}
	return *o.Assembly
}

// GetAssemblyOk returns a tuple with the Assembly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsANIMatch) GetAssemblyOk() (*string, bool) {
	if o == nil || o.Assembly == nil {
		return nil, false
	}
	return o.Assembly, true
}

// HasAssembly returns a boolean if a field has been set.
func (o *V2reportsANIMatch) HasAssembly() bool {
	if o != nil && o.Assembly != nil {
		return true
	}

	return false
}

// SetAssembly gets a reference to the given string and assigns it to the Assembly field.
func (o *V2reportsANIMatch) SetAssembly(v string) {
	o.Assembly = &v
}

// GetOrganismName returns the OrganismName field value if set, zero value otherwise.
func (o *V2reportsANIMatch) GetOrganismName() string {
	if o == nil || o.OrganismName == nil {
		var ret string
		return ret
	}
	return *o.OrganismName
}

// GetOrganismNameOk returns a tuple with the OrganismName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsANIMatch) GetOrganismNameOk() (*string, bool) {
	if o == nil || o.OrganismName == nil {
		return nil, false
	}
	return o.OrganismName, true
}

// HasOrganismName returns a boolean if a field has been set.
func (o *V2reportsANIMatch) HasOrganismName() bool {
	if o != nil && o.OrganismName != nil {
		return true
	}

	return false
}

// SetOrganismName gets a reference to the given string and assigns it to the OrganismName field.
func (o *V2reportsANIMatch) SetOrganismName(v string) {
	o.OrganismName = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *V2reportsANIMatch) GetCategory() V2reportsANITypeCategory {
	if o == nil || o.Category == nil {
		var ret V2reportsANITypeCategory
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsANIMatch) GetCategoryOk() (*V2reportsANITypeCategory, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *V2reportsANIMatch) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given V2reportsANITypeCategory and assigns it to the Category field.
func (o *V2reportsANIMatch) SetCategory(v V2reportsANITypeCategory) {
	o.Category = &v
}

// GetAni returns the Ani field value if set, zero value otherwise.
func (o *V2reportsANIMatch) GetAni() float32 {
	if o == nil || o.Ani == nil {
		var ret float32
		return ret
	}
	return *o.Ani
}

// GetAniOk returns a tuple with the Ani field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsANIMatch) GetAniOk() (*float32, bool) {
	if o == nil || o.Ani == nil {
		return nil, false
	}
	return o.Ani, true
}

// HasAni returns a boolean if a field has been set.
func (o *V2reportsANIMatch) HasAni() bool {
	if o != nil && o.Ani != nil {
		return true
	}

	return false
}

// SetAni gets a reference to the given float32 and assigns it to the Ani field.
func (o *V2reportsANIMatch) SetAni(v float32) {
	o.Ani = &v
}

// GetAssemblyCoverage returns the AssemblyCoverage field value if set, zero value otherwise.
func (o *V2reportsANIMatch) GetAssemblyCoverage() float32 {
	if o == nil || o.AssemblyCoverage == nil {
		var ret float32
		return ret
	}
	return *o.AssemblyCoverage
}

// GetAssemblyCoverageOk returns a tuple with the AssemblyCoverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsANIMatch) GetAssemblyCoverageOk() (*float32, bool) {
	if o == nil || o.AssemblyCoverage == nil {
		return nil, false
	}
	return o.AssemblyCoverage, true
}

// HasAssemblyCoverage returns a boolean if a field has been set.
func (o *V2reportsANIMatch) HasAssemblyCoverage() bool {
	if o != nil && o.AssemblyCoverage != nil {
		return true
	}

	return false
}

// SetAssemblyCoverage gets a reference to the given float32 and assigns it to the AssemblyCoverage field.
func (o *V2reportsANIMatch) SetAssemblyCoverage(v float32) {
	o.AssemblyCoverage = &v
}

// GetTypeAssemblyCoverage returns the TypeAssemblyCoverage field value if set, zero value otherwise.
func (o *V2reportsANIMatch) GetTypeAssemblyCoverage() float32 {
	if o == nil || o.TypeAssemblyCoverage == nil {
		var ret float32
		return ret
	}
	return *o.TypeAssemblyCoverage
}

// GetTypeAssemblyCoverageOk returns a tuple with the TypeAssemblyCoverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsANIMatch) GetTypeAssemblyCoverageOk() (*float32, bool) {
	if o == nil || o.TypeAssemblyCoverage == nil {
		return nil, false
	}
	return o.TypeAssemblyCoverage, true
}

// HasTypeAssemblyCoverage returns a boolean if a field has been set.
func (o *V2reportsANIMatch) HasTypeAssemblyCoverage() bool {
	if o != nil && o.TypeAssemblyCoverage != nil {
		return true
	}

	return false
}

// SetTypeAssemblyCoverage gets a reference to the given float32 and assigns it to the TypeAssemblyCoverage field.
func (o *V2reportsANIMatch) SetTypeAssemblyCoverage(v float32) {
	o.TypeAssemblyCoverage = &v
}

func (o V2reportsANIMatch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Assembly != nil {
		toSerialize["assembly"] = o.Assembly
	}
	if o.OrganismName != nil {
		toSerialize["organism_name"] = o.OrganismName
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.Ani != nil {
		toSerialize["ani"] = o.Ani
	}
	if o.AssemblyCoverage != nil {
		toSerialize["assembly_coverage"] = o.AssemblyCoverage
	}
	if o.TypeAssemblyCoverage != nil {
		toSerialize["type_assembly_coverage"] = o.TypeAssemblyCoverage
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsANIMatch struct {
	value *V2reportsANIMatch
	isSet bool
}

func (v NullableV2reportsANIMatch) Get() *V2reportsANIMatch {
	return v.value
}

func (v *NullableV2reportsANIMatch) Set(val *V2reportsANIMatch) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsANIMatch) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsANIMatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsANIMatch(val *V2reportsANIMatch) *NullableV2reportsANIMatch {
	return &NullableV2reportsANIMatch{value: val, isSet: true}
}

func (v NullableV2reportsANIMatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsANIMatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


