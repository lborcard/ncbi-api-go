/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2reportsBioProjectLineage struct for V2reportsBioProjectLineage
type V2reportsBioProjectLineage struct {
	Bioprojects []V2reportsBioProject `json:"bioprojects,omitempty"`
}

// NewV2reportsBioProjectLineage instantiates a new V2reportsBioProjectLineage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsBioProjectLineage() *V2reportsBioProjectLineage {
	this := V2reportsBioProjectLineage{}
	return &this
}

// NewV2reportsBioProjectLineageWithDefaults instantiates a new V2reportsBioProjectLineage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsBioProjectLineageWithDefaults() *V2reportsBioProjectLineage {
	this := V2reportsBioProjectLineage{}
	return &this
}

// GetBioprojects returns the Bioprojects field value if set, zero value otherwise.
func (o *V2reportsBioProjectLineage) GetBioprojects() []V2reportsBioProject {
	if o == nil || o.Bioprojects == nil {
		var ret []V2reportsBioProject
		return ret
	}
	return o.Bioprojects
}

// GetBioprojectsOk returns a tuple with the Bioprojects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioProjectLineage) GetBioprojectsOk() ([]V2reportsBioProject, bool) {
	if o == nil || o.Bioprojects == nil {
		return nil, false
	}
	return o.Bioprojects, true
}

// HasBioprojects returns a boolean if a field has been set.
func (o *V2reportsBioProjectLineage) HasBioprojects() bool {
	if o != nil && o.Bioprojects != nil {
		return true
	}

	return false
}

// SetBioprojects gets a reference to the given []V2reportsBioProject and assigns it to the Bioprojects field.
func (o *V2reportsBioProjectLineage) SetBioprojects(v []V2reportsBioProject) {
	o.Bioprojects = v
}

func (o V2reportsBioProjectLineage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bioprojects != nil {
		toSerialize["bioprojects"] = o.Bioprojects
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsBioProjectLineage struct {
	value *V2reportsBioProjectLineage
	isSet bool
}

func (v NullableV2reportsBioProjectLineage) Get() *V2reportsBioProjectLineage {
	return v.value
}

func (v *NullableV2reportsBioProjectLineage) Set(val *V2reportsBioProjectLineage) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsBioProjectLineage) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsBioProjectLineage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsBioProjectLineage(val *V2reportsBioProjectLineage) *NullableV2reportsBioProjectLineage {
	return &NullableV2reportsBioProjectLineage{value: val, isSet: true}
}

func (v NullableV2reportsBioProjectLineage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsBioProjectLineage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


