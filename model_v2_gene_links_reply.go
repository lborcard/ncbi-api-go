/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2GeneLinksReply struct for V2GeneLinksReply
type V2GeneLinksReply struct {
	GeneLinks []V2GeneLinksReplyGeneLink `json:"gene_links,omitempty"`
}

// NewV2GeneLinksReply instantiates a new V2GeneLinksReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2GeneLinksReply() *V2GeneLinksReply {
	this := V2GeneLinksReply{}
	return &this
}

// NewV2GeneLinksReplyWithDefaults instantiates a new V2GeneLinksReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2GeneLinksReplyWithDefaults() *V2GeneLinksReply {
	this := V2GeneLinksReply{}
	return &this
}

// GetGeneLinks returns the GeneLinks field value if set, zero value otherwise.
func (o *V2GeneLinksReply) GetGeneLinks() []V2GeneLinksReplyGeneLink {
	if o == nil || o.GeneLinks == nil {
		var ret []V2GeneLinksReplyGeneLink
		return ret
	}
	return o.GeneLinks
}

// GetGeneLinksOk returns a tuple with the GeneLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneLinksReply) GetGeneLinksOk() ([]V2GeneLinksReplyGeneLink, bool) {
	if o == nil || o.GeneLinks == nil {
		return nil, false
	}
	return o.GeneLinks, true
}

// HasGeneLinks returns a boolean if a field has been set.
func (o *V2GeneLinksReply) HasGeneLinks() bool {
	if o != nil && o.GeneLinks != nil {
		return true
	}

	return false
}

// SetGeneLinks gets a reference to the given []V2GeneLinksReplyGeneLink and assigns it to the GeneLinks field.
func (o *V2GeneLinksReply) SetGeneLinks(v []V2GeneLinksReplyGeneLink) {
	o.GeneLinks = v
}

func (o V2GeneLinksReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GeneLinks != nil {
		toSerialize["gene_links"] = o.GeneLinks
	}
	return json.Marshal(toSerialize)
}

type NullableV2GeneLinksReply struct {
	value *V2GeneLinksReply
	isSet bool
}

func (v NullableV2GeneLinksReply) Get() *V2GeneLinksReply {
	return v.value
}

func (v *NullableV2GeneLinksReply) Set(val *V2GeneLinksReply) {
	v.value = val
	v.isSet = true
}

func (v NullableV2GeneLinksReply) IsSet() bool {
	return v.isSet
}

func (v *NullableV2GeneLinksReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2GeneLinksReply(val *V2GeneLinksReply) *NullableV2GeneLinksReply {
	return &NullableV2GeneLinksReply{value: val, isSet: true}
}

func (v NullableV2GeneLinksReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2GeneLinksReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


