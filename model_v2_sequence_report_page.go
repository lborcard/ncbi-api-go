/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2SequenceReportPage struct for V2SequenceReportPage
type V2SequenceReportPage struct {
	Reports []V2reportsSequenceInfo `json:"reports,omitempty"`
	TotalCount *int32 `json:"total_count,omitempty"`
	NextPageToken *string `json:"next_page_token,omitempty"`
	ReportType *string `json:"_report_type,omitempty"`
	ReportFields []string `json:"_report_fields,omitempty"`
	FirstPage *bool `json:"_first_page,omitempty"`
	ReportFormat *string `json:"_report_format,omitempty"`
}

// NewV2SequenceReportPage instantiates a new V2SequenceReportPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2SequenceReportPage() *V2SequenceReportPage {
	this := V2SequenceReportPage{}
	return &this
}

// NewV2SequenceReportPageWithDefaults instantiates a new V2SequenceReportPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2SequenceReportPageWithDefaults() *V2SequenceReportPage {
	this := V2SequenceReportPage{}
	return &this
}

// GetReports returns the Reports field value if set, zero value otherwise.
func (o *V2SequenceReportPage) GetReports() []V2reportsSequenceInfo {
	if o == nil || o.Reports == nil {
		var ret []V2reportsSequenceInfo
		return ret
	}
	return o.Reports
}

// GetReportsOk returns a tuple with the Reports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SequenceReportPage) GetReportsOk() ([]V2reportsSequenceInfo, bool) {
	if o == nil || o.Reports == nil {
		return nil, false
	}
	return o.Reports, true
}

// HasReports returns a boolean if a field has been set.
func (o *V2SequenceReportPage) HasReports() bool {
	if o != nil && o.Reports != nil {
		return true
	}

	return false
}

// SetReports gets a reference to the given []V2reportsSequenceInfo and assigns it to the Reports field.
func (o *V2SequenceReportPage) SetReports(v []V2reportsSequenceInfo) {
	o.Reports = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *V2SequenceReportPage) GetTotalCount() int32 {
	if o == nil || o.TotalCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SequenceReportPage) GetTotalCountOk() (*int32, bool) {
	if o == nil || o.TotalCount == nil {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *V2SequenceReportPage) HasTotalCount() bool {
	if o != nil && o.TotalCount != nil {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *V2SequenceReportPage) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *V2SequenceReportPage) GetNextPageToken() string {
	if o == nil || o.NextPageToken == nil {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SequenceReportPage) GetNextPageTokenOk() (*string, bool) {
	if o == nil || o.NextPageToken == nil {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *V2SequenceReportPage) HasNextPageToken() bool {
	if o != nil && o.NextPageToken != nil {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *V2SequenceReportPage) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetReportType returns the ReportType field value if set, zero value otherwise.
func (o *V2SequenceReportPage) GetReportType() string {
	if o == nil || o.ReportType == nil {
		var ret string
		return ret
	}
	return *o.ReportType
}

// GetReportTypeOk returns a tuple with the ReportType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SequenceReportPage) GetReportTypeOk() (*string, bool) {
	if o == nil || o.ReportType == nil {
		return nil, false
	}
	return o.ReportType, true
}

// HasReportType returns a boolean if a field has been set.
func (o *V2SequenceReportPage) HasReportType() bool {
	if o != nil && o.ReportType != nil {
		return true
	}

	return false
}

// SetReportType gets a reference to the given string and assigns it to the ReportType field.
func (o *V2SequenceReportPage) SetReportType(v string) {
	o.ReportType = &v
}

// GetReportFields returns the ReportFields field value if set, zero value otherwise.
func (o *V2SequenceReportPage) GetReportFields() []string {
	if o == nil || o.ReportFields == nil {
		var ret []string
		return ret
	}
	return o.ReportFields
}

// GetReportFieldsOk returns a tuple with the ReportFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SequenceReportPage) GetReportFieldsOk() ([]string, bool) {
	if o == nil || o.ReportFields == nil {
		return nil, false
	}
	return o.ReportFields, true
}

// HasReportFields returns a boolean if a field has been set.
func (o *V2SequenceReportPage) HasReportFields() bool {
	if o != nil && o.ReportFields != nil {
		return true
	}

	return false
}

// SetReportFields gets a reference to the given []string and assigns it to the ReportFields field.
func (o *V2SequenceReportPage) SetReportFields(v []string) {
	o.ReportFields = v
}

// GetFirstPage returns the FirstPage field value if set, zero value otherwise.
func (o *V2SequenceReportPage) GetFirstPage() bool {
	if o == nil || o.FirstPage == nil {
		var ret bool
		return ret
	}
	return *o.FirstPage
}

// GetFirstPageOk returns a tuple with the FirstPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SequenceReportPage) GetFirstPageOk() (*bool, bool) {
	if o == nil || o.FirstPage == nil {
		return nil, false
	}
	return o.FirstPage, true
}

// HasFirstPage returns a boolean if a field has been set.
func (o *V2SequenceReportPage) HasFirstPage() bool {
	if o != nil && o.FirstPage != nil {
		return true
	}

	return false
}

// SetFirstPage gets a reference to the given bool and assigns it to the FirstPage field.
func (o *V2SequenceReportPage) SetFirstPage(v bool) {
	o.FirstPage = &v
}

// GetReportFormat returns the ReportFormat field value if set, zero value otherwise.
func (o *V2SequenceReportPage) GetReportFormat() string {
	if o == nil || o.ReportFormat == nil {
		var ret string
		return ret
	}
	return *o.ReportFormat
}

// GetReportFormatOk returns a tuple with the ReportFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SequenceReportPage) GetReportFormatOk() (*string, bool) {
	if o == nil || o.ReportFormat == nil {
		return nil, false
	}
	return o.ReportFormat, true
}

// HasReportFormat returns a boolean if a field has been set.
func (o *V2SequenceReportPage) HasReportFormat() bool {
	if o != nil && o.ReportFormat != nil {
		return true
	}

	return false
}

// SetReportFormat gets a reference to the given string and assigns it to the ReportFormat field.
func (o *V2SequenceReportPage) SetReportFormat(v string) {
	o.ReportFormat = &v
}

func (o V2SequenceReportPage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Reports != nil {
		toSerialize["reports"] = o.Reports
	}
	if o.TotalCount != nil {
		toSerialize["total_count"] = o.TotalCount
	}
	if o.NextPageToken != nil {
		toSerialize["next_page_token"] = o.NextPageToken
	}
	if o.ReportType != nil {
		toSerialize["_report_type"] = o.ReportType
	}
	if o.ReportFields != nil {
		toSerialize["_report_fields"] = o.ReportFields
	}
	if o.FirstPage != nil {
		toSerialize["_first_page"] = o.FirstPage
	}
	if o.ReportFormat != nil {
		toSerialize["_report_format"] = o.ReportFormat
	}
	return json.Marshal(toSerialize)
}

type NullableV2SequenceReportPage struct {
	value *V2SequenceReportPage
	isSet bool
}

func (v NullableV2SequenceReportPage) Get() *V2SequenceReportPage {
	return v.value
}

func (v *NullableV2SequenceReportPage) Set(val *V2SequenceReportPage) {
	v.value = val
	v.isSet = true
}

func (v NullableV2SequenceReportPage) IsSet() bool {
	return v.isSet
}

func (v *NullableV2SequenceReportPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2SequenceReportPage(val *V2SequenceReportPage) *NullableV2SequenceReportPage {
	return &NullableV2SequenceReportPage{value: val, isSet: true}
}

func (v NullableV2SequenceReportPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2SequenceReportPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


