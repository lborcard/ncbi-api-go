/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2reportsTaxonomyNamesDescriptorCitation struct for V2reportsTaxonomyNamesDescriptorCitation
type V2reportsTaxonomyNamesDescriptorCitation struct {
	FullCitation *string `json:"full_citation,omitempty"`
	ShortCitation *string `json:"short_citation,omitempty"`
	Pmid *string `json:"pmid,omitempty"`
}

// NewV2reportsTaxonomyNamesDescriptorCitation instantiates a new V2reportsTaxonomyNamesDescriptorCitation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsTaxonomyNamesDescriptorCitation() *V2reportsTaxonomyNamesDescriptorCitation {
	this := V2reportsTaxonomyNamesDescriptorCitation{}
	return &this
}

// NewV2reportsTaxonomyNamesDescriptorCitationWithDefaults instantiates a new V2reportsTaxonomyNamesDescriptorCitation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsTaxonomyNamesDescriptorCitationWithDefaults() *V2reportsTaxonomyNamesDescriptorCitation {
	this := V2reportsTaxonomyNamesDescriptorCitation{}
	return &this
}

// GetFullCitation returns the FullCitation field value if set, zero value otherwise.
func (o *V2reportsTaxonomyNamesDescriptorCitation) GetFullCitation() string {
	if o == nil || o.FullCitation == nil {
		var ret string
		return ret
	}
	return *o.FullCitation
}

// GetFullCitationOk returns a tuple with the FullCitation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTaxonomyNamesDescriptorCitation) GetFullCitationOk() (*string, bool) {
	if o == nil || o.FullCitation == nil {
		return nil, false
	}
	return o.FullCitation, true
}

// HasFullCitation returns a boolean if a field has been set.
func (o *V2reportsTaxonomyNamesDescriptorCitation) HasFullCitation() bool {
	if o != nil && o.FullCitation != nil {
		return true
	}

	return false
}

// SetFullCitation gets a reference to the given string and assigns it to the FullCitation field.
func (o *V2reportsTaxonomyNamesDescriptorCitation) SetFullCitation(v string) {
	o.FullCitation = &v
}

// GetShortCitation returns the ShortCitation field value if set, zero value otherwise.
func (o *V2reportsTaxonomyNamesDescriptorCitation) GetShortCitation() string {
	if o == nil || o.ShortCitation == nil {
		var ret string
		return ret
	}
	return *o.ShortCitation
}

// GetShortCitationOk returns a tuple with the ShortCitation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTaxonomyNamesDescriptorCitation) GetShortCitationOk() (*string, bool) {
	if o == nil || o.ShortCitation == nil {
		return nil, false
	}
	return o.ShortCitation, true
}

// HasShortCitation returns a boolean if a field has been set.
func (o *V2reportsTaxonomyNamesDescriptorCitation) HasShortCitation() bool {
	if o != nil && o.ShortCitation != nil {
		return true
	}

	return false
}

// SetShortCitation gets a reference to the given string and assigns it to the ShortCitation field.
func (o *V2reportsTaxonomyNamesDescriptorCitation) SetShortCitation(v string) {
	o.ShortCitation = &v
}

// GetPmid returns the Pmid field value if set, zero value otherwise.
func (o *V2reportsTaxonomyNamesDescriptorCitation) GetPmid() string {
	if o == nil || o.Pmid == nil {
		var ret string
		return ret
	}
	return *o.Pmid
}

// GetPmidOk returns a tuple with the Pmid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTaxonomyNamesDescriptorCitation) GetPmidOk() (*string, bool) {
	if o == nil || o.Pmid == nil {
		return nil, false
	}
	return o.Pmid, true
}

// HasPmid returns a boolean if a field has been set.
func (o *V2reportsTaxonomyNamesDescriptorCitation) HasPmid() bool {
	if o != nil && o.Pmid != nil {
		return true
	}

	return false
}

// SetPmid gets a reference to the given string and assigns it to the Pmid field.
func (o *V2reportsTaxonomyNamesDescriptorCitation) SetPmid(v string) {
	o.Pmid = &v
}

func (o V2reportsTaxonomyNamesDescriptorCitation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FullCitation != nil {
		toSerialize["full_citation"] = o.FullCitation
	}
	if o.ShortCitation != nil {
		toSerialize["short_citation"] = o.ShortCitation
	}
	if o.Pmid != nil {
		toSerialize["pmid"] = o.Pmid
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsTaxonomyNamesDescriptorCitation struct {
	value *V2reportsTaxonomyNamesDescriptorCitation
	isSet bool
}

func (v NullableV2reportsTaxonomyNamesDescriptorCitation) Get() *V2reportsTaxonomyNamesDescriptorCitation {
	return v.value
}

func (v *NullableV2reportsTaxonomyNamesDescriptorCitation) Set(val *V2reportsTaxonomyNamesDescriptorCitation) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsTaxonomyNamesDescriptorCitation) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsTaxonomyNamesDescriptorCitation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsTaxonomyNamesDescriptorCitation(val *V2reportsTaxonomyNamesDescriptorCitation) *NullableV2reportsTaxonomyNamesDescriptorCitation {
	return &NullableV2reportsTaxonomyNamesDescriptorCitation{value: val, isSet: true}
}

func (v NullableV2reportsTaxonomyNamesDescriptorCitation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsTaxonomyNamesDescriptorCitation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


