/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2TabularOutput struct for V2TabularOutput
type V2TabularOutput struct {
	Data *string `json:"data,omitempty"`
}

// NewV2TabularOutput instantiates a new V2TabularOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2TabularOutput() *V2TabularOutput {
	this := V2TabularOutput{}
	return &this
}

// NewV2TabularOutputWithDefaults instantiates a new V2TabularOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2TabularOutputWithDefaults() *V2TabularOutput {
	this := V2TabularOutput{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *V2TabularOutput) GetData() string {
	if o == nil || o.Data == nil {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2TabularOutput) GetDataOk() (*string, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *V2TabularOutput) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *V2TabularOutput) SetData(v string) {
	o.Data = &v
}

func (o V2TabularOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableV2TabularOutput struct {
	value *V2TabularOutput
	isSet bool
}

func (v NullableV2TabularOutput) Get() *V2TabularOutput {
	return v.value
}

func (v *NullableV2TabularOutput) Set(val *V2TabularOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableV2TabularOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableV2TabularOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2TabularOutput(val *V2TabularOutput) *NullableV2TabularOutput {
	return &NullableV2TabularOutput{value: val, isSet: true}
}

func (v NullableV2TabularOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2TabularOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


