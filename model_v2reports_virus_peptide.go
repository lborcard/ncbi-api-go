/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2reportsVirusPeptide struct for V2reportsVirusPeptide
type V2reportsVirusPeptide struct {
	Accession *string `json:"accession,omitempty"`
	Name *string `json:"name,omitempty"`
	OtherNames []string `json:"other_names,omitempty"`
	Nucleotide *V2reportsSeqRangeSetFasta `json:"nucleotide,omitempty"`
	Protein *V2reportsSeqRangeSetFasta `json:"protein,omitempty"`
	PdbIds []string `json:"pdb_ids,omitempty"`
	Cdd []V2reportsConservedDomain `json:"cdd,omitempty"`
	UniProtKb *V2reportsVirusPeptideUniProtId `json:"uni_prot_kb,omitempty"`
	MaturePeptide []V2reportsVirusPeptide `json:"mature_peptide,omitempty"`
	ProteinCompleteness *V2reportsVirusPeptideViralPeptideCompleteness `json:"protein_completeness,omitempty"`
}

// NewV2reportsVirusPeptide instantiates a new V2reportsVirusPeptide object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsVirusPeptide() *V2reportsVirusPeptide {
	this := V2reportsVirusPeptide{}
	var proteinCompleteness V2reportsVirusPeptideViralPeptideCompleteness = V2REPORTSVIRUSPEPTIDEVIRALPEPTIDECOMPLETENESS_UNKNOWN
	this.ProteinCompleteness = &proteinCompleteness
	return &this
}

// NewV2reportsVirusPeptideWithDefaults instantiates a new V2reportsVirusPeptide object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsVirusPeptideWithDefaults() *V2reportsVirusPeptide {
	this := V2reportsVirusPeptide{}
	var proteinCompleteness V2reportsVirusPeptideViralPeptideCompleteness = V2REPORTSVIRUSPEPTIDEVIRALPEPTIDECOMPLETENESS_UNKNOWN
	this.ProteinCompleteness = &proteinCompleteness
	return &this
}

// GetAccession returns the Accession field value if set, zero value otherwise.
func (o *V2reportsVirusPeptide) GetAccession() string {
	if o == nil || o.Accession == nil {
		var ret string
		return ret
	}
	return *o.Accession
}

// GetAccessionOk returns a tuple with the Accession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusPeptide) GetAccessionOk() (*string, bool) {
	if o == nil || o.Accession == nil {
		return nil, false
	}
	return o.Accession, true
}

// HasAccession returns a boolean if a field has been set.
func (o *V2reportsVirusPeptide) HasAccession() bool {
	if o != nil && o.Accession != nil {
		return true
	}

	return false
}

// SetAccession gets a reference to the given string and assigns it to the Accession field.
func (o *V2reportsVirusPeptide) SetAccession(v string) {
	o.Accession = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V2reportsVirusPeptide) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusPeptide) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V2reportsVirusPeptide) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V2reportsVirusPeptide) SetName(v string) {
	o.Name = &v
}

// GetOtherNames returns the OtherNames field value if set, zero value otherwise.
func (o *V2reportsVirusPeptide) GetOtherNames() []string {
	if o == nil || o.OtherNames == nil {
		var ret []string
		return ret
	}
	return o.OtherNames
}

// GetOtherNamesOk returns a tuple with the OtherNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusPeptide) GetOtherNamesOk() ([]string, bool) {
	if o == nil || o.OtherNames == nil {
		return nil, false
	}
	return o.OtherNames, true
}

// HasOtherNames returns a boolean if a field has been set.
func (o *V2reportsVirusPeptide) HasOtherNames() bool {
	if o != nil && o.OtherNames != nil {
		return true
	}

	return false
}

// SetOtherNames gets a reference to the given []string and assigns it to the OtherNames field.
func (o *V2reportsVirusPeptide) SetOtherNames(v []string) {
	o.OtherNames = v
}

// GetNucleotide returns the Nucleotide field value if set, zero value otherwise.
func (o *V2reportsVirusPeptide) GetNucleotide() V2reportsSeqRangeSetFasta {
	if o == nil || o.Nucleotide == nil {
		var ret V2reportsSeqRangeSetFasta
		return ret
	}
	return *o.Nucleotide
}

// GetNucleotideOk returns a tuple with the Nucleotide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusPeptide) GetNucleotideOk() (*V2reportsSeqRangeSetFasta, bool) {
	if o == nil || o.Nucleotide == nil {
		return nil, false
	}
	return o.Nucleotide, true
}

// HasNucleotide returns a boolean if a field has been set.
func (o *V2reportsVirusPeptide) HasNucleotide() bool {
	if o != nil && o.Nucleotide != nil {
		return true
	}

	return false
}

// SetNucleotide gets a reference to the given V2reportsSeqRangeSetFasta and assigns it to the Nucleotide field.
func (o *V2reportsVirusPeptide) SetNucleotide(v V2reportsSeqRangeSetFasta) {
	o.Nucleotide = &v
}

// GetProtein returns the Protein field value if set, zero value otherwise.
func (o *V2reportsVirusPeptide) GetProtein() V2reportsSeqRangeSetFasta {
	if o == nil || o.Protein == nil {
		var ret V2reportsSeqRangeSetFasta
		return ret
	}
	return *o.Protein
}

// GetProteinOk returns a tuple with the Protein field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusPeptide) GetProteinOk() (*V2reportsSeqRangeSetFasta, bool) {
	if o == nil || o.Protein == nil {
		return nil, false
	}
	return o.Protein, true
}

// HasProtein returns a boolean if a field has been set.
func (o *V2reportsVirusPeptide) HasProtein() bool {
	if o != nil && o.Protein != nil {
		return true
	}

	return false
}

// SetProtein gets a reference to the given V2reportsSeqRangeSetFasta and assigns it to the Protein field.
func (o *V2reportsVirusPeptide) SetProtein(v V2reportsSeqRangeSetFasta) {
	o.Protein = &v
}

// GetPdbIds returns the PdbIds field value if set, zero value otherwise.
func (o *V2reportsVirusPeptide) GetPdbIds() []string {
	if o == nil || o.PdbIds == nil {
		var ret []string
		return ret
	}
	return o.PdbIds
}

// GetPdbIdsOk returns a tuple with the PdbIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusPeptide) GetPdbIdsOk() ([]string, bool) {
	if o == nil || o.PdbIds == nil {
		return nil, false
	}
	return o.PdbIds, true
}

// HasPdbIds returns a boolean if a field has been set.
func (o *V2reportsVirusPeptide) HasPdbIds() bool {
	if o != nil && o.PdbIds != nil {
		return true
	}

	return false
}

// SetPdbIds gets a reference to the given []string and assigns it to the PdbIds field.
func (o *V2reportsVirusPeptide) SetPdbIds(v []string) {
	o.PdbIds = v
}

// GetCdd returns the Cdd field value if set, zero value otherwise.
func (o *V2reportsVirusPeptide) GetCdd() []V2reportsConservedDomain {
	if o == nil || o.Cdd == nil {
		var ret []V2reportsConservedDomain
		return ret
	}
	return o.Cdd
}

// GetCddOk returns a tuple with the Cdd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusPeptide) GetCddOk() ([]V2reportsConservedDomain, bool) {
	if o == nil || o.Cdd == nil {
		return nil, false
	}
	return o.Cdd, true
}

// HasCdd returns a boolean if a field has been set.
func (o *V2reportsVirusPeptide) HasCdd() bool {
	if o != nil && o.Cdd != nil {
		return true
	}

	return false
}

// SetCdd gets a reference to the given []V2reportsConservedDomain and assigns it to the Cdd field.
func (o *V2reportsVirusPeptide) SetCdd(v []V2reportsConservedDomain) {
	o.Cdd = v
}

// GetUniProtKb returns the UniProtKb field value if set, zero value otherwise.
func (o *V2reportsVirusPeptide) GetUniProtKb() V2reportsVirusPeptideUniProtId {
	if o == nil || o.UniProtKb == nil {
		var ret V2reportsVirusPeptideUniProtId
		return ret
	}
	return *o.UniProtKb
}

// GetUniProtKbOk returns a tuple with the UniProtKb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusPeptide) GetUniProtKbOk() (*V2reportsVirusPeptideUniProtId, bool) {
	if o == nil || o.UniProtKb == nil {
		return nil, false
	}
	return o.UniProtKb, true
}

// HasUniProtKb returns a boolean if a field has been set.
func (o *V2reportsVirusPeptide) HasUniProtKb() bool {
	if o != nil && o.UniProtKb != nil {
		return true
	}

	return false
}

// SetUniProtKb gets a reference to the given V2reportsVirusPeptideUniProtId and assigns it to the UniProtKb field.
func (o *V2reportsVirusPeptide) SetUniProtKb(v V2reportsVirusPeptideUniProtId) {
	o.UniProtKb = &v
}

// GetMaturePeptide returns the MaturePeptide field value if set, zero value otherwise.
func (o *V2reportsVirusPeptide) GetMaturePeptide() []V2reportsVirusPeptide {
	if o == nil || o.MaturePeptide == nil {
		var ret []V2reportsVirusPeptide
		return ret
	}
	return o.MaturePeptide
}

// GetMaturePeptideOk returns a tuple with the MaturePeptide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusPeptide) GetMaturePeptideOk() ([]V2reportsVirusPeptide, bool) {
	if o == nil || o.MaturePeptide == nil {
		return nil, false
	}
	return o.MaturePeptide, true
}

// HasMaturePeptide returns a boolean if a field has been set.
func (o *V2reportsVirusPeptide) HasMaturePeptide() bool {
	if o != nil && o.MaturePeptide != nil {
		return true
	}

	return false
}

// SetMaturePeptide gets a reference to the given []V2reportsVirusPeptide and assigns it to the MaturePeptide field.
func (o *V2reportsVirusPeptide) SetMaturePeptide(v []V2reportsVirusPeptide) {
	o.MaturePeptide = v
}

// GetProteinCompleteness returns the ProteinCompleteness field value if set, zero value otherwise.
func (o *V2reportsVirusPeptide) GetProteinCompleteness() V2reportsVirusPeptideViralPeptideCompleteness {
	if o == nil || o.ProteinCompleteness == nil {
		var ret V2reportsVirusPeptideViralPeptideCompleteness
		return ret
	}
	return *o.ProteinCompleteness
}

// GetProteinCompletenessOk returns a tuple with the ProteinCompleteness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusPeptide) GetProteinCompletenessOk() (*V2reportsVirusPeptideViralPeptideCompleteness, bool) {
	if o == nil || o.ProteinCompleteness == nil {
		return nil, false
	}
	return o.ProteinCompleteness, true
}

// HasProteinCompleteness returns a boolean if a field has been set.
func (o *V2reportsVirusPeptide) HasProteinCompleteness() bool {
	if o != nil && o.ProteinCompleteness != nil {
		return true
	}

	return false
}

// SetProteinCompleteness gets a reference to the given V2reportsVirusPeptideViralPeptideCompleteness and assigns it to the ProteinCompleteness field.
func (o *V2reportsVirusPeptide) SetProteinCompleteness(v V2reportsVirusPeptideViralPeptideCompleteness) {
	o.ProteinCompleteness = &v
}

func (o V2reportsVirusPeptide) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accession != nil {
		toSerialize["accession"] = o.Accession
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.OtherNames != nil {
		toSerialize["other_names"] = o.OtherNames
	}
	if o.Nucleotide != nil {
		toSerialize["nucleotide"] = o.Nucleotide
	}
	if o.Protein != nil {
		toSerialize["protein"] = o.Protein
	}
	if o.PdbIds != nil {
		toSerialize["pdb_ids"] = o.PdbIds
	}
	if o.Cdd != nil {
		toSerialize["cdd"] = o.Cdd
	}
	if o.UniProtKb != nil {
		toSerialize["uni_prot_kb"] = o.UniProtKb
	}
	if o.MaturePeptide != nil {
		toSerialize["mature_peptide"] = o.MaturePeptide
	}
	if o.ProteinCompleteness != nil {
		toSerialize["protein_completeness"] = o.ProteinCompleteness
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsVirusPeptide struct {
	value *V2reportsVirusPeptide
	isSet bool
}

func (v NullableV2reportsVirusPeptide) Get() *V2reportsVirusPeptide {
	return v.value
}

func (v *NullableV2reportsVirusPeptide) Set(val *V2reportsVirusPeptide) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsVirusPeptide) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsVirusPeptide) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsVirusPeptide(val *V2reportsVirusPeptide) *NullableV2reportsVirusPeptide {
	return &NullableV2reportsVirusPeptide{value: val, isSet: true}
}

func (v NullableV2reportsVirusPeptide) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsVirusPeptide) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


