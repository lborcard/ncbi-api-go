/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2reportsBioSampleDescriptor struct for V2reportsBioSampleDescriptor
type V2reportsBioSampleDescriptor struct {
	Accession *string `json:"accession,omitempty"`
	LastUpdated *string `json:"last_updated,omitempty"`
	PublicationDate *string `json:"publication_date,omitempty"`
	SubmissionDate *string `json:"submission_date,omitempty"`
	SampleIds []V2reportsBioSampleId `json:"sample_ids,omitempty"`
	Description *V2reportsBioSampleDescription `json:"description,omitempty"`
	Owner *V2reportsBioSampleOwner `json:"owner,omitempty"`
	Models []string `json:"models,omitempty"`
	Bioprojects []V2reportsBioProject `json:"bioprojects,omitempty"`
	Package *string `json:"package,omitempty"`
	Attributes []V2reportsBioSampleAttribute `json:"attributes,omitempty"`
	Status *V2reportsBioSampleStatus `json:"status,omitempty"`
	Age *string `json:"age,omitempty"`
	BiomaterialProvider *string `json:"biomaterial_provider,omitempty"`
	Breed *string `json:"breed,omitempty"`
	CollectedBy *string `json:"collected_by,omitempty"`
	CollectionDate *string `json:"collection_date,omitempty"`
	Cultivar *string `json:"cultivar,omitempty"`
	DevStage *string `json:"dev_stage,omitempty"`
	Ecotype *string `json:"ecotype,omitempty"`
	GeoLocName *string `json:"geo_loc_name,omitempty"`
	Host *string `json:"host,omitempty"`
	HostDisease *string `json:"host_disease,omitempty"`
	IdentifiedBy *string `json:"identified_by,omitempty"`
	IfsacCategory *string `json:"ifsac_category,omitempty"`
	Isolate *string `json:"isolate,omitempty"`
	IsolateNameAlias *string `json:"isolate_name_alias,omitempty"`
	IsolationSource *string `json:"isolation_source,omitempty"`
	LatLon *string `json:"lat_lon,omitempty"`
	ProjectName *string `json:"project_name,omitempty"`
	SampleName *string `json:"sample_name,omitempty"`
	Serovar *string `json:"serovar,omitempty"`
	Sex *string `json:"sex,omitempty"`
	SourceType *string `json:"source_type,omitempty"`
	Strain *string `json:"strain,omitempty"`
	SubSpecies *string `json:"sub_species,omitempty"`
	Tissue *string `json:"tissue,omitempty"`
	Serotype *string `json:"serotype,omitempty"`
}

// NewV2reportsBioSampleDescriptor instantiates a new V2reportsBioSampleDescriptor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsBioSampleDescriptor() *V2reportsBioSampleDescriptor {
	this := V2reportsBioSampleDescriptor{}
	return &this
}

// NewV2reportsBioSampleDescriptorWithDefaults instantiates a new V2reportsBioSampleDescriptor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsBioSampleDescriptorWithDefaults() *V2reportsBioSampleDescriptor {
	this := V2reportsBioSampleDescriptor{}
	return &this
}

// GetAccession returns the Accession field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetAccession() string {
	if o == nil || o.Accession == nil {
		var ret string
		return ret
	}
	return *o.Accession
}

// GetAccessionOk returns a tuple with the Accession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetAccessionOk() (*string, bool) {
	if o == nil || o.Accession == nil {
		return nil, false
	}
	return o.Accession, true
}

// HasAccession returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasAccession() bool {
	if o != nil && o.Accession != nil {
		return true
	}

	return false
}

// SetAccession gets a reference to the given string and assigns it to the Accession field.
func (o *V2reportsBioSampleDescriptor) SetAccession(v string) {
	o.Accession = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetLastUpdated() string {
	if o == nil || o.LastUpdated == nil {
		var ret string
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetLastUpdatedOk() (*string, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given string and assigns it to the LastUpdated field.
func (o *V2reportsBioSampleDescriptor) SetLastUpdated(v string) {
	o.LastUpdated = &v
}

// GetPublicationDate returns the PublicationDate field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetPublicationDate() string {
	if o == nil || o.PublicationDate == nil {
		var ret string
		return ret
	}
	return *o.PublicationDate
}

// GetPublicationDateOk returns a tuple with the PublicationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetPublicationDateOk() (*string, bool) {
	if o == nil || o.PublicationDate == nil {
		return nil, false
	}
	return o.PublicationDate, true
}

// HasPublicationDate returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasPublicationDate() bool {
	if o != nil && o.PublicationDate != nil {
		return true
	}

	return false
}

// SetPublicationDate gets a reference to the given string and assigns it to the PublicationDate field.
func (o *V2reportsBioSampleDescriptor) SetPublicationDate(v string) {
	o.PublicationDate = &v
}

// GetSubmissionDate returns the SubmissionDate field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetSubmissionDate() string {
	if o == nil || o.SubmissionDate == nil {
		var ret string
		return ret
	}
	return *o.SubmissionDate
}

// GetSubmissionDateOk returns a tuple with the SubmissionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetSubmissionDateOk() (*string, bool) {
	if o == nil || o.SubmissionDate == nil {
		return nil, false
	}
	return o.SubmissionDate, true
}

// HasSubmissionDate returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasSubmissionDate() bool {
	if o != nil && o.SubmissionDate != nil {
		return true
	}

	return false
}

// SetSubmissionDate gets a reference to the given string and assigns it to the SubmissionDate field.
func (o *V2reportsBioSampleDescriptor) SetSubmissionDate(v string) {
	o.SubmissionDate = &v
}

// GetSampleIds returns the SampleIds field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetSampleIds() []V2reportsBioSampleId {
	if o == nil || o.SampleIds == nil {
		var ret []V2reportsBioSampleId
		return ret
	}
	return o.SampleIds
}

// GetSampleIdsOk returns a tuple with the SampleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetSampleIdsOk() ([]V2reportsBioSampleId, bool) {
	if o == nil || o.SampleIds == nil {
		return nil, false
	}
	return o.SampleIds, true
}

// HasSampleIds returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasSampleIds() bool {
	if o != nil && o.SampleIds != nil {
		return true
	}

	return false
}

// SetSampleIds gets a reference to the given []V2reportsBioSampleId and assigns it to the SampleIds field.
func (o *V2reportsBioSampleDescriptor) SetSampleIds(v []V2reportsBioSampleId) {
	o.SampleIds = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetDescription() V2reportsBioSampleDescription {
	if o == nil || o.Description == nil {
		var ret V2reportsBioSampleDescription
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetDescriptionOk() (*V2reportsBioSampleDescription, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given V2reportsBioSampleDescription and assigns it to the Description field.
func (o *V2reportsBioSampleDescriptor) SetDescription(v V2reportsBioSampleDescription) {
	o.Description = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetOwner() V2reportsBioSampleOwner {
	if o == nil || o.Owner == nil {
		var ret V2reportsBioSampleOwner
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetOwnerOk() (*V2reportsBioSampleOwner, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given V2reportsBioSampleOwner and assigns it to the Owner field.
func (o *V2reportsBioSampleDescriptor) SetOwner(v V2reportsBioSampleOwner) {
	o.Owner = &v
}

// GetModels returns the Models field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetModels() []string {
	if o == nil || o.Models == nil {
		var ret []string
		return ret
	}
	return o.Models
}

// GetModelsOk returns a tuple with the Models field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetModelsOk() ([]string, bool) {
	if o == nil || o.Models == nil {
		return nil, false
	}
	return o.Models, true
}

// HasModels returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasModels() bool {
	if o != nil && o.Models != nil {
		return true
	}

	return false
}

// SetModels gets a reference to the given []string and assigns it to the Models field.
func (o *V2reportsBioSampleDescriptor) SetModels(v []string) {
	o.Models = v
}

// GetBioprojects returns the Bioprojects field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetBioprojects() []V2reportsBioProject {
	if o == nil || o.Bioprojects == nil {
		var ret []V2reportsBioProject
		return ret
	}
	return o.Bioprojects
}

// GetBioprojectsOk returns a tuple with the Bioprojects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetBioprojectsOk() ([]V2reportsBioProject, bool) {
	if o == nil || o.Bioprojects == nil {
		return nil, false
	}
	return o.Bioprojects, true
}

// HasBioprojects returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasBioprojects() bool {
	if o != nil && o.Bioprojects != nil {
		return true
	}

	return false
}

// SetBioprojects gets a reference to the given []V2reportsBioProject and assigns it to the Bioprojects field.
func (o *V2reportsBioSampleDescriptor) SetBioprojects(v []V2reportsBioProject) {
	o.Bioprojects = v
}

// GetPackage returns the Package field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetPackage() string {
	if o == nil || o.Package == nil {
		var ret string
		return ret
	}
	return *o.Package
}

// GetPackageOk returns a tuple with the Package field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetPackageOk() (*string, bool) {
	if o == nil || o.Package == nil {
		return nil, false
	}
	return o.Package, true
}

// HasPackage returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasPackage() bool {
	if o != nil && o.Package != nil {
		return true
	}

	return false
}

// SetPackage gets a reference to the given string and assigns it to the Package field.
func (o *V2reportsBioSampleDescriptor) SetPackage(v string) {
	o.Package = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetAttributes() []V2reportsBioSampleAttribute {
	if o == nil || o.Attributes == nil {
		var ret []V2reportsBioSampleAttribute
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetAttributesOk() ([]V2reportsBioSampleAttribute, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []V2reportsBioSampleAttribute and assigns it to the Attributes field.
func (o *V2reportsBioSampleDescriptor) SetAttributes(v []V2reportsBioSampleAttribute) {
	o.Attributes = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetStatus() V2reportsBioSampleStatus {
	if o == nil || o.Status == nil {
		var ret V2reportsBioSampleStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetStatusOk() (*V2reportsBioSampleStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given V2reportsBioSampleStatus and assigns it to the Status field.
func (o *V2reportsBioSampleDescriptor) SetStatus(v V2reportsBioSampleStatus) {
	o.Status = &v
}

// GetAge returns the Age field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetAge() string {
	if o == nil || o.Age == nil {
		var ret string
		return ret
	}
	return *o.Age
}

// GetAgeOk returns a tuple with the Age field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetAgeOk() (*string, bool) {
	if o == nil || o.Age == nil {
		return nil, false
	}
	return o.Age, true
}

// HasAge returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasAge() bool {
	if o != nil && o.Age != nil {
		return true
	}

	return false
}

// SetAge gets a reference to the given string and assigns it to the Age field.
func (o *V2reportsBioSampleDescriptor) SetAge(v string) {
	o.Age = &v
}

// GetBiomaterialProvider returns the BiomaterialProvider field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetBiomaterialProvider() string {
	if o == nil || o.BiomaterialProvider == nil {
		var ret string
		return ret
	}
	return *o.BiomaterialProvider
}

// GetBiomaterialProviderOk returns a tuple with the BiomaterialProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetBiomaterialProviderOk() (*string, bool) {
	if o == nil || o.BiomaterialProvider == nil {
		return nil, false
	}
	return o.BiomaterialProvider, true
}

// HasBiomaterialProvider returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasBiomaterialProvider() bool {
	if o != nil && o.BiomaterialProvider != nil {
		return true
	}

	return false
}

// SetBiomaterialProvider gets a reference to the given string and assigns it to the BiomaterialProvider field.
func (o *V2reportsBioSampleDescriptor) SetBiomaterialProvider(v string) {
	o.BiomaterialProvider = &v
}

// GetBreed returns the Breed field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetBreed() string {
	if o == nil || o.Breed == nil {
		var ret string
		return ret
	}
	return *o.Breed
}

// GetBreedOk returns a tuple with the Breed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetBreedOk() (*string, bool) {
	if o == nil || o.Breed == nil {
		return nil, false
	}
	return o.Breed, true
}

// HasBreed returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasBreed() bool {
	if o != nil && o.Breed != nil {
		return true
	}

	return false
}

// SetBreed gets a reference to the given string and assigns it to the Breed field.
func (o *V2reportsBioSampleDescriptor) SetBreed(v string) {
	o.Breed = &v
}

// GetCollectedBy returns the CollectedBy field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetCollectedBy() string {
	if o == nil || o.CollectedBy == nil {
		var ret string
		return ret
	}
	return *o.CollectedBy
}

// GetCollectedByOk returns a tuple with the CollectedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetCollectedByOk() (*string, bool) {
	if o == nil || o.CollectedBy == nil {
		return nil, false
	}
	return o.CollectedBy, true
}

// HasCollectedBy returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasCollectedBy() bool {
	if o != nil && o.CollectedBy != nil {
		return true
	}

	return false
}

// SetCollectedBy gets a reference to the given string and assigns it to the CollectedBy field.
func (o *V2reportsBioSampleDescriptor) SetCollectedBy(v string) {
	o.CollectedBy = &v
}

// GetCollectionDate returns the CollectionDate field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetCollectionDate() string {
	if o == nil || o.CollectionDate == nil {
		var ret string
		return ret
	}
	return *o.CollectionDate
}

// GetCollectionDateOk returns a tuple with the CollectionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetCollectionDateOk() (*string, bool) {
	if o == nil || o.CollectionDate == nil {
		return nil, false
	}
	return o.CollectionDate, true
}

// HasCollectionDate returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasCollectionDate() bool {
	if o != nil && o.CollectionDate != nil {
		return true
	}

	return false
}

// SetCollectionDate gets a reference to the given string and assigns it to the CollectionDate field.
func (o *V2reportsBioSampleDescriptor) SetCollectionDate(v string) {
	o.CollectionDate = &v
}

// GetCultivar returns the Cultivar field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetCultivar() string {
	if o == nil || o.Cultivar == nil {
		var ret string
		return ret
	}
	return *o.Cultivar
}

// GetCultivarOk returns a tuple with the Cultivar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetCultivarOk() (*string, bool) {
	if o == nil || o.Cultivar == nil {
		return nil, false
	}
	return o.Cultivar, true
}

// HasCultivar returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasCultivar() bool {
	if o != nil && o.Cultivar != nil {
		return true
	}

	return false
}

// SetCultivar gets a reference to the given string and assigns it to the Cultivar field.
func (o *V2reportsBioSampleDescriptor) SetCultivar(v string) {
	o.Cultivar = &v
}

// GetDevStage returns the DevStage field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetDevStage() string {
	if o == nil || o.DevStage == nil {
		var ret string
		return ret
	}
	return *o.DevStage
}

// GetDevStageOk returns a tuple with the DevStage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetDevStageOk() (*string, bool) {
	if o == nil || o.DevStage == nil {
		return nil, false
	}
	return o.DevStage, true
}

// HasDevStage returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasDevStage() bool {
	if o != nil && o.DevStage != nil {
		return true
	}

	return false
}

// SetDevStage gets a reference to the given string and assigns it to the DevStage field.
func (o *V2reportsBioSampleDescriptor) SetDevStage(v string) {
	o.DevStage = &v
}

// GetEcotype returns the Ecotype field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetEcotype() string {
	if o == nil || o.Ecotype == nil {
		var ret string
		return ret
	}
	return *o.Ecotype
}

// GetEcotypeOk returns a tuple with the Ecotype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetEcotypeOk() (*string, bool) {
	if o == nil || o.Ecotype == nil {
		return nil, false
	}
	return o.Ecotype, true
}

// HasEcotype returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasEcotype() bool {
	if o != nil && o.Ecotype != nil {
		return true
	}

	return false
}

// SetEcotype gets a reference to the given string and assigns it to the Ecotype field.
func (o *V2reportsBioSampleDescriptor) SetEcotype(v string) {
	o.Ecotype = &v
}

// GetGeoLocName returns the GeoLocName field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetGeoLocName() string {
	if o == nil || o.GeoLocName == nil {
		var ret string
		return ret
	}
	return *o.GeoLocName
}

// GetGeoLocNameOk returns a tuple with the GeoLocName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetGeoLocNameOk() (*string, bool) {
	if o == nil || o.GeoLocName == nil {
		return nil, false
	}
	return o.GeoLocName, true
}

// HasGeoLocName returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasGeoLocName() bool {
	if o != nil && o.GeoLocName != nil {
		return true
	}

	return false
}

// SetGeoLocName gets a reference to the given string and assigns it to the GeoLocName field.
func (o *V2reportsBioSampleDescriptor) SetGeoLocName(v string) {
	o.GeoLocName = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *V2reportsBioSampleDescriptor) SetHost(v string) {
	o.Host = &v
}

// GetHostDisease returns the HostDisease field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetHostDisease() string {
	if o == nil || o.HostDisease == nil {
		var ret string
		return ret
	}
	return *o.HostDisease
}

// GetHostDiseaseOk returns a tuple with the HostDisease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetHostDiseaseOk() (*string, bool) {
	if o == nil || o.HostDisease == nil {
		return nil, false
	}
	return o.HostDisease, true
}

// HasHostDisease returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasHostDisease() bool {
	if o != nil && o.HostDisease != nil {
		return true
	}

	return false
}

// SetHostDisease gets a reference to the given string and assigns it to the HostDisease field.
func (o *V2reportsBioSampleDescriptor) SetHostDisease(v string) {
	o.HostDisease = &v
}

// GetIdentifiedBy returns the IdentifiedBy field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetIdentifiedBy() string {
	if o == nil || o.IdentifiedBy == nil {
		var ret string
		return ret
	}
	return *o.IdentifiedBy
}

// GetIdentifiedByOk returns a tuple with the IdentifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetIdentifiedByOk() (*string, bool) {
	if o == nil || o.IdentifiedBy == nil {
		return nil, false
	}
	return o.IdentifiedBy, true
}

// HasIdentifiedBy returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasIdentifiedBy() bool {
	if o != nil && o.IdentifiedBy != nil {
		return true
	}

	return false
}

// SetIdentifiedBy gets a reference to the given string and assigns it to the IdentifiedBy field.
func (o *V2reportsBioSampleDescriptor) SetIdentifiedBy(v string) {
	o.IdentifiedBy = &v
}

// GetIfsacCategory returns the IfsacCategory field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetIfsacCategory() string {
	if o == nil || o.IfsacCategory == nil {
		var ret string
		return ret
	}
	return *o.IfsacCategory
}

// GetIfsacCategoryOk returns a tuple with the IfsacCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetIfsacCategoryOk() (*string, bool) {
	if o == nil || o.IfsacCategory == nil {
		return nil, false
	}
	return o.IfsacCategory, true
}

// HasIfsacCategory returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasIfsacCategory() bool {
	if o != nil && o.IfsacCategory != nil {
		return true
	}

	return false
}

// SetIfsacCategory gets a reference to the given string and assigns it to the IfsacCategory field.
func (o *V2reportsBioSampleDescriptor) SetIfsacCategory(v string) {
	o.IfsacCategory = &v
}

// GetIsolate returns the Isolate field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetIsolate() string {
	if o == nil || o.Isolate == nil {
		var ret string
		return ret
	}
	return *o.Isolate
}

// GetIsolateOk returns a tuple with the Isolate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetIsolateOk() (*string, bool) {
	if o == nil || o.Isolate == nil {
		return nil, false
	}
	return o.Isolate, true
}

// HasIsolate returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasIsolate() bool {
	if o != nil && o.Isolate != nil {
		return true
	}

	return false
}

// SetIsolate gets a reference to the given string and assigns it to the Isolate field.
func (o *V2reportsBioSampleDescriptor) SetIsolate(v string) {
	o.Isolate = &v
}

// GetIsolateNameAlias returns the IsolateNameAlias field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetIsolateNameAlias() string {
	if o == nil || o.IsolateNameAlias == nil {
		var ret string
		return ret
	}
	return *o.IsolateNameAlias
}

// GetIsolateNameAliasOk returns a tuple with the IsolateNameAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetIsolateNameAliasOk() (*string, bool) {
	if o == nil || o.IsolateNameAlias == nil {
		return nil, false
	}
	return o.IsolateNameAlias, true
}

// HasIsolateNameAlias returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasIsolateNameAlias() bool {
	if o != nil && o.IsolateNameAlias != nil {
		return true
	}

	return false
}

// SetIsolateNameAlias gets a reference to the given string and assigns it to the IsolateNameAlias field.
func (o *V2reportsBioSampleDescriptor) SetIsolateNameAlias(v string) {
	o.IsolateNameAlias = &v
}

// GetIsolationSource returns the IsolationSource field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetIsolationSource() string {
	if o == nil || o.IsolationSource == nil {
		var ret string
		return ret
	}
	return *o.IsolationSource
}

// GetIsolationSourceOk returns a tuple with the IsolationSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetIsolationSourceOk() (*string, bool) {
	if o == nil || o.IsolationSource == nil {
		return nil, false
	}
	return o.IsolationSource, true
}

// HasIsolationSource returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasIsolationSource() bool {
	if o != nil && o.IsolationSource != nil {
		return true
	}

	return false
}

// SetIsolationSource gets a reference to the given string and assigns it to the IsolationSource field.
func (o *V2reportsBioSampleDescriptor) SetIsolationSource(v string) {
	o.IsolationSource = &v
}

// GetLatLon returns the LatLon field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetLatLon() string {
	if o == nil || o.LatLon == nil {
		var ret string
		return ret
	}
	return *o.LatLon
}

// GetLatLonOk returns a tuple with the LatLon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetLatLonOk() (*string, bool) {
	if o == nil || o.LatLon == nil {
		return nil, false
	}
	return o.LatLon, true
}

// HasLatLon returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasLatLon() bool {
	if o != nil && o.LatLon != nil {
		return true
	}

	return false
}

// SetLatLon gets a reference to the given string and assigns it to the LatLon field.
func (o *V2reportsBioSampleDescriptor) SetLatLon(v string) {
	o.LatLon = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetProjectName() string {
	if o == nil || o.ProjectName == nil {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetProjectNameOk() (*string, bool) {
	if o == nil || o.ProjectName == nil {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasProjectName() bool {
	if o != nil && o.ProjectName != nil {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *V2reportsBioSampleDescriptor) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetSampleName returns the SampleName field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetSampleName() string {
	if o == nil || o.SampleName == nil {
		var ret string
		return ret
	}
	return *o.SampleName
}

// GetSampleNameOk returns a tuple with the SampleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetSampleNameOk() (*string, bool) {
	if o == nil || o.SampleName == nil {
		return nil, false
	}
	return o.SampleName, true
}

// HasSampleName returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasSampleName() bool {
	if o != nil && o.SampleName != nil {
		return true
	}

	return false
}

// SetSampleName gets a reference to the given string and assigns it to the SampleName field.
func (o *V2reportsBioSampleDescriptor) SetSampleName(v string) {
	o.SampleName = &v
}

// GetSerovar returns the Serovar field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetSerovar() string {
	if o == nil || o.Serovar == nil {
		var ret string
		return ret
	}
	return *o.Serovar
}

// GetSerovarOk returns a tuple with the Serovar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetSerovarOk() (*string, bool) {
	if o == nil || o.Serovar == nil {
		return nil, false
	}
	return o.Serovar, true
}

// HasSerovar returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasSerovar() bool {
	if o != nil && o.Serovar != nil {
		return true
	}

	return false
}

// SetSerovar gets a reference to the given string and assigns it to the Serovar field.
func (o *V2reportsBioSampleDescriptor) SetSerovar(v string) {
	o.Serovar = &v
}

// GetSex returns the Sex field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetSex() string {
	if o == nil || o.Sex == nil {
		var ret string
		return ret
	}
	return *o.Sex
}

// GetSexOk returns a tuple with the Sex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetSexOk() (*string, bool) {
	if o == nil || o.Sex == nil {
		return nil, false
	}
	return o.Sex, true
}

// HasSex returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasSex() bool {
	if o != nil && o.Sex != nil {
		return true
	}

	return false
}

// SetSex gets a reference to the given string and assigns it to the Sex field.
func (o *V2reportsBioSampleDescriptor) SetSex(v string) {
	o.Sex = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetSourceType() string {
	if o == nil || o.SourceType == nil {
		var ret string
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetSourceTypeOk() (*string, bool) {
	if o == nil || o.SourceType == nil {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasSourceType() bool {
	if o != nil && o.SourceType != nil {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given string and assigns it to the SourceType field.
func (o *V2reportsBioSampleDescriptor) SetSourceType(v string) {
	o.SourceType = &v
}

// GetStrain returns the Strain field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetStrain() string {
	if o == nil || o.Strain == nil {
		var ret string
		return ret
	}
	return *o.Strain
}

// GetStrainOk returns a tuple with the Strain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetStrainOk() (*string, bool) {
	if o == nil || o.Strain == nil {
		return nil, false
	}
	return o.Strain, true
}

// HasStrain returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasStrain() bool {
	if o != nil && o.Strain != nil {
		return true
	}

	return false
}

// SetStrain gets a reference to the given string and assigns it to the Strain field.
func (o *V2reportsBioSampleDescriptor) SetStrain(v string) {
	o.Strain = &v
}

// GetSubSpecies returns the SubSpecies field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetSubSpecies() string {
	if o == nil || o.SubSpecies == nil {
		var ret string
		return ret
	}
	return *o.SubSpecies
}

// GetSubSpeciesOk returns a tuple with the SubSpecies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetSubSpeciesOk() (*string, bool) {
	if o == nil || o.SubSpecies == nil {
		return nil, false
	}
	return o.SubSpecies, true
}

// HasSubSpecies returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasSubSpecies() bool {
	if o != nil && o.SubSpecies != nil {
		return true
	}

	return false
}

// SetSubSpecies gets a reference to the given string and assigns it to the SubSpecies field.
func (o *V2reportsBioSampleDescriptor) SetSubSpecies(v string) {
	o.SubSpecies = &v
}

// GetTissue returns the Tissue field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetTissue() string {
	if o == nil || o.Tissue == nil {
		var ret string
		return ret
	}
	return *o.Tissue
}

// GetTissueOk returns a tuple with the Tissue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetTissueOk() (*string, bool) {
	if o == nil || o.Tissue == nil {
		return nil, false
	}
	return o.Tissue, true
}

// HasTissue returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasTissue() bool {
	if o != nil && o.Tissue != nil {
		return true
	}

	return false
}

// SetTissue gets a reference to the given string and assigns it to the Tissue field.
func (o *V2reportsBioSampleDescriptor) SetTissue(v string) {
	o.Tissue = &v
}

// GetSerotype returns the Serotype field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescriptor) GetSerotype() string {
	if o == nil || o.Serotype == nil {
		var ret string
		return ret
	}
	return *o.Serotype
}

// GetSerotypeOk returns a tuple with the Serotype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescriptor) GetSerotypeOk() (*string, bool) {
	if o == nil || o.Serotype == nil {
		return nil, false
	}
	return o.Serotype, true
}

// HasSerotype returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescriptor) HasSerotype() bool {
	if o != nil && o.Serotype != nil {
		return true
	}

	return false
}

// SetSerotype gets a reference to the given string and assigns it to the Serotype field.
func (o *V2reportsBioSampleDescriptor) SetSerotype(v string) {
	o.Serotype = &v
}

func (o V2reportsBioSampleDescriptor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accession != nil {
		toSerialize["accession"] = o.Accession
	}
	if o.LastUpdated != nil {
		toSerialize["last_updated"] = o.LastUpdated
	}
	if o.PublicationDate != nil {
		toSerialize["publication_date"] = o.PublicationDate
	}
	if o.SubmissionDate != nil {
		toSerialize["submission_date"] = o.SubmissionDate
	}
	if o.SampleIds != nil {
		toSerialize["sample_ids"] = o.SampleIds
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.Models != nil {
		toSerialize["models"] = o.Models
	}
	if o.Bioprojects != nil {
		toSerialize["bioprojects"] = o.Bioprojects
	}
	if o.Package != nil {
		toSerialize["package"] = o.Package
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Age != nil {
		toSerialize["age"] = o.Age
	}
	if o.BiomaterialProvider != nil {
		toSerialize["biomaterial_provider"] = o.BiomaterialProvider
	}
	if o.Breed != nil {
		toSerialize["breed"] = o.Breed
	}
	if o.CollectedBy != nil {
		toSerialize["collected_by"] = o.CollectedBy
	}
	if o.CollectionDate != nil {
		toSerialize["collection_date"] = o.CollectionDate
	}
	if o.Cultivar != nil {
		toSerialize["cultivar"] = o.Cultivar
	}
	if o.DevStage != nil {
		toSerialize["dev_stage"] = o.DevStage
	}
	if o.Ecotype != nil {
		toSerialize["ecotype"] = o.Ecotype
	}
	if o.GeoLocName != nil {
		toSerialize["geo_loc_name"] = o.GeoLocName
	}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.HostDisease != nil {
		toSerialize["host_disease"] = o.HostDisease
	}
	if o.IdentifiedBy != nil {
		toSerialize["identified_by"] = o.IdentifiedBy
	}
	if o.IfsacCategory != nil {
		toSerialize["ifsac_category"] = o.IfsacCategory
	}
	if o.Isolate != nil {
		toSerialize["isolate"] = o.Isolate
	}
	if o.IsolateNameAlias != nil {
		toSerialize["isolate_name_alias"] = o.IsolateNameAlias
	}
	if o.IsolationSource != nil {
		toSerialize["isolation_source"] = o.IsolationSource
	}
	if o.LatLon != nil {
		toSerialize["lat_lon"] = o.LatLon
	}
	if o.ProjectName != nil {
		toSerialize["project_name"] = o.ProjectName
	}
	if o.SampleName != nil {
		toSerialize["sample_name"] = o.SampleName
	}
	if o.Serovar != nil {
		toSerialize["serovar"] = o.Serovar
	}
	if o.Sex != nil {
		toSerialize["sex"] = o.Sex
	}
	if o.SourceType != nil {
		toSerialize["source_type"] = o.SourceType
	}
	if o.Strain != nil {
		toSerialize["strain"] = o.Strain
	}
	if o.SubSpecies != nil {
		toSerialize["sub_species"] = o.SubSpecies
	}
	if o.Tissue != nil {
		toSerialize["tissue"] = o.Tissue
	}
	if o.Serotype != nil {
		toSerialize["serotype"] = o.Serotype
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsBioSampleDescriptor struct {
	value *V2reportsBioSampleDescriptor
	isSet bool
}

func (v NullableV2reportsBioSampleDescriptor) Get() *V2reportsBioSampleDescriptor {
	return v.value
}

func (v *NullableV2reportsBioSampleDescriptor) Set(val *V2reportsBioSampleDescriptor) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsBioSampleDescriptor) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsBioSampleDescriptor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsBioSampleDescriptor(val *V2reportsBioSampleDescriptor) *NullableV2reportsBioSampleDescriptor {
	return &NullableV2reportsBioSampleDescriptor{value: val, isSet: true}
}

func (v NullableV2reportsBioSampleDescriptor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsBioSampleDescriptor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


