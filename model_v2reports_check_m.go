/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2reportsCheckM struct for V2reportsCheckM
type V2reportsCheckM struct {
	CheckmMarkerSet *string `json:"checkm_marker_set,omitempty"`
	CheckmSpeciesTaxId *int32 `json:"checkm_species_tax_id,omitempty"`
	CheckmMarkerSetRank *string `json:"checkm_marker_set_rank,omitempty"`
	CheckmVersion *string `json:"checkm_version,omitempty"`
	Completeness *float32 `json:"completeness,omitempty"`
	Contamination *float32 `json:"contamination,omitempty"`
	CompletenessPercentile *float32 `json:"completeness_percentile,omitempty"`
}

// NewV2reportsCheckM instantiates a new V2reportsCheckM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsCheckM() *V2reportsCheckM {
	this := V2reportsCheckM{}
	return &this
}

// NewV2reportsCheckMWithDefaults instantiates a new V2reportsCheckM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsCheckMWithDefaults() *V2reportsCheckM {
	this := V2reportsCheckM{}
	return &this
}

// GetCheckmMarkerSet returns the CheckmMarkerSet field value if set, zero value otherwise.
func (o *V2reportsCheckM) GetCheckmMarkerSet() string {
	if o == nil || o.CheckmMarkerSet == nil {
		var ret string
		return ret
	}
	return *o.CheckmMarkerSet
}

// GetCheckmMarkerSetOk returns a tuple with the CheckmMarkerSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsCheckM) GetCheckmMarkerSetOk() (*string, bool) {
	if o == nil || o.CheckmMarkerSet == nil {
		return nil, false
	}
	return o.CheckmMarkerSet, true
}

// HasCheckmMarkerSet returns a boolean if a field has been set.
func (o *V2reportsCheckM) HasCheckmMarkerSet() bool {
	if o != nil && o.CheckmMarkerSet != nil {
		return true
	}

	return false
}

// SetCheckmMarkerSet gets a reference to the given string and assigns it to the CheckmMarkerSet field.
func (o *V2reportsCheckM) SetCheckmMarkerSet(v string) {
	o.CheckmMarkerSet = &v
}

// GetCheckmSpeciesTaxId returns the CheckmSpeciesTaxId field value if set, zero value otherwise.
func (o *V2reportsCheckM) GetCheckmSpeciesTaxId() int32 {
	if o == nil || o.CheckmSpeciesTaxId == nil {
		var ret int32
		return ret
	}
	return *o.CheckmSpeciesTaxId
}

// GetCheckmSpeciesTaxIdOk returns a tuple with the CheckmSpeciesTaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsCheckM) GetCheckmSpeciesTaxIdOk() (*int32, bool) {
	if o == nil || o.CheckmSpeciesTaxId == nil {
		return nil, false
	}
	return o.CheckmSpeciesTaxId, true
}

// HasCheckmSpeciesTaxId returns a boolean if a field has been set.
func (o *V2reportsCheckM) HasCheckmSpeciesTaxId() bool {
	if o != nil && o.CheckmSpeciesTaxId != nil {
		return true
	}

	return false
}

// SetCheckmSpeciesTaxId gets a reference to the given int32 and assigns it to the CheckmSpeciesTaxId field.
func (o *V2reportsCheckM) SetCheckmSpeciesTaxId(v int32) {
	o.CheckmSpeciesTaxId = &v
}

// GetCheckmMarkerSetRank returns the CheckmMarkerSetRank field value if set, zero value otherwise.
func (o *V2reportsCheckM) GetCheckmMarkerSetRank() string {
	if o == nil || o.CheckmMarkerSetRank == nil {
		var ret string
		return ret
	}
	return *o.CheckmMarkerSetRank
}

// GetCheckmMarkerSetRankOk returns a tuple with the CheckmMarkerSetRank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsCheckM) GetCheckmMarkerSetRankOk() (*string, bool) {
	if o == nil || o.CheckmMarkerSetRank == nil {
		return nil, false
	}
	return o.CheckmMarkerSetRank, true
}

// HasCheckmMarkerSetRank returns a boolean if a field has been set.
func (o *V2reportsCheckM) HasCheckmMarkerSetRank() bool {
	if o != nil && o.CheckmMarkerSetRank != nil {
		return true
	}

	return false
}

// SetCheckmMarkerSetRank gets a reference to the given string and assigns it to the CheckmMarkerSetRank field.
func (o *V2reportsCheckM) SetCheckmMarkerSetRank(v string) {
	o.CheckmMarkerSetRank = &v
}

// GetCheckmVersion returns the CheckmVersion field value if set, zero value otherwise.
func (o *V2reportsCheckM) GetCheckmVersion() string {
	if o == nil || o.CheckmVersion == nil {
		var ret string
		return ret
	}
	return *o.CheckmVersion
}

// GetCheckmVersionOk returns a tuple with the CheckmVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsCheckM) GetCheckmVersionOk() (*string, bool) {
	if o == nil || o.CheckmVersion == nil {
		return nil, false
	}
	return o.CheckmVersion, true
}

// HasCheckmVersion returns a boolean if a field has been set.
func (o *V2reportsCheckM) HasCheckmVersion() bool {
	if o != nil && o.CheckmVersion != nil {
		return true
	}

	return false
}

// SetCheckmVersion gets a reference to the given string and assigns it to the CheckmVersion field.
func (o *V2reportsCheckM) SetCheckmVersion(v string) {
	o.CheckmVersion = &v
}

// GetCompleteness returns the Completeness field value if set, zero value otherwise.
func (o *V2reportsCheckM) GetCompleteness() float32 {
	if o == nil || o.Completeness == nil {
		var ret float32
		return ret
	}
	return *o.Completeness
}

// GetCompletenessOk returns a tuple with the Completeness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsCheckM) GetCompletenessOk() (*float32, bool) {
	if o == nil || o.Completeness == nil {
		return nil, false
	}
	return o.Completeness, true
}

// HasCompleteness returns a boolean if a field has been set.
func (o *V2reportsCheckM) HasCompleteness() bool {
	if o != nil && o.Completeness != nil {
		return true
	}

	return false
}

// SetCompleteness gets a reference to the given float32 and assigns it to the Completeness field.
func (o *V2reportsCheckM) SetCompleteness(v float32) {
	o.Completeness = &v
}

// GetContamination returns the Contamination field value if set, zero value otherwise.
func (o *V2reportsCheckM) GetContamination() float32 {
	if o == nil || o.Contamination == nil {
		var ret float32
		return ret
	}
	return *o.Contamination
}

// GetContaminationOk returns a tuple with the Contamination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsCheckM) GetContaminationOk() (*float32, bool) {
	if o == nil || o.Contamination == nil {
		return nil, false
	}
	return o.Contamination, true
}

// HasContamination returns a boolean if a field has been set.
func (o *V2reportsCheckM) HasContamination() bool {
	if o != nil && o.Contamination != nil {
		return true
	}

	return false
}

// SetContamination gets a reference to the given float32 and assigns it to the Contamination field.
func (o *V2reportsCheckM) SetContamination(v float32) {
	o.Contamination = &v
}

// GetCompletenessPercentile returns the CompletenessPercentile field value if set, zero value otherwise.
func (o *V2reportsCheckM) GetCompletenessPercentile() float32 {
	if o == nil || o.CompletenessPercentile == nil {
		var ret float32
		return ret
	}
	return *o.CompletenessPercentile
}

// GetCompletenessPercentileOk returns a tuple with the CompletenessPercentile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsCheckM) GetCompletenessPercentileOk() (*float32, bool) {
	if o == nil || o.CompletenessPercentile == nil {
		return nil, false
	}
	return o.CompletenessPercentile, true
}

// HasCompletenessPercentile returns a boolean if a field has been set.
func (o *V2reportsCheckM) HasCompletenessPercentile() bool {
	if o != nil && o.CompletenessPercentile != nil {
		return true
	}

	return false
}

// SetCompletenessPercentile gets a reference to the given float32 and assigns it to the CompletenessPercentile field.
func (o *V2reportsCheckM) SetCompletenessPercentile(v float32) {
	o.CompletenessPercentile = &v
}

func (o V2reportsCheckM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CheckmMarkerSet != nil {
		toSerialize["checkm_marker_set"] = o.CheckmMarkerSet
	}
	if o.CheckmSpeciesTaxId != nil {
		toSerialize["checkm_species_tax_id"] = o.CheckmSpeciesTaxId
	}
	if o.CheckmMarkerSetRank != nil {
		toSerialize["checkm_marker_set_rank"] = o.CheckmMarkerSetRank
	}
	if o.CheckmVersion != nil {
		toSerialize["checkm_version"] = o.CheckmVersion
	}
	if o.Completeness != nil {
		toSerialize["completeness"] = o.Completeness
	}
	if o.Contamination != nil {
		toSerialize["contamination"] = o.Contamination
	}
	if o.CompletenessPercentile != nil {
		toSerialize["completeness_percentile"] = o.CompletenessPercentile
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsCheckM struct {
	value *V2reportsCheckM
	isSet bool
}

func (v NullableV2reportsCheckM) Get() *V2reportsCheckM {
	return v.value
}

func (v *NullableV2reportsCheckM) Set(val *V2reportsCheckM) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsCheckM) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsCheckM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsCheckM(val *V2reportsCheckM) *NullableV2reportsCheckM {
	return &NullableV2reportsCheckM{value: val, isSet: true}
}

func (v NullableV2reportsCheckM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsCheckM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


