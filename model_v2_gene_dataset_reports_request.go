/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2GeneDatasetReportsRequest struct for V2GeneDatasetReportsRequest
type V2GeneDatasetReportsRequest struct {
	ReturnedContent *V2GeneDatasetReportsRequestContentType `json:"returned_content,omitempty"`
	GeneIds []int32 `json:"gene_ids,omitempty"`
	Accessions []string `json:"accessions,omitempty"`
	SymbolsForTaxon *V2GeneDatasetReportsRequestSymbolsForTaxon `json:"symbols_for_taxon,omitempty"`
	Taxon *string `json:"taxon,omitempty"`
	TableFields []string `json:"table_fields,omitempty"`
	TableFormat *string `json:"table_format,omitempty"`
	IncludeTabularHeader *V2IncludeTabularHeader `json:"include_tabular_header,omitempty"`
	PageSize *int32 `json:"page_size,omitempty"`
	PageToken *string `json:"page_token,omitempty"`
	Query *string `json:"query,omitempty"`
	Types []V2GeneType `json:"types,omitempty"`
}

// NewV2GeneDatasetReportsRequest instantiates a new V2GeneDatasetReportsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2GeneDatasetReportsRequest() *V2GeneDatasetReportsRequest {
	this := V2GeneDatasetReportsRequest{}
	var returnedContent V2GeneDatasetReportsRequestContentType = V2GENEDATASETREPORTSREQUESTCONTENTTYPE_COMPLETE
	this.ReturnedContent = &returnedContent
	var includeTabularHeader V2IncludeTabularHeader = V2INCLUDETABULARHEADER_FIRST_PAGE_ONLY
	this.IncludeTabularHeader = &includeTabularHeader
	return &this
}

// NewV2GeneDatasetReportsRequestWithDefaults instantiates a new V2GeneDatasetReportsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2GeneDatasetReportsRequestWithDefaults() *V2GeneDatasetReportsRequest {
	this := V2GeneDatasetReportsRequest{}
	var returnedContent V2GeneDatasetReportsRequestContentType = V2GENEDATASETREPORTSREQUESTCONTENTTYPE_COMPLETE
	this.ReturnedContent = &returnedContent
	var includeTabularHeader V2IncludeTabularHeader = V2INCLUDETABULARHEADER_FIRST_PAGE_ONLY
	this.IncludeTabularHeader = &includeTabularHeader
	return &this
}

// GetReturnedContent returns the ReturnedContent field value if set, zero value otherwise.
func (o *V2GeneDatasetReportsRequest) GetReturnedContent() V2GeneDatasetReportsRequestContentType {
	if o == nil || o.ReturnedContent == nil {
		var ret V2GeneDatasetReportsRequestContentType
		return ret
	}
	return *o.ReturnedContent
}

// GetReturnedContentOk returns a tuple with the ReturnedContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetReportsRequest) GetReturnedContentOk() (*V2GeneDatasetReportsRequestContentType, bool) {
	if o == nil || o.ReturnedContent == nil {
		return nil, false
	}
	return o.ReturnedContent, true
}

// HasReturnedContent returns a boolean if a field has been set.
func (o *V2GeneDatasetReportsRequest) HasReturnedContent() bool {
	if o != nil && o.ReturnedContent != nil {
		return true
	}

	return false
}

// SetReturnedContent gets a reference to the given V2GeneDatasetReportsRequestContentType and assigns it to the ReturnedContent field.
func (o *V2GeneDatasetReportsRequest) SetReturnedContent(v V2GeneDatasetReportsRequestContentType) {
	o.ReturnedContent = &v
}

// GetGeneIds returns the GeneIds field value if set, zero value otherwise.
func (o *V2GeneDatasetReportsRequest) GetGeneIds() []int32 {
	if o == nil || o.GeneIds == nil {
		var ret []int32
		return ret
	}
	return o.GeneIds
}

// GetGeneIdsOk returns a tuple with the GeneIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetReportsRequest) GetGeneIdsOk() ([]int32, bool) {
	if o == nil || o.GeneIds == nil {
		return nil, false
	}
	return o.GeneIds, true
}

// HasGeneIds returns a boolean if a field has been set.
func (o *V2GeneDatasetReportsRequest) HasGeneIds() bool {
	if o != nil && o.GeneIds != nil {
		return true
	}

	return false
}

// SetGeneIds gets a reference to the given []int32 and assigns it to the GeneIds field.
func (o *V2GeneDatasetReportsRequest) SetGeneIds(v []int32) {
	o.GeneIds = v
}

// GetAccessions returns the Accessions field value if set, zero value otherwise.
func (o *V2GeneDatasetReportsRequest) GetAccessions() []string {
	if o == nil || o.Accessions == nil {
		var ret []string
		return ret
	}
	return o.Accessions
}

// GetAccessionsOk returns a tuple with the Accessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetReportsRequest) GetAccessionsOk() ([]string, bool) {
	if o == nil || o.Accessions == nil {
		return nil, false
	}
	return o.Accessions, true
}

// HasAccessions returns a boolean if a field has been set.
func (o *V2GeneDatasetReportsRequest) HasAccessions() bool {
	if o != nil && o.Accessions != nil {
		return true
	}

	return false
}

// SetAccessions gets a reference to the given []string and assigns it to the Accessions field.
func (o *V2GeneDatasetReportsRequest) SetAccessions(v []string) {
	o.Accessions = v
}

// GetSymbolsForTaxon returns the SymbolsForTaxon field value if set, zero value otherwise.
func (o *V2GeneDatasetReportsRequest) GetSymbolsForTaxon() V2GeneDatasetReportsRequestSymbolsForTaxon {
	if o == nil || o.SymbolsForTaxon == nil {
		var ret V2GeneDatasetReportsRequestSymbolsForTaxon
		return ret
	}
	return *o.SymbolsForTaxon
}

// GetSymbolsForTaxonOk returns a tuple with the SymbolsForTaxon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetReportsRequest) GetSymbolsForTaxonOk() (*V2GeneDatasetReportsRequestSymbolsForTaxon, bool) {
	if o == nil || o.SymbolsForTaxon == nil {
		return nil, false
	}
	return o.SymbolsForTaxon, true
}

// HasSymbolsForTaxon returns a boolean if a field has been set.
func (o *V2GeneDatasetReportsRequest) HasSymbolsForTaxon() bool {
	if o != nil && o.SymbolsForTaxon != nil {
		return true
	}

	return false
}

// SetSymbolsForTaxon gets a reference to the given V2GeneDatasetReportsRequestSymbolsForTaxon and assigns it to the SymbolsForTaxon field.
func (o *V2GeneDatasetReportsRequest) SetSymbolsForTaxon(v V2GeneDatasetReportsRequestSymbolsForTaxon) {
	o.SymbolsForTaxon = &v
}

// GetTaxon returns the Taxon field value if set, zero value otherwise.
func (o *V2GeneDatasetReportsRequest) GetTaxon() string {
	if o == nil || o.Taxon == nil {
		var ret string
		return ret
	}
	return *o.Taxon
}

// GetTaxonOk returns a tuple with the Taxon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetReportsRequest) GetTaxonOk() (*string, bool) {
	if o == nil || o.Taxon == nil {
		return nil, false
	}
	return o.Taxon, true
}

// HasTaxon returns a boolean if a field has been set.
func (o *V2GeneDatasetReportsRequest) HasTaxon() bool {
	if o != nil && o.Taxon != nil {
		return true
	}

	return false
}

// SetTaxon gets a reference to the given string and assigns it to the Taxon field.
func (o *V2GeneDatasetReportsRequest) SetTaxon(v string) {
	o.Taxon = &v
}

// GetTableFields returns the TableFields field value if set, zero value otherwise.
func (o *V2GeneDatasetReportsRequest) GetTableFields() []string {
	if o == nil || o.TableFields == nil {
		var ret []string
		return ret
	}
	return o.TableFields
}

// GetTableFieldsOk returns a tuple with the TableFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetReportsRequest) GetTableFieldsOk() ([]string, bool) {
	if o == nil || o.TableFields == nil {
		return nil, false
	}
	return o.TableFields, true
}

// HasTableFields returns a boolean if a field has been set.
func (o *V2GeneDatasetReportsRequest) HasTableFields() bool {
	if o != nil && o.TableFields != nil {
		return true
	}

	return false
}

// SetTableFields gets a reference to the given []string and assigns it to the TableFields field.
func (o *V2GeneDatasetReportsRequest) SetTableFields(v []string) {
	o.TableFields = v
}

// GetTableFormat returns the TableFormat field value if set, zero value otherwise.
func (o *V2GeneDatasetReportsRequest) GetTableFormat() string {
	if o == nil || o.TableFormat == nil {
		var ret string
		return ret
	}
	return *o.TableFormat
}

// GetTableFormatOk returns a tuple with the TableFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetReportsRequest) GetTableFormatOk() (*string, bool) {
	if o == nil || o.TableFormat == nil {
		return nil, false
	}
	return o.TableFormat, true
}

// HasTableFormat returns a boolean if a field has been set.
func (o *V2GeneDatasetReportsRequest) HasTableFormat() bool {
	if o != nil && o.TableFormat != nil {
		return true
	}

	return false
}

// SetTableFormat gets a reference to the given string and assigns it to the TableFormat field.
func (o *V2GeneDatasetReportsRequest) SetTableFormat(v string) {
	o.TableFormat = &v
}

// GetIncludeTabularHeader returns the IncludeTabularHeader field value if set, zero value otherwise.
func (o *V2GeneDatasetReportsRequest) GetIncludeTabularHeader() V2IncludeTabularHeader {
	if o == nil || o.IncludeTabularHeader == nil {
		var ret V2IncludeTabularHeader
		return ret
	}
	return *o.IncludeTabularHeader
}

// GetIncludeTabularHeaderOk returns a tuple with the IncludeTabularHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetReportsRequest) GetIncludeTabularHeaderOk() (*V2IncludeTabularHeader, bool) {
	if o == nil || o.IncludeTabularHeader == nil {
		return nil, false
	}
	return o.IncludeTabularHeader, true
}

// HasIncludeTabularHeader returns a boolean if a field has been set.
func (o *V2GeneDatasetReportsRequest) HasIncludeTabularHeader() bool {
	if o != nil && o.IncludeTabularHeader != nil {
		return true
	}

	return false
}

// SetIncludeTabularHeader gets a reference to the given V2IncludeTabularHeader and assigns it to the IncludeTabularHeader field.
func (o *V2GeneDatasetReportsRequest) SetIncludeTabularHeader(v V2IncludeTabularHeader) {
	o.IncludeTabularHeader = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *V2GeneDatasetReportsRequest) GetPageSize() int32 {
	if o == nil || o.PageSize == nil {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetReportsRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil || o.PageSize == nil {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *V2GeneDatasetReportsRequest) HasPageSize() bool {
	if o != nil && o.PageSize != nil {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *V2GeneDatasetReportsRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetPageToken returns the PageToken field value if set, zero value otherwise.
func (o *V2GeneDatasetReportsRequest) GetPageToken() string {
	if o == nil || o.PageToken == nil {
		var ret string
		return ret
	}
	return *o.PageToken
}

// GetPageTokenOk returns a tuple with the PageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetReportsRequest) GetPageTokenOk() (*string, bool) {
	if o == nil || o.PageToken == nil {
		return nil, false
	}
	return o.PageToken, true
}

// HasPageToken returns a boolean if a field has been set.
func (o *V2GeneDatasetReportsRequest) HasPageToken() bool {
	if o != nil && o.PageToken != nil {
		return true
	}

	return false
}

// SetPageToken gets a reference to the given string and assigns it to the PageToken field.
func (o *V2GeneDatasetReportsRequest) SetPageToken(v string) {
	o.PageToken = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *V2GeneDatasetReportsRequest) GetQuery() string {
	if o == nil || o.Query == nil {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetReportsRequest) GetQueryOk() (*string, bool) {
	if o == nil || o.Query == nil {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *V2GeneDatasetReportsRequest) HasQuery() bool {
	if o != nil && o.Query != nil {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *V2GeneDatasetReportsRequest) SetQuery(v string) {
	o.Query = &v
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *V2GeneDatasetReportsRequest) GetTypes() []V2GeneType {
	if o == nil || o.Types == nil {
		var ret []V2GeneType
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetReportsRequest) GetTypesOk() ([]V2GeneType, bool) {
	if o == nil || o.Types == nil {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *V2GeneDatasetReportsRequest) HasTypes() bool {
	if o != nil && o.Types != nil {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []V2GeneType and assigns it to the Types field.
func (o *V2GeneDatasetReportsRequest) SetTypes(v []V2GeneType) {
	o.Types = v
}

func (o V2GeneDatasetReportsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ReturnedContent != nil {
		toSerialize["returned_content"] = o.ReturnedContent
	}
	if o.GeneIds != nil {
		toSerialize["gene_ids"] = o.GeneIds
	}
	if o.Accessions != nil {
		toSerialize["accessions"] = o.Accessions
	}
	if o.SymbolsForTaxon != nil {
		toSerialize["symbols_for_taxon"] = o.SymbolsForTaxon
	}
	if o.Taxon != nil {
		toSerialize["taxon"] = o.Taxon
	}
	if o.TableFields != nil {
		toSerialize["table_fields"] = o.TableFields
	}
	if o.TableFormat != nil {
		toSerialize["table_format"] = o.TableFormat
	}
	if o.IncludeTabularHeader != nil {
		toSerialize["include_tabular_header"] = o.IncludeTabularHeader
	}
	if o.PageSize != nil {
		toSerialize["page_size"] = o.PageSize
	}
	if o.PageToken != nil {
		toSerialize["page_token"] = o.PageToken
	}
	if o.Query != nil {
		toSerialize["query"] = o.Query
	}
	if o.Types != nil {
		toSerialize["types"] = o.Types
	}
	return json.Marshal(toSerialize)
}

type NullableV2GeneDatasetReportsRequest struct {
	value *V2GeneDatasetReportsRequest
	isSet bool
}

func (v NullableV2GeneDatasetReportsRequest) Get() *V2GeneDatasetReportsRequest {
	return v.value
}

func (v *NullableV2GeneDatasetReportsRequest) Set(val *V2GeneDatasetReportsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV2GeneDatasetReportsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV2GeneDatasetReportsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2GeneDatasetReportsRequest(val *V2GeneDatasetReportsRequest) *NullableV2GeneDatasetReportsRequest {
	return &NullableV2GeneDatasetReportsRequest{value: val, isSet: true}
}

func (v NullableV2GeneDatasetReportsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2GeneDatasetReportsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


