/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2reportsBioSampleStatus struct for V2reportsBioSampleStatus
type V2reportsBioSampleStatus struct {
	Status *string `json:"status,omitempty"`
	When *string `json:"when,omitempty"`
}

// NewV2reportsBioSampleStatus instantiates a new V2reportsBioSampleStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsBioSampleStatus() *V2reportsBioSampleStatus {
	this := V2reportsBioSampleStatus{}
	return &this
}

// NewV2reportsBioSampleStatusWithDefaults instantiates a new V2reportsBioSampleStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsBioSampleStatusWithDefaults() *V2reportsBioSampleStatus {
	this := V2reportsBioSampleStatus{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V2reportsBioSampleStatus) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleStatus) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V2reportsBioSampleStatus) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *V2reportsBioSampleStatus) SetStatus(v string) {
	o.Status = &v
}

// GetWhen returns the When field value if set, zero value otherwise.
func (o *V2reportsBioSampleStatus) GetWhen() string {
	if o == nil || o.When == nil {
		var ret string
		return ret
	}
	return *o.When
}

// GetWhenOk returns a tuple with the When field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleStatus) GetWhenOk() (*string, bool) {
	if o == nil || o.When == nil {
		return nil, false
	}
	return o.When, true
}

// HasWhen returns a boolean if a field has been set.
func (o *V2reportsBioSampleStatus) HasWhen() bool {
	if o != nil && o.When != nil {
		return true
	}

	return false
}

// SetWhen gets a reference to the given string and assigns it to the When field.
func (o *V2reportsBioSampleStatus) SetWhen(v string) {
	o.When = &v
}

func (o V2reportsBioSampleStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.When != nil {
		toSerialize["when"] = o.When
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsBioSampleStatus struct {
	value *V2reportsBioSampleStatus
	isSet bool
}

func (v NullableV2reportsBioSampleStatus) Get() *V2reportsBioSampleStatus {
	return v.value
}

func (v *NullableV2reportsBioSampleStatus) Set(val *V2reportsBioSampleStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsBioSampleStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsBioSampleStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsBioSampleStatus(val *V2reportsBioSampleStatus) *NullableV2reportsBioSampleStatus {
	return &NullableV2reportsBioSampleStatus{value: val, isSet: true}
}

func (v NullableV2reportsBioSampleStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsBioSampleStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


