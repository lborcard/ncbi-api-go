/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2TaxonomyTaxIdsPage struct for V2TaxonomyTaxIdsPage
type V2TaxonomyTaxIdsPage struct {
	TaxIds []int32 `json:"tax_ids,omitempty"`
	NextPageToken *string `json:"next_page_token,omitempty"`
}

// NewV2TaxonomyTaxIdsPage instantiates a new V2TaxonomyTaxIdsPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2TaxonomyTaxIdsPage() *V2TaxonomyTaxIdsPage {
	this := V2TaxonomyTaxIdsPage{}
	return &this
}

// NewV2TaxonomyTaxIdsPageWithDefaults instantiates a new V2TaxonomyTaxIdsPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2TaxonomyTaxIdsPageWithDefaults() *V2TaxonomyTaxIdsPage {
	this := V2TaxonomyTaxIdsPage{}
	return &this
}

// GetTaxIds returns the TaxIds field value if set, zero value otherwise.
func (o *V2TaxonomyTaxIdsPage) GetTaxIds() []int32 {
	if o == nil || o.TaxIds == nil {
		var ret []int32
		return ret
	}
	return o.TaxIds
}

// GetTaxIdsOk returns a tuple with the TaxIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2TaxonomyTaxIdsPage) GetTaxIdsOk() ([]int32, bool) {
	if o == nil || o.TaxIds == nil {
		return nil, false
	}
	return o.TaxIds, true
}

// HasTaxIds returns a boolean if a field has been set.
func (o *V2TaxonomyTaxIdsPage) HasTaxIds() bool {
	if o != nil && o.TaxIds != nil {
		return true
	}

	return false
}

// SetTaxIds gets a reference to the given []int32 and assigns it to the TaxIds field.
func (o *V2TaxonomyTaxIdsPage) SetTaxIds(v []int32) {
	o.TaxIds = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *V2TaxonomyTaxIdsPage) GetNextPageToken() string {
	if o == nil || o.NextPageToken == nil {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2TaxonomyTaxIdsPage) GetNextPageTokenOk() (*string, bool) {
	if o == nil || o.NextPageToken == nil {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *V2TaxonomyTaxIdsPage) HasNextPageToken() bool {
	if o != nil && o.NextPageToken != nil {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *V2TaxonomyTaxIdsPage) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o V2TaxonomyTaxIdsPage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TaxIds != nil {
		toSerialize["tax_ids"] = o.TaxIds
	}
	if o.NextPageToken != nil {
		toSerialize["next_page_token"] = o.NextPageToken
	}
	return json.Marshal(toSerialize)
}

type NullableV2TaxonomyTaxIdsPage struct {
	value *V2TaxonomyTaxIdsPage
	isSet bool
}

func (v NullableV2TaxonomyTaxIdsPage) Get() *V2TaxonomyTaxIdsPage {
	return v.value
}

func (v *NullableV2TaxonomyTaxIdsPage) Set(val *V2TaxonomyTaxIdsPage) {
	v.value = val
	v.isSet = true
}

func (v NullableV2TaxonomyTaxIdsPage) IsSet() bool {
	return v.isSet
}

func (v *NullableV2TaxonomyTaxIdsPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2TaxonomyTaxIdsPage(val *V2TaxonomyTaxIdsPage) *NullableV2TaxonomyTaxIdsPage {
	return &NullableV2TaxonomyTaxIdsPage{value: val, isSet: true}
}

func (v NullableV2TaxonomyTaxIdsPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2TaxonomyTaxIdsPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


