/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// V2VirusDatasetFilter struct for V2VirusDatasetFilter
type V2VirusDatasetFilter struct {
	Accessions []string `json:"accessions,omitempty"`
	Taxon *string `json:"taxon,omitempty"`
	RefseqOnly *bool `json:"refseq_only,omitempty"`
	AnnotatedOnly *bool `json:"annotated_only,omitempty"`
	ReleasedSince *time.Time `json:"released_since,omitempty"`
	UpdatedSince *time.Time `json:"updated_since,omitempty"`
	Host *string `json:"host,omitempty"`
	PangolinClassification *string `json:"pangolin_classification,omitempty"`
	GeoLocation *string `json:"geo_location,omitempty"`
	CompleteOnly *bool `json:"complete_only,omitempty"`
}

// NewV2VirusDatasetFilter instantiates a new V2VirusDatasetFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2VirusDatasetFilter() *V2VirusDatasetFilter {
	this := V2VirusDatasetFilter{}
	return &this
}

// NewV2VirusDatasetFilterWithDefaults instantiates a new V2VirusDatasetFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2VirusDatasetFilterWithDefaults() *V2VirusDatasetFilter {
	this := V2VirusDatasetFilter{}
	return &this
}

// GetAccessions returns the Accessions field value if set, zero value otherwise.
func (o *V2VirusDatasetFilter) GetAccessions() []string {
	if o == nil || o.Accessions == nil {
		var ret []string
		return ret
	}
	return o.Accessions
}

// GetAccessionsOk returns a tuple with the Accessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2VirusDatasetFilter) GetAccessionsOk() ([]string, bool) {
	if o == nil || o.Accessions == nil {
		return nil, false
	}
	return o.Accessions, true
}

// HasAccessions returns a boolean if a field has been set.
func (o *V2VirusDatasetFilter) HasAccessions() bool {
	if o != nil && o.Accessions != nil {
		return true
	}

	return false
}

// SetAccessions gets a reference to the given []string and assigns it to the Accessions field.
func (o *V2VirusDatasetFilter) SetAccessions(v []string) {
	o.Accessions = v
}

// GetTaxon returns the Taxon field value if set, zero value otherwise.
func (o *V2VirusDatasetFilter) GetTaxon() string {
	if o == nil || o.Taxon == nil {
		var ret string
		return ret
	}
	return *o.Taxon
}

// GetTaxonOk returns a tuple with the Taxon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2VirusDatasetFilter) GetTaxonOk() (*string, bool) {
	if o == nil || o.Taxon == nil {
		return nil, false
	}
	return o.Taxon, true
}

// HasTaxon returns a boolean if a field has been set.
func (o *V2VirusDatasetFilter) HasTaxon() bool {
	if o != nil && o.Taxon != nil {
		return true
	}

	return false
}

// SetTaxon gets a reference to the given string and assigns it to the Taxon field.
func (o *V2VirusDatasetFilter) SetTaxon(v string) {
	o.Taxon = &v
}

// GetRefseqOnly returns the RefseqOnly field value if set, zero value otherwise.
func (o *V2VirusDatasetFilter) GetRefseqOnly() bool {
	if o == nil || o.RefseqOnly == nil {
		var ret bool
		return ret
	}
	return *o.RefseqOnly
}

// GetRefseqOnlyOk returns a tuple with the RefseqOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2VirusDatasetFilter) GetRefseqOnlyOk() (*bool, bool) {
	if o == nil || o.RefseqOnly == nil {
		return nil, false
	}
	return o.RefseqOnly, true
}

// HasRefseqOnly returns a boolean if a field has been set.
func (o *V2VirusDatasetFilter) HasRefseqOnly() bool {
	if o != nil && o.RefseqOnly != nil {
		return true
	}

	return false
}

// SetRefseqOnly gets a reference to the given bool and assigns it to the RefseqOnly field.
func (o *V2VirusDatasetFilter) SetRefseqOnly(v bool) {
	o.RefseqOnly = &v
}

// GetAnnotatedOnly returns the AnnotatedOnly field value if set, zero value otherwise.
func (o *V2VirusDatasetFilter) GetAnnotatedOnly() bool {
	if o == nil || o.AnnotatedOnly == nil {
		var ret bool
		return ret
	}
	return *o.AnnotatedOnly
}

// GetAnnotatedOnlyOk returns a tuple with the AnnotatedOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2VirusDatasetFilter) GetAnnotatedOnlyOk() (*bool, bool) {
	if o == nil || o.AnnotatedOnly == nil {
		return nil, false
	}
	return o.AnnotatedOnly, true
}

// HasAnnotatedOnly returns a boolean if a field has been set.
func (o *V2VirusDatasetFilter) HasAnnotatedOnly() bool {
	if o != nil && o.AnnotatedOnly != nil {
		return true
	}

	return false
}

// SetAnnotatedOnly gets a reference to the given bool and assigns it to the AnnotatedOnly field.
func (o *V2VirusDatasetFilter) SetAnnotatedOnly(v bool) {
	o.AnnotatedOnly = &v
}

// GetReleasedSince returns the ReleasedSince field value if set, zero value otherwise.
func (o *V2VirusDatasetFilter) GetReleasedSince() time.Time {
	if o == nil || o.ReleasedSince == nil {
		var ret time.Time
		return ret
	}
	return *o.ReleasedSince
}

// GetReleasedSinceOk returns a tuple with the ReleasedSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2VirusDatasetFilter) GetReleasedSinceOk() (*time.Time, bool) {
	if o == nil || o.ReleasedSince == nil {
		return nil, false
	}
	return o.ReleasedSince, true
}

// HasReleasedSince returns a boolean if a field has been set.
func (o *V2VirusDatasetFilter) HasReleasedSince() bool {
	if o != nil && o.ReleasedSince != nil {
		return true
	}

	return false
}

// SetReleasedSince gets a reference to the given time.Time and assigns it to the ReleasedSince field.
func (o *V2VirusDatasetFilter) SetReleasedSince(v time.Time) {
	o.ReleasedSince = &v
}

// GetUpdatedSince returns the UpdatedSince field value if set, zero value otherwise.
func (o *V2VirusDatasetFilter) GetUpdatedSince() time.Time {
	if o == nil || o.UpdatedSince == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedSince
}

// GetUpdatedSinceOk returns a tuple with the UpdatedSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2VirusDatasetFilter) GetUpdatedSinceOk() (*time.Time, bool) {
	if o == nil || o.UpdatedSince == nil {
		return nil, false
	}
	return o.UpdatedSince, true
}

// HasUpdatedSince returns a boolean if a field has been set.
func (o *V2VirusDatasetFilter) HasUpdatedSince() bool {
	if o != nil && o.UpdatedSince != nil {
		return true
	}

	return false
}

// SetUpdatedSince gets a reference to the given time.Time and assigns it to the UpdatedSince field.
func (o *V2VirusDatasetFilter) SetUpdatedSince(v time.Time) {
	o.UpdatedSince = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *V2VirusDatasetFilter) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2VirusDatasetFilter) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *V2VirusDatasetFilter) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *V2VirusDatasetFilter) SetHost(v string) {
	o.Host = &v
}

// GetPangolinClassification returns the PangolinClassification field value if set, zero value otherwise.
func (o *V2VirusDatasetFilter) GetPangolinClassification() string {
	if o == nil || o.PangolinClassification == nil {
		var ret string
		return ret
	}
	return *o.PangolinClassification
}

// GetPangolinClassificationOk returns a tuple with the PangolinClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2VirusDatasetFilter) GetPangolinClassificationOk() (*string, bool) {
	if o == nil || o.PangolinClassification == nil {
		return nil, false
	}
	return o.PangolinClassification, true
}

// HasPangolinClassification returns a boolean if a field has been set.
func (o *V2VirusDatasetFilter) HasPangolinClassification() bool {
	if o != nil && o.PangolinClassification != nil {
		return true
	}

	return false
}

// SetPangolinClassification gets a reference to the given string and assigns it to the PangolinClassification field.
func (o *V2VirusDatasetFilter) SetPangolinClassification(v string) {
	o.PangolinClassification = &v
}

// GetGeoLocation returns the GeoLocation field value if set, zero value otherwise.
func (o *V2VirusDatasetFilter) GetGeoLocation() string {
	if o == nil || o.GeoLocation == nil {
		var ret string
		return ret
	}
	return *o.GeoLocation
}

// GetGeoLocationOk returns a tuple with the GeoLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2VirusDatasetFilter) GetGeoLocationOk() (*string, bool) {
	if o == nil || o.GeoLocation == nil {
		return nil, false
	}
	return o.GeoLocation, true
}

// HasGeoLocation returns a boolean if a field has been set.
func (o *V2VirusDatasetFilter) HasGeoLocation() bool {
	if o != nil && o.GeoLocation != nil {
		return true
	}

	return false
}

// SetGeoLocation gets a reference to the given string and assigns it to the GeoLocation field.
func (o *V2VirusDatasetFilter) SetGeoLocation(v string) {
	o.GeoLocation = &v
}

// GetCompleteOnly returns the CompleteOnly field value if set, zero value otherwise.
func (o *V2VirusDatasetFilter) GetCompleteOnly() bool {
	if o == nil || o.CompleteOnly == nil {
		var ret bool
		return ret
	}
	return *o.CompleteOnly
}

// GetCompleteOnlyOk returns a tuple with the CompleteOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2VirusDatasetFilter) GetCompleteOnlyOk() (*bool, bool) {
	if o == nil || o.CompleteOnly == nil {
		return nil, false
	}
	return o.CompleteOnly, true
}

// HasCompleteOnly returns a boolean if a field has been set.
func (o *V2VirusDatasetFilter) HasCompleteOnly() bool {
	if o != nil && o.CompleteOnly != nil {
		return true
	}

	return false
}

// SetCompleteOnly gets a reference to the given bool and assigns it to the CompleteOnly field.
func (o *V2VirusDatasetFilter) SetCompleteOnly(v bool) {
	o.CompleteOnly = &v
}

func (o V2VirusDatasetFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accessions != nil {
		toSerialize["accessions"] = o.Accessions
	}
	if o.Taxon != nil {
		toSerialize["taxon"] = o.Taxon
	}
	if o.RefseqOnly != nil {
		toSerialize["refseq_only"] = o.RefseqOnly
	}
	if o.AnnotatedOnly != nil {
		toSerialize["annotated_only"] = o.AnnotatedOnly
	}
	if o.ReleasedSince != nil {
		toSerialize["released_since"] = o.ReleasedSince
	}
	if o.UpdatedSince != nil {
		toSerialize["updated_since"] = o.UpdatedSince
	}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.PangolinClassification != nil {
		toSerialize["pangolin_classification"] = o.PangolinClassification
	}
	if o.GeoLocation != nil {
		toSerialize["geo_location"] = o.GeoLocation
	}
	if o.CompleteOnly != nil {
		toSerialize["complete_only"] = o.CompleteOnly
	}
	return json.Marshal(toSerialize)
}

type NullableV2VirusDatasetFilter struct {
	value *V2VirusDatasetFilter
	isSet bool
}

func (v NullableV2VirusDatasetFilter) Get() *V2VirusDatasetFilter {
	return v.value
}

func (v *NullableV2VirusDatasetFilter) Set(val *V2VirusDatasetFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableV2VirusDatasetFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableV2VirusDatasetFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2VirusDatasetFilter(val *V2VirusDatasetFilter) *NullableV2VirusDatasetFilter {
	return &NullableV2VirusDatasetFilter{value: val, isSet: true}
}

func (v NullableV2VirusDatasetFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2VirusDatasetFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


