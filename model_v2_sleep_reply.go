/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2SleepReply struct for V2SleepReply
type V2SleepReply struct {
	Reply *string `json:"reply,omitempty"`
}

// NewV2SleepReply instantiates a new V2SleepReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2SleepReply() *V2SleepReply {
	this := V2SleepReply{}
	return &this
}

// NewV2SleepReplyWithDefaults instantiates a new V2SleepReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2SleepReplyWithDefaults() *V2SleepReply {
	this := V2SleepReply{}
	return &this
}

// GetReply returns the Reply field value if set, zero value otherwise.
func (o *V2SleepReply) GetReply() string {
	if o == nil || o.Reply == nil {
		var ret string
		return ret
	}
	return *o.Reply
}

// GetReplyOk returns a tuple with the Reply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SleepReply) GetReplyOk() (*string, bool) {
	if o == nil || o.Reply == nil {
		return nil, false
	}
	return o.Reply, true
}

// HasReply returns a boolean if a field has been set.
func (o *V2SleepReply) HasReply() bool {
	if o != nil && o.Reply != nil {
		return true
	}

	return false
}

// SetReply gets a reference to the given string and assigns it to the Reply field.
func (o *V2SleepReply) SetReply(v string) {
	o.Reply = &v
}

func (o V2SleepReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Reply != nil {
		toSerialize["reply"] = o.Reply
	}
	return json.Marshal(toSerialize)
}

type NullableV2SleepReply struct {
	value *V2SleepReply
	isSet bool
}

func (v NullableV2SleepReply) Get() *V2SleepReply {
	return v.value
}

func (v *NullableV2SleepReply) Set(val *V2SleepReply) {
	v.value = val
	v.isSet = true
}

func (v NullableV2SleepReply) IsSet() bool {
	return v.isSet
}

func (v *NullableV2SleepReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2SleepReply(val *V2SleepReply) *NullableV2SleepReply {
	return &NullableV2SleepReply{value: val, isSet: true}
}

func (v NullableV2SleepReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2SleepReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


