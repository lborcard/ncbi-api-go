/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2reportsVirusAssembly struct for V2reportsVirusAssembly
type V2reportsVirusAssembly struct {
	Accession *string `json:"accession,omitempty"`
	IsComplete *bool `json:"is_complete,omitempty"`
	IsAnnotated *bool `json:"is_annotated,omitempty"`
	Isolate *V2reportsIsolate `json:"isolate,omitempty"`
	SourceDatabase *string `json:"source_database,omitempty"`
	ProteinCount *int32 `json:"protein_count,omitempty"`
	Host *V2reportsOrganism `json:"host,omitempty"`
	Virus *V2reportsOrganism `json:"virus,omitempty"`
	Bioprojects []string `json:"bioprojects,omitempty"`
	Location *V2reportsVirusAssemblyCollectionLocation `json:"location,omitempty"`
	UpdateDate *string `json:"update_date,omitempty"`
	ReleaseDate *string `json:"release_date,omitempty"`
	NucleotideCompleteness *string `json:"nucleotide_completeness,omitempty"`
	Completeness *V2reportsVirusAssemblyCompleteness `json:"completeness,omitempty"`
	Length *int32 `json:"length,omitempty"`
	GeneCount *int32 `json:"gene_count,omitempty"`
	MaturePeptideCount *int32 `json:"mature_peptide_count,omitempty"`
	Biosample *string `json:"biosample,omitempty"`
	MolType *string `json:"mol_type,omitempty"`
	Nucleotide *V2reportsSeqRangeSetFasta `json:"nucleotide,omitempty"`
	PurposeOfSampling *V2reportsPurposeOfSampling `json:"purpose_of_sampling,omitempty"`
	SraAccessions []string `json:"sra_accessions,omitempty"`
	Submitter *V2reportsVirusAssemblySubmitterInfo `json:"submitter,omitempty"`
	LabHost *string `json:"lab_host,omitempty"`
	IsLabHost *bool `json:"is_lab_host,omitempty"`
	IsVaccineStrain *bool `json:"is_vaccine_strain,omitempty"`
}

// NewV2reportsVirusAssembly instantiates a new V2reportsVirusAssembly object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsVirusAssembly() *V2reportsVirusAssembly {
	this := V2reportsVirusAssembly{}
	var completeness V2reportsVirusAssemblyCompleteness = V2REPORTSVIRUSASSEMBLYCOMPLETENESS_UNKNOWN
	this.Completeness = &completeness
	var purposeOfSampling V2reportsPurposeOfSampling = V2REPORTSPURPOSEOFSAMPLING_UNKNOWN
	this.PurposeOfSampling = &purposeOfSampling
	return &this
}

// NewV2reportsVirusAssemblyWithDefaults instantiates a new V2reportsVirusAssembly object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsVirusAssemblyWithDefaults() *V2reportsVirusAssembly {
	this := V2reportsVirusAssembly{}
	var completeness V2reportsVirusAssemblyCompleteness = V2REPORTSVIRUSASSEMBLYCOMPLETENESS_UNKNOWN
	this.Completeness = &completeness
	var purposeOfSampling V2reportsPurposeOfSampling = V2REPORTSPURPOSEOFSAMPLING_UNKNOWN
	this.PurposeOfSampling = &purposeOfSampling
	return &this
}

// GetAccession returns the Accession field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetAccession() string {
	if o == nil || o.Accession == nil {
		var ret string
		return ret
	}
	return *o.Accession
}

// GetAccessionOk returns a tuple with the Accession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetAccessionOk() (*string, bool) {
	if o == nil || o.Accession == nil {
		return nil, false
	}
	return o.Accession, true
}

// HasAccession returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasAccession() bool {
	if o != nil && o.Accession != nil {
		return true
	}

	return false
}

// SetAccession gets a reference to the given string and assigns it to the Accession field.
func (o *V2reportsVirusAssembly) SetAccession(v string) {
	o.Accession = &v
}

// GetIsComplete returns the IsComplete field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetIsComplete() bool {
	if o == nil || o.IsComplete == nil {
		var ret bool
		return ret
	}
	return *o.IsComplete
}

// GetIsCompleteOk returns a tuple with the IsComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetIsCompleteOk() (*bool, bool) {
	if o == nil || o.IsComplete == nil {
		return nil, false
	}
	return o.IsComplete, true
}

// HasIsComplete returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasIsComplete() bool {
	if o != nil && o.IsComplete != nil {
		return true
	}

	return false
}

// SetIsComplete gets a reference to the given bool and assigns it to the IsComplete field.
func (o *V2reportsVirusAssembly) SetIsComplete(v bool) {
	o.IsComplete = &v
}

// GetIsAnnotated returns the IsAnnotated field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetIsAnnotated() bool {
	if o == nil || o.IsAnnotated == nil {
		var ret bool
		return ret
	}
	return *o.IsAnnotated
}

// GetIsAnnotatedOk returns a tuple with the IsAnnotated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetIsAnnotatedOk() (*bool, bool) {
	if o == nil || o.IsAnnotated == nil {
		return nil, false
	}
	return o.IsAnnotated, true
}

// HasIsAnnotated returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasIsAnnotated() bool {
	if o != nil && o.IsAnnotated != nil {
		return true
	}

	return false
}

// SetIsAnnotated gets a reference to the given bool and assigns it to the IsAnnotated field.
func (o *V2reportsVirusAssembly) SetIsAnnotated(v bool) {
	o.IsAnnotated = &v
}

// GetIsolate returns the Isolate field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetIsolate() V2reportsIsolate {
	if o == nil || o.Isolate == nil {
		var ret V2reportsIsolate
		return ret
	}
	return *o.Isolate
}

// GetIsolateOk returns a tuple with the Isolate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetIsolateOk() (*V2reportsIsolate, bool) {
	if o == nil || o.Isolate == nil {
		return nil, false
	}
	return o.Isolate, true
}

// HasIsolate returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasIsolate() bool {
	if o != nil && o.Isolate != nil {
		return true
	}

	return false
}

// SetIsolate gets a reference to the given V2reportsIsolate and assigns it to the Isolate field.
func (o *V2reportsVirusAssembly) SetIsolate(v V2reportsIsolate) {
	o.Isolate = &v
}

// GetSourceDatabase returns the SourceDatabase field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetSourceDatabase() string {
	if o == nil || o.SourceDatabase == nil {
		var ret string
		return ret
	}
	return *o.SourceDatabase
}

// GetSourceDatabaseOk returns a tuple with the SourceDatabase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetSourceDatabaseOk() (*string, bool) {
	if o == nil || o.SourceDatabase == nil {
		return nil, false
	}
	return o.SourceDatabase, true
}

// HasSourceDatabase returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasSourceDatabase() bool {
	if o != nil && o.SourceDatabase != nil {
		return true
	}

	return false
}

// SetSourceDatabase gets a reference to the given string and assigns it to the SourceDatabase field.
func (o *V2reportsVirusAssembly) SetSourceDatabase(v string) {
	o.SourceDatabase = &v
}

// GetProteinCount returns the ProteinCount field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetProteinCount() int32 {
	if o == nil || o.ProteinCount == nil {
		var ret int32
		return ret
	}
	return *o.ProteinCount
}

// GetProteinCountOk returns a tuple with the ProteinCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetProteinCountOk() (*int32, bool) {
	if o == nil || o.ProteinCount == nil {
		return nil, false
	}
	return o.ProteinCount, true
}

// HasProteinCount returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasProteinCount() bool {
	if o != nil && o.ProteinCount != nil {
		return true
	}

	return false
}

// SetProteinCount gets a reference to the given int32 and assigns it to the ProteinCount field.
func (o *V2reportsVirusAssembly) SetProteinCount(v int32) {
	o.ProteinCount = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetHost() V2reportsOrganism {
	if o == nil || o.Host == nil {
		var ret V2reportsOrganism
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetHostOk() (*V2reportsOrganism, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given V2reportsOrganism and assigns it to the Host field.
func (o *V2reportsVirusAssembly) SetHost(v V2reportsOrganism) {
	o.Host = &v
}

// GetVirus returns the Virus field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetVirus() V2reportsOrganism {
	if o == nil || o.Virus == nil {
		var ret V2reportsOrganism
		return ret
	}
	return *o.Virus
}

// GetVirusOk returns a tuple with the Virus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetVirusOk() (*V2reportsOrganism, bool) {
	if o == nil || o.Virus == nil {
		return nil, false
	}
	return o.Virus, true
}

// HasVirus returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasVirus() bool {
	if o != nil && o.Virus != nil {
		return true
	}

	return false
}

// SetVirus gets a reference to the given V2reportsOrganism and assigns it to the Virus field.
func (o *V2reportsVirusAssembly) SetVirus(v V2reportsOrganism) {
	o.Virus = &v
}

// GetBioprojects returns the Bioprojects field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetBioprojects() []string {
	if o == nil || o.Bioprojects == nil {
		var ret []string
		return ret
	}
	return o.Bioprojects
}

// GetBioprojectsOk returns a tuple with the Bioprojects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetBioprojectsOk() ([]string, bool) {
	if o == nil || o.Bioprojects == nil {
		return nil, false
	}
	return o.Bioprojects, true
}

// HasBioprojects returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasBioprojects() bool {
	if o != nil && o.Bioprojects != nil {
		return true
	}

	return false
}

// SetBioprojects gets a reference to the given []string and assigns it to the Bioprojects field.
func (o *V2reportsVirusAssembly) SetBioprojects(v []string) {
	o.Bioprojects = v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetLocation() V2reportsVirusAssemblyCollectionLocation {
	if o == nil || o.Location == nil {
		var ret V2reportsVirusAssemblyCollectionLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetLocationOk() (*V2reportsVirusAssemblyCollectionLocation, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given V2reportsVirusAssemblyCollectionLocation and assigns it to the Location field.
func (o *V2reportsVirusAssembly) SetLocation(v V2reportsVirusAssemblyCollectionLocation) {
	o.Location = &v
}

// GetUpdateDate returns the UpdateDate field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetUpdateDate() string {
	if o == nil || o.UpdateDate == nil {
		var ret string
		return ret
	}
	return *o.UpdateDate
}

// GetUpdateDateOk returns a tuple with the UpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetUpdateDateOk() (*string, bool) {
	if o == nil || o.UpdateDate == nil {
		return nil, false
	}
	return o.UpdateDate, true
}

// HasUpdateDate returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasUpdateDate() bool {
	if o != nil && o.UpdateDate != nil {
		return true
	}

	return false
}

// SetUpdateDate gets a reference to the given string and assigns it to the UpdateDate field.
func (o *V2reportsVirusAssembly) SetUpdateDate(v string) {
	o.UpdateDate = &v
}

// GetReleaseDate returns the ReleaseDate field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetReleaseDate() string {
	if o == nil || o.ReleaseDate == nil {
		var ret string
		return ret
	}
	return *o.ReleaseDate
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetReleaseDateOk() (*string, bool) {
	if o == nil || o.ReleaseDate == nil {
		return nil, false
	}
	return o.ReleaseDate, true
}

// HasReleaseDate returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasReleaseDate() bool {
	if o != nil && o.ReleaseDate != nil {
		return true
	}

	return false
}

// SetReleaseDate gets a reference to the given string and assigns it to the ReleaseDate field.
func (o *V2reportsVirusAssembly) SetReleaseDate(v string) {
	o.ReleaseDate = &v
}

// GetNucleotideCompleteness returns the NucleotideCompleteness field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetNucleotideCompleteness() string {
	if o == nil || o.NucleotideCompleteness == nil {
		var ret string
		return ret
	}
	return *o.NucleotideCompleteness
}

// GetNucleotideCompletenessOk returns a tuple with the NucleotideCompleteness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetNucleotideCompletenessOk() (*string, bool) {
	if o == nil || o.NucleotideCompleteness == nil {
		return nil, false
	}
	return o.NucleotideCompleteness, true
}

// HasNucleotideCompleteness returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasNucleotideCompleteness() bool {
	if o != nil && o.NucleotideCompleteness != nil {
		return true
	}

	return false
}

// SetNucleotideCompleteness gets a reference to the given string and assigns it to the NucleotideCompleteness field.
func (o *V2reportsVirusAssembly) SetNucleotideCompleteness(v string) {
	o.NucleotideCompleteness = &v
}

// GetCompleteness returns the Completeness field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetCompleteness() V2reportsVirusAssemblyCompleteness {
	if o == nil || o.Completeness == nil {
		var ret V2reportsVirusAssemblyCompleteness
		return ret
	}
	return *o.Completeness
}

// GetCompletenessOk returns a tuple with the Completeness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetCompletenessOk() (*V2reportsVirusAssemblyCompleteness, bool) {
	if o == nil || o.Completeness == nil {
		return nil, false
	}
	return o.Completeness, true
}

// HasCompleteness returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasCompleteness() bool {
	if o != nil && o.Completeness != nil {
		return true
	}

	return false
}

// SetCompleteness gets a reference to the given V2reportsVirusAssemblyCompleteness and assigns it to the Completeness field.
func (o *V2reportsVirusAssembly) SetCompleteness(v V2reportsVirusAssemblyCompleteness) {
	o.Completeness = &v
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetLength() int32 {
	if o == nil || o.Length == nil {
		var ret int32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetLengthOk() (*int32, bool) {
	if o == nil || o.Length == nil {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasLength() bool {
	if o != nil && o.Length != nil {
		return true
	}

	return false
}

// SetLength gets a reference to the given int32 and assigns it to the Length field.
func (o *V2reportsVirusAssembly) SetLength(v int32) {
	o.Length = &v
}

// GetGeneCount returns the GeneCount field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetGeneCount() int32 {
	if o == nil || o.GeneCount == nil {
		var ret int32
		return ret
	}
	return *o.GeneCount
}

// GetGeneCountOk returns a tuple with the GeneCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetGeneCountOk() (*int32, bool) {
	if o == nil || o.GeneCount == nil {
		return nil, false
	}
	return o.GeneCount, true
}

// HasGeneCount returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasGeneCount() bool {
	if o != nil && o.GeneCount != nil {
		return true
	}

	return false
}

// SetGeneCount gets a reference to the given int32 and assigns it to the GeneCount field.
func (o *V2reportsVirusAssembly) SetGeneCount(v int32) {
	o.GeneCount = &v
}

// GetMaturePeptideCount returns the MaturePeptideCount field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetMaturePeptideCount() int32 {
	if o == nil || o.MaturePeptideCount == nil {
		var ret int32
		return ret
	}
	return *o.MaturePeptideCount
}

// GetMaturePeptideCountOk returns a tuple with the MaturePeptideCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetMaturePeptideCountOk() (*int32, bool) {
	if o == nil || o.MaturePeptideCount == nil {
		return nil, false
	}
	return o.MaturePeptideCount, true
}

// HasMaturePeptideCount returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasMaturePeptideCount() bool {
	if o != nil && o.MaturePeptideCount != nil {
		return true
	}

	return false
}

// SetMaturePeptideCount gets a reference to the given int32 and assigns it to the MaturePeptideCount field.
func (o *V2reportsVirusAssembly) SetMaturePeptideCount(v int32) {
	o.MaturePeptideCount = &v
}

// GetBiosample returns the Biosample field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetBiosample() string {
	if o == nil || o.Biosample == nil {
		var ret string
		return ret
	}
	return *o.Biosample
}

// GetBiosampleOk returns a tuple with the Biosample field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetBiosampleOk() (*string, bool) {
	if o == nil || o.Biosample == nil {
		return nil, false
	}
	return o.Biosample, true
}

// HasBiosample returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasBiosample() bool {
	if o != nil && o.Biosample != nil {
		return true
	}

	return false
}

// SetBiosample gets a reference to the given string and assigns it to the Biosample field.
func (o *V2reportsVirusAssembly) SetBiosample(v string) {
	o.Biosample = &v
}

// GetMolType returns the MolType field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetMolType() string {
	if o == nil || o.MolType == nil {
		var ret string
		return ret
	}
	return *o.MolType
}

// GetMolTypeOk returns a tuple with the MolType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetMolTypeOk() (*string, bool) {
	if o == nil || o.MolType == nil {
		return nil, false
	}
	return o.MolType, true
}

// HasMolType returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasMolType() bool {
	if o != nil && o.MolType != nil {
		return true
	}

	return false
}

// SetMolType gets a reference to the given string and assigns it to the MolType field.
func (o *V2reportsVirusAssembly) SetMolType(v string) {
	o.MolType = &v
}

// GetNucleotide returns the Nucleotide field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetNucleotide() V2reportsSeqRangeSetFasta {
	if o == nil || o.Nucleotide == nil {
		var ret V2reportsSeqRangeSetFasta
		return ret
	}
	return *o.Nucleotide
}

// GetNucleotideOk returns a tuple with the Nucleotide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetNucleotideOk() (*V2reportsSeqRangeSetFasta, bool) {
	if o == nil || o.Nucleotide == nil {
		return nil, false
	}
	return o.Nucleotide, true
}

// HasNucleotide returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasNucleotide() bool {
	if o != nil && o.Nucleotide != nil {
		return true
	}

	return false
}

// SetNucleotide gets a reference to the given V2reportsSeqRangeSetFasta and assigns it to the Nucleotide field.
func (o *V2reportsVirusAssembly) SetNucleotide(v V2reportsSeqRangeSetFasta) {
	o.Nucleotide = &v
}

// GetPurposeOfSampling returns the PurposeOfSampling field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetPurposeOfSampling() V2reportsPurposeOfSampling {
	if o == nil || o.PurposeOfSampling == nil {
		var ret V2reportsPurposeOfSampling
		return ret
	}
	return *o.PurposeOfSampling
}

// GetPurposeOfSamplingOk returns a tuple with the PurposeOfSampling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetPurposeOfSamplingOk() (*V2reportsPurposeOfSampling, bool) {
	if o == nil || o.PurposeOfSampling == nil {
		return nil, false
	}
	return o.PurposeOfSampling, true
}

// HasPurposeOfSampling returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasPurposeOfSampling() bool {
	if o != nil && o.PurposeOfSampling != nil {
		return true
	}

	return false
}

// SetPurposeOfSampling gets a reference to the given V2reportsPurposeOfSampling and assigns it to the PurposeOfSampling field.
func (o *V2reportsVirusAssembly) SetPurposeOfSampling(v V2reportsPurposeOfSampling) {
	o.PurposeOfSampling = &v
}

// GetSraAccessions returns the SraAccessions field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetSraAccessions() []string {
	if o == nil || o.SraAccessions == nil {
		var ret []string
		return ret
	}
	return o.SraAccessions
}

// GetSraAccessionsOk returns a tuple with the SraAccessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetSraAccessionsOk() ([]string, bool) {
	if o == nil || o.SraAccessions == nil {
		return nil, false
	}
	return o.SraAccessions, true
}

// HasSraAccessions returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasSraAccessions() bool {
	if o != nil && o.SraAccessions != nil {
		return true
	}

	return false
}

// SetSraAccessions gets a reference to the given []string and assigns it to the SraAccessions field.
func (o *V2reportsVirusAssembly) SetSraAccessions(v []string) {
	o.SraAccessions = v
}

// GetSubmitter returns the Submitter field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetSubmitter() V2reportsVirusAssemblySubmitterInfo {
	if o == nil || o.Submitter == nil {
		var ret V2reportsVirusAssemblySubmitterInfo
		return ret
	}
	return *o.Submitter
}

// GetSubmitterOk returns a tuple with the Submitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetSubmitterOk() (*V2reportsVirusAssemblySubmitterInfo, bool) {
	if o == nil || o.Submitter == nil {
		return nil, false
	}
	return o.Submitter, true
}

// HasSubmitter returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasSubmitter() bool {
	if o != nil && o.Submitter != nil {
		return true
	}

	return false
}

// SetSubmitter gets a reference to the given V2reportsVirusAssemblySubmitterInfo and assigns it to the Submitter field.
func (o *V2reportsVirusAssembly) SetSubmitter(v V2reportsVirusAssemblySubmitterInfo) {
	o.Submitter = &v
}

// GetLabHost returns the LabHost field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetLabHost() string {
	if o == nil || o.LabHost == nil {
		var ret string
		return ret
	}
	return *o.LabHost
}

// GetLabHostOk returns a tuple with the LabHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetLabHostOk() (*string, bool) {
	if o == nil || o.LabHost == nil {
		return nil, false
	}
	return o.LabHost, true
}

// HasLabHost returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasLabHost() bool {
	if o != nil && o.LabHost != nil {
		return true
	}

	return false
}

// SetLabHost gets a reference to the given string and assigns it to the LabHost field.
func (o *V2reportsVirusAssembly) SetLabHost(v string) {
	o.LabHost = &v
}

// GetIsLabHost returns the IsLabHost field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetIsLabHost() bool {
	if o == nil || o.IsLabHost == nil {
		var ret bool
		return ret
	}
	return *o.IsLabHost
}

// GetIsLabHostOk returns a tuple with the IsLabHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetIsLabHostOk() (*bool, bool) {
	if o == nil || o.IsLabHost == nil {
		return nil, false
	}
	return o.IsLabHost, true
}

// HasIsLabHost returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasIsLabHost() bool {
	if o != nil && o.IsLabHost != nil {
		return true
	}

	return false
}

// SetIsLabHost gets a reference to the given bool and assigns it to the IsLabHost field.
func (o *V2reportsVirusAssembly) SetIsLabHost(v bool) {
	o.IsLabHost = &v
}

// GetIsVaccineStrain returns the IsVaccineStrain field value if set, zero value otherwise.
func (o *V2reportsVirusAssembly) GetIsVaccineStrain() bool {
	if o == nil || o.IsVaccineStrain == nil {
		var ret bool
		return ret
	}
	return *o.IsVaccineStrain
}

// GetIsVaccineStrainOk returns a tuple with the IsVaccineStrain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsVirusAssembly) GetIsVaccineStrainOk() (*bool, bool) {
	if o == nil || o.IsVaccineStrain == nil {
		return nil, false
	}
	return o.IsVaccineStrain, true
}

// HasIsVaccineStrain returns a boolean if a field has been set.
func (o *V2reportsVirusAssembly) HasIsVaccineStrain() bool {
	if o != nil && o.IsVaccineStrain != nil {
		return true
	}

	return false
}

// SetIsVaccineStrain gets a reference to the given bool and assigns it to the IsVaccineStrain field.
func (o *V2reportsVirusAssembly) SetIsVaccineStrain(v bool) {
	o.IsVaccineStrain = &v
}

func (o V2reportsVirusAssembly) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accession != nil {
		toSerialize["accession"] = o.Accession
	}
	if o.IsComplete != nil {
		toSerialize["is_complete"] = o.IsComplete
	}
	if o.IsAnnotated != nil {
		toSerialize["is_annotated"] = o.IsAnnotated
	}
	if o.Isolate != nil {
		toSerialize["isolate"] = o.Isolate
	}
	if o.SourceDatabase != nil {
		toSerialize["source_database"] = o.SourceDatabase
	}
	if o.ProteinCount != nil {
		toSerialize["protein_count"] = o.ProteinCount
	}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.Virus != nil {
		toSerialize["virus"] = o.Virus
	}
	if o.Bioprojects != nil {
		toSerialize["bioprojects"] = o.Bioprojects
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.UpdateDate != nil {
		toSerialize["update_date"] = o.UpdateDate
	}
	if o.ReleaseDate != nil {
		toSerialize["release_date"] = o.ReleaseDate
	}
	if o.NucleotideCompleteness != nil {
		toSerialize["nucleotide_completeness"] = o.NucleotideCompleteness
	}
	if o.Completeness != nil {
		toSerialize["completeness"] = o.Completeness
	}
	if o.Length != nil {
		toSerialize["length"] = o.Length
	}
	if o.GeneCount != nil {
		toSerialize["gene_count"] = o.GeneCount
	}
	if o.MaturePeptideCount != nil {
		toSerialize["mature_peptide_count"] = o.MaturePeptideCount
	}
	if o.Biosample != nil {
		toSerialize["biosample"] = o.Biosample
	}
	if o.MolType != nil {
		toSerialize["mol_type"] = o.MolType
	}
	if o.Nucleotide != nil {
		toSerialize["nucleotide"] = o.Nucleotide
	}
	if o.PurposeOfSampling != nil {
		toSerialize["purpose_of_sampling"] = o.PurposeOfSampling
	}
	if o.SraAccessions != nil {
		toSerialize["sra_accessions"] = o.SraAccessions
	}
	if o.Submitter != nil {
		toSerialize["submitter"] = o.Submitter
	}
	if o.LabHost != nil {
		toSerialize["lab_host"] = o.LabHost
	}
	if o.IsLabHost != nil {
		toSerialize["is_lab_host"] = o.IsLabHost
	}
	if o.IsVaccineStrain != nil {
		toSerialize["is_vaccine_strain"] = o.IsVaccineStrain
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsVirusAssembly struct {
	value *V2reportsVirusAssembly
	isSet bool
}

func (v NullableV2reportsVirusAssembly) Get() *V2reportsVirusAssembly {
	return v.value
}

func (v *NullableV2reportsVirusAssembly) Set(val *V2reportsVirusAssembly) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsVirusAssembly) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsVirusAssembly) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsVirusAssembly(val *V2reportsVirusAssembly) *NullableV2reportsVirusAssembly {
	return &NullableV2reportsVirusAssembly{value: val, isSet: true}
}

func (v NullableV2reportsVirusAssembly) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsVirusAssembly) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


