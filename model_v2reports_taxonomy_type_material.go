/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2reportsTaxonomyTypeMaterial struct for V2reportsTaxonomyTypeMaterial
type V2reportsTaxonomyTypeMaterial struct {
	TypeStrainName *string `json:"type_strain_name,omitempty"`
	TypeStrainId *string `json:"type_strain_id,omitempty"`
	BioCollectionId *string `json:"bio_collection_id,omitempty"`
	BioCollectionName *string `json:"bio_collection_name,omitempty"`
	CollectionType []V2reportsCollectionType `json:"collection_type,omitempty"`
	TypeClass *string `json:"type_class,omitempty"`
}

// NewV2reportsTaxonomyTypeMaterial instantiates a new V2reportsTaxonomyTypeMaterial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsTaxonomyTypeMaterial() *V2reportsTaxonomyTypeMaterial {
	this := V2reportsTaxonomyTypeMaterial{}
	return &this
}

// NewV2reportsTaxonomyTypeMaterialWithDefaults instantiates a new V2reportsTaxonomyTypeMaterial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsTaxonomyTypeMaterialWithDefaults() *V2reportsTaxonomyTypeMaterial {
	this := V2reportsTaxonomyTypeMaterial{}
	return &this
}

// GetTypeStrainName returns the TypeStrainName field value if set, zero value otherwise.
func (o *V2reportsTaxonomyTypeMaterial) GetTypeStrainName() string {
	if o == nil || o.TypeStrainName == nil {
		var ret string
		return ret
	}
	return *o.TypeStrainName
}

// GetTypeStrainNameOk returns a tuple with the TypeStrainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTaxonomyTypeMaterial) GetTypeStrainNameOk() (*string, bool) {
	if o == nil || o.TypeStrainName == nil {
		return nil, false
	}
	return o.TypeStrainName, true
}

// HasTypeStrainName returns a boolean if a field has been set.
func (o *V2reportsTaxonomyTypeMaterial) HasTypeStrainName() bool {
	if o != nil && o.TypeStrainName != nil {
		return true
	}

	return false
}

// SetTypeStrainName gets a reference to the given string and assigns it to the TypeStrainName field.
func (o *V2reportsTaxonomyTypeMaterial) SetTypeStrainName(v string) {
	o.TypeStrainName = &v
}

// GetTypeStrainId returns the TypeStrainId field value if set, zero value otherwise.
func (o *V2reportsTaxonomyTypeMaterial) GetTypeStrainId() string {
	if o == nil || o.TypeStrainId == nil {
		var ret string
		return ret
	}
	return *o.TypeStrainId
}

// GetTypeStrainIdOk returns a tuple with the TypeStrainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTaxonomyTypeMaterial) GetTypeStrainIdOk() (*string, bool) {
	if o == nil || o.TypeStrainId == nil {
		return nil, false
	}
	return o.TypeStrainId, true
}

// HasTypeStrainId returns a boolean if a field has been set.
func (o *V2reportsTaxonomyTypeMaterial) HasTypeStrainId() bool {
	if o != nil && o.TypeStrainId != nil {
		return true
	}

	return false
}

// SetTypeStrainId gets a reference to the given string and assigns it to the TypeStrainId field.
func (o *V2reportsTaxonomyTypeMaterial) SetTypeStrainId(v string) {
	o.TypeStrainId = &v
}

// GetBioCollectionId returns the BioCollectionId field value if set, zero value otherwise.
func (o *V2reportsTaxonomyTypeMaterial) GetBioCollectionId() string {
	if o == nil || o.BioCollectionId == nil {
		var ret string
		return ret
	}
	return *o.BioCollectionId
}

// GetBioCollectionIdOk returns a tuple with the BioCollectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTaxonomyTypeMaterial) GetBioCollectionIdOk() (*string, bool) {
	if o == nil || o.BioCollectionId == nil {
		return nil, false
	}
	return o.BioCollectionId, true
}

// HasBioCollectionId returns a boolean if a field has been set.
func (o *V2reportsTaxonomyTypeMaterial) HasBioCollectionId() bool {
	if o != nil && o.BioCollectionId != nil {
		return true
	}

	return false
}

// SetBioCollectionId gets a reference to the given string and assigns it to the BioCollectionId field.
func (o *V2reportsTaxonomyTypeMaterial) SetBioCollectionId(v string) {
	o.BioCollectionId = &v
}

// GetBioCollectionName returns the BioCollectionName field value if set, zero value otherwise.
func (o *V2reportsTaxonomyTypeMaterial) GetBioCollectionName() string {
	if o == nil || o.BioCollectionName == nil {
		var ret string
		return ret
	}
	return *o.BioCollectionName
}

// GetBioCollectionNameOk returns a tuple with the BioCollectionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTaxonomyTypeMaterial) GetBioCollectionNameOk() (*string, bool) {
	if o == nil || o.BioCollectionName == nil {
		return nil, false
	}
	return o.BioCollectionName, true
}

// HasBioCollectionName returns a boolean if a field has been set.
func (o *V2reportsTaxonomyTypeMaterial) HasBioCollectionName() bool {
	if o != nil && o.BioCollectionName != nil {
		return true
	}

	return false
}

// SetBioCollectionName gets a reference to the given string and assigns it to the BioCollectionName field.
func (o *V2reportsTaxonomyTypeMaterial) SetBioCollectionName(v string) {
	o.BioCollectionName = &v
}

// GetCollectionType returns the CollectionType field value if set, zero value otherwise.
func (o *V2reportsTaxonomyTypeMaterial) GetCollectionType() []V2reportsCollectionType {
	if o == nil || o.CollectionType == nil {
		var ret []V2reportsCollectionType
		return ret
	}
	return o.CollectionType
}

// GetCollectionTypeOk returns a tuple with the CollectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTaxonomyTypeMaterial) GetCollectionTypeOk() ([]V2reportsCollectionType, bool) {
	if o == nil || o.CollectionType == nil {
		return nil, false
	}
	return o.CollectionType, true
}

// HasCollectionType returns a boolean if a field has been set.
func (o *V2reportsTaxonomyTypeMaterial) HasCollectionType() bool {
	if o != nil && o.CollectionType != nil {
		return true
	}

	return false
}

// SetCollectionType gets a reference to the given []V2reportsCollectionType and assigns it to the CollectionType field.
func (o *V2reportsTaxonomyTypeMaterial) SetCollectionType(v []V2reportsCollectionType) {
	o.CollectionType = v
}

// GetTypeClass returns the TypeClass field value if set, zero value otherwise.
func (o *V2reportsTaxonomyTypeMaterial) GetTypeClass() string {
	if o == nil || o.TypeClass == nil {
		var ret string
		return ret
	}
	return *o.TypeClass
}

// GetTypeClassOk returns a tuple with the TypeClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTaxonomyTypeMaterial) GetTypeClassOk() (*string, bool) {
	if o == nil || o.TypeClass == nil {
		return nil, false
	}
	return o.TypeClass, true
}

// HasTypeClass returns a boolean if a field has been set.
func (o *V2reportsTaxonomyTypeMaterial) HasTypeClass() bool {
	if o != nil && o.TypeClass != nil {
		return true
	}

	return false
}

// SetTypeClass gets a reference to the given string and assigns it to the TypeClass field.
func (o *V2reportsTaxonomyTypeMaterial) SetTypeClass(v string) {
	o.TypeClass = &v
}

func (o V2reportsTaxonomyTypeMaterial) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TypeStrainName != nil {
		toSerialize["type_strain_name"] = o.TypeStrainName
	}
	if o.TypeStrainId != nil {
		toSerialize["type_strain_id"] = o.TypeStrainId
	}
	if o.BioCollectionId != nil {
		toSerialize["bio_collection_id"] = o.BioCollectionId
	}
	if o.BioCollectionName != nil {
		toSerialize["bio_collection_name"] = o.BioCollectionName
	}
	if o.CollectionType != nil {
		toSerialize["collection_type"] = o.CollectionType
	}
	if o.TypeClass != nil {
		toSerialize["type_class"] = o.TypeClass
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsTaxonomyTypeMaterial struct {
	value *V2reportsTaxonomyTypeMaterial
	isSet bool
}

func (v NullableV2reportsTaxonomyTypeMaterial) Get() *V2reportsTaxonomyTypeMaterial {
	return v.value
}

func (v *NullableV2reportsTaxonomyTypeMaterial) Set(val *V2reportsTaxonomyTypeMaterial) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsTaxonomyTypeMaterial) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsTaxonomyTypeMaterial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsTaxonomyTypeMaterial(val *V2reportsTaxonomyTypeMaterial) *NullableV2reportsTaxonomyTypeMaterial {
	return &NullableV2reportsTaxonomyTypeMaterial{value: val, isSet: true}
}

func (v NullableV2reportsTaxonomyTypeMaterial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsTaxonomyTypeMaterial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


