/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2DownloadSummaryDehydrated struct for V2DownloadSummaryDehydrated
type V2DownloadSummaryDehydrated struct {
	EstimatedFileSizeMb *int32 `json:"estimated_file_size_mb,omitempty"`
	Url *string `json:"url,omitempty"`
	CliDownloadCommandLine *string `json:"cli_download_command_line,omitempty"`
	CliRehydrateCommandLine *string `json:"cli_rehydrate_command_line,omitempty"`
}

// NewV2DownloadSummaryDehydrated instantiates a new V2DownloadSummaryDehydrated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2DownloadSummaryDehydrated() *V2DownloadSummaryDehydrated {
	this := V2DownloadSummaryDehydrated{}
	return &this
}

// NewV2DownloadSummaryDehydratedWithDefaults instantiates a new V2DownloadSummaryDehydrated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2DownloadSummaryDehydratedWithDefaults() *V2DownloadSummaryDehydrated {
	this := V2DownloadSummaryDehydrated{}
	return &this
}

// GetEstimatedFileSizeMb returns the EstimatedFileSizeMb field value if set, zero value otherwise.
func (o *V2DownloadSummaryDehydrated) GetEstimatedFileSizeMb() int32 {
	if o == nil || o.EstimatedFileSizeMb == nil {
		var ret int32
		return ret
	}
	return *o.EstimatedFileSizeMb
}

// GetEstimatedFileSizeMbOk returns a tuple with the EstimatedFileSizeMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DownloadSummaryDehydrated) GetEstimatedFileSizeMbOk() (*int32, bool) {
	if o == nil || o.EstimatedFileSizeMb == nil {
		return nil, false
	}
	return o.EstimatedFileSizeMb, true
}

// HasEstimatedFileSizeMb returns a boolean if a field has been set.
func (o *V2DownloadSummaryDehydrated) HasEstimatedFileSizeMb() bool {
	if o != nil && o.EstimatedFileSizeMb != nil {
		return true
	}

	return false
}

// SetEstimatedFileSizeMb gets a reference to the given int32 and assigns it to the EstimatedFileSizeMb field.
func (o *V2DownloadSummaryDehydrated) SetEstimatedFileSizeMb(v int32) {
	o.EstimatedFileSizeMb = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *V2DownloadSummaryDehydrated) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DownloadSummaryDehydrated) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *V2DownloadSummaryDehydrated) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *V2DownloadSummaryDehydrated) SetUrl(v string) {
	o.Url = &v
}

// GetCliDownloadCommandLine returns the CliDownloadCommandLine field value if set, zero value otherwise.
func (o *V2DownloadSummaryDehydrated) GetCliDownloadCommandLine() string {
	if o == nil || o.CliDownloadCommandLine == nil {
		var ret string
		return ret
	}
	return *o.CliDownloadCommandLine
}

// GetCliDownloadCommandLineOk returns a tuple with the CliDownloadCommandLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DownloadSummaryDehydrated) GetCliDownloadCommandLineOk() (*string, bool) {
	if o == nil || o.CliDownloadCommandLine == nil {
		return nil, false
	}
	return o.CliDownloadCommandLine, true
}

// HasCliDownloadCommandLine returns a boolean if a field has been set.
func (o *V2DownloadSummaryDehydrated) HasCliDownloadCommandLine() bool {
	if o != nil && o.CliDownloadCommandLine != nil {
		return true
	}

	return false
}

// SetCliDownloadCommandLine gets a reference to the given string and assigns it to the CliDownloadCommandLine field.
func (o *V2DownloadSummaryDehydrated) SetCliDownloadCommandLine(v string) {
	o.CliDownloadCommandLine = &v
}

// GetCliRehydrateCommandLine returns the CliRehydrateCommandLine field value if set, zero value otherwise.
func (o *V2DownloadSummaryDehydrated) GetCliRehydrateCommandLine() string {
	if o == nil || o.CliRehydrateCommandLine == nil {
		var ret string
		return ret
	}
	return *o.CliRehydrateCommandLine
}

// GetCliRehydrateCommandLineOk returns a tuple with the CliRehydrateCommandLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DownloadSummaryDehydrated) GetCliRehydrateCommandLineOk() (*string, bool) {
	if o == nil || o.CliRehydrateCommandLine == nil {
		return nil, false
	}
	return o.CliRehydrateCommandLine, true
}

// HasCliRehydrateCommandLine returns a boolean if a field has been set.
func (o *V2DownloadSummaryDehydrated) HasCliRehydrateCommandLine() bool {
	if o != nil && o.CliRehydrateCommandLine != nil {
		return true
	}

	return false
}

// SetCliRehydrateCommandLine gets a reference to the given string and assigns it to the CliRehydrateCommandLine field.
func (o *V2DownloadSummaryDehydrated) SetCliRehydrateCommandLine(v string) {
	o.CliRehydrateCommandLine = &v
}

func (o V2DownloadSummaryDehydrated) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EstimatedFileSizeMb != nil {
		toSerialize["estimated_file_size_mb"] = o.EstimatedFileSizeMb
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.CliDownloadCommandLine != nil {
		toSerialize["cli_download_command_line"] = o.CliDownloadCommandLine
	}
	if o.CliRehydrateCommandLine != nil {
		toSerialize["cli_rehydrate_command_line"] = o.CliRehydrateCommandLine
	}
	return json.Marshal(toSerialize)
}

type NullableV2DownloadSummaryDehydrated struct {
	value *V2DownloadSummaryDehydrated
	isSet bool
}

func (v NullableV2DownloadSummaryDehydrated) Get() *V2DownloadSummaryDehydrated {
	return v.value
}

func (v *NullableV2DownloadSummaryDehydrated) Set(val *V2DownloadSummaryDehydrated) {
	v.value = val
	v.isSet = true
}

func (v NullableV2DownloadSummaryDehydrated) IsSet() bool {
	return v.isSet
}

func (v *NullableV2DownloadSummaryDehydrated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2DownloadSummaryDehydrated(val *V2DownloadSummaryDehydrated) *NullableV2DownloadSummaryDehydrated {
	return &NullableV2DownloadSummaryDehydrated{value: val, isSet: true}
}

func (v NullableV2DownloadSummaryDehydrated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2DownloadSummaryDehydrated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


