/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2reportsBioSampleDescription struct for V2reportsBioSampleDescription
type V2reportsBioSampleDescription struct {
	Title *string `json:"title,omitempty"`
	Organism *V2reportsOrganism `json:"organism,omitempty"`
	Comment *string `json:"comment,omitempty"`
}

// NewV2reportsBioSampleDescription instantiates a new V2reportsBioSampleDescription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsBioSampleDescription() *V2reportsBioSampleDescription {
	this := V2reportsBioSampleDescription{}
	return &this
}

// NewV2reportsBioSampleDescriptionWithDefaults instantiates a new V2reportsBioSampleDescription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsBioSampleDescriptionWithDefaults() *V2reportsBioSampleDescription {
	this := V2reportsBioSampleDescription{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescription) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescription) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescription) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *V2reportsBioSampleDescription) SetTitle(v string) {
	o.Title = &v
}

// GetOrganism returns the Organism field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescription) GetOrganism() V2reportsOrganism {
	if o == nil || o.Organism == nil {
		var ret V2reportsOrganism
		return ret
	}
	return *o.Organism
}

// GetOrganismOk returns a tuple with the Organism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescription) GetOrganismOk() (*V2reportsOrganism, bool) {
	if o == nil || o.Organism == nil {
		return nil, false
	}
	return o.Organism, true
}

// HasOrganism returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescription) HasOrganism() bool {
	if o != nil && o.Organism != nil {
		return true
	}

	return false
}

// SetOrganism gets a reference to the given V2reportsOrganism and assigns it to the Organism field.
func (o *V2reportsBioSampleDescription) SetOrganism(v V2reportsOrganism) {
	o.Organism = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *V2reportsBioSampleDescription) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsBioSampleDescription) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *V2reportsBioSampleDescription) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *V2reportsBioSampleDescription) SetComment(v string) {
	o.Comment = &v
}

func (o V2reportsBioSampleDescription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Organism != nil {
		toSerialize["organism"] = o.Organism
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsBioSampleDescription struct {
	value *V2reportsBioSampleDescription
	isSet bool
}

func (v NullableV2reportsBioSampleDescription) Get() *V2reportsBioSampleDescription {
	return v.value
}

func (v *NullableV2reportsBioSampleDescription) Set(val *V2reportsBioSampleDescription) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsBioSampleDescription) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsBioSampleDescription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsBioSampleDescription(val *V2reportsBioSampleDescription) *NullableV2reportsBioSampleDescription {
	return &NullableV2reportsBioSampleDescription{value: val, isSet: true}
}

func (v NullableV2reportsBioSampleDescription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsBioSampleDescription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


