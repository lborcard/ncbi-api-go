/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2AssemblySequenceReportsRequest struct for V2AssemblySequenceReportsRequest
type V2AssemblySequenceReportsRequest struct {
	Accession *string `json:"accession,omitempty"`
	Chromosomes []string `json:"chromosomes,omitempty"`
	RoleFilters []string `json:"role_filters,omitempty"`
	TableFields []string `json:"table_fields,omitempty"`
	CountAssemblyUnplaced *bool `json:"count_assembly_unplaced,omitempty"`
	PageSize *int32 `json:"page_size,omitempty"`
	PageToken *string `json:"page_token,omitempty"`
	IncludeTabularHeader *V2IncludeTabularHeader `json:"include_tabular_header,omitempty"`
	TableFormat *string `json:"table_format,omitempty"`
}

// NewV2AssemblySequenceReportsRequest instantiates a new V2AssemblySequenceReportsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2AssemblySequenceReportsRequest() *V2AssemblySequenceReportsRequest {
	this := V2AssemblySequenceReportsRequest{}
	var includeTabularHeader V2IncludeTabularHeader = V2INCLUDETABULARHEADER_FIRST_PAGE_ONLY
	this.IncludeTabularHeader = &includeTabularHeader
	return &this
}

// NewV2AssemblySequenceReportsRequestWithDefaults instantiates a new V2AssemblySequenceReportsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2AssemblySequenceReportsRequestWithDefaults() *V2AssemblySequenceReportsRequest {
	this := V2AssemblySequenceReportsRequest{}
	var includeTabularHeader V2IncludeTabularHeader = V2INCLUDETABULARHEADER_FIRST_PAGE_ONLY
	this.IncludeTabularHeader = &includeTabularHeader
	return &this
}

// GetAccession returns the Accession field value if set, zero value otherwise.
func (o *V2AssemblySequenceReportsRequest) GetAccession() string {
	if o == nil || o.Accession == nil {
		var ret string
		return ret
	}
	return *o.Accession
}

// GetAccessionOk returns a tuple with the Accession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblySequenceReportsRequest) GetAccessionOk() (*string, bool) {
	if o == nil || o.Accession == nil {
		return nil, false
	}
	return o.Accession, true
}

// HasAccession returns a boolean if a field has been set.
func (o *V2AssemblySequenceReportsRequest) HasAccession() bool {
	if o != nil && o.Accession != nil {
		return true
	}

	return false
}

// SetAccession gets a reference to the given string and assigns it to the Accession field.
func (o *V2AssemblySequenceReportsRequest) SetAccession(v string) {
	o.Accession = &v
}

// GetChromosomes returns the Chromosomes field value if set, zero value otherwise.
func (o *V2AssemblySequenceReportsRequest) GetChromosomes() []string {
	if o == nil || o.Chromosomes == nil {
		var ret []string
		return ret
	}
	return o.Chromosomes
}

// GetChromosomesOk returns a tuple with the Chromosomes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblySequenceReportsRequest) GetChromosomesOk() ([]string, bool) {
	if o == nil || o.Chromosomes == nil {
		return nil, false
	}
	return o.Chromosomes, true
}

// HasChromosomes returns a boolean if a field has been set.
func (o *V2AssemblySequenceReportsRequest) HasChromosomes() bool {
	if o != nil && o.Chromosomes != nil {
		return true
	}

	return false
}

// SetChromosomes gets a reference to the given []string and assigns it to the Chromosomes field.
func (o *V2AssemblySequenceReportsRequest) SetChromosomes(v []string) {
	o.Chromosomes = v
}

// GetRoleFilters returns the RoleFilters field value if set, zero value otherwise.
func (o *V2AssemblySequenceReportsRequest) GetRoleFilters() []string {
	if o == nil || o.RoleFilters == nil {
		var ret []string
		return ret
	}
	return o.RoleFilters
}

// GetRoleFiltersOk returns a tuple with the RoleFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblySequenceReportsRequest) GetRoleFiltersOk() ([]string, bool) {
	if o == nil || o.RoleFilters == nil {
		return nil, false
	}
	return o.RoleFilters, true
}

// HasRoleFilters returns a boolean if a field has been set.
func (o *V2AssemblySequenceReportsRequest) HasRoleFilters() bool {
	if o != nil && o.RoleFilters != nil {
		return true
	}

	return false
}

// SetRoleFilters gets a reference to the given []string and assigns it to the RoleFilters field.
func (o *V2AssemblySequenceReportsRequest) SetRoleFilters(v []string) {
	o.RoleFilters = v
}

// GetTableFields returns the TableFields field value if set, zero value otherwise.
func (o *V2AssemblySequenceReportsRequest) GetTableFields() []string {
	if o == nil || o.TableFields == nil {
		var ret []string
		return ret
	}
	return o.TableFields
}

// GetTableFieldsOk returns a tuple with the TableFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblySequenceReportsRequest) GetTableFieldsOk() ([]string, bool) {
	if o == nil || o.TableFields == nil {
		return nil, false
	}
	return o.TableFields, true
}

// HasTableFields returns a boolean if a field has been set.
func (o *V2AssemblySequenceReportsRequest) HasTableFields() bool {
	if o != nil && o.TableFields != nil {
		return true
	}

	return false
}

// SetTableFields gets a reference to the given []string and assigns it to the TableFields field.
func (o *V2AssemblySequenceReportsRequest) SetTableFields(v []string) {
	o.TableFields = v
}

// GetCountAssemblyUnplaced returns the CountAssemblyUnplaced field value if set, zero value otherwise.
func (o *V2AssemblySequenceReportsRequest) GetCountAssemblyUnplaced() bool {
	if o == nil || o.CountAssemblyUnplaced == nil {
		var ret bool
		return ret
	}
	return *o.CountAssemblyUnplaced
}

// GetCountAssemblyUnplacedOk returns a tuple with the CountAssemblyUnplaced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblySequenceReportsRequest) GetCountAssemblyUnplacedOk() (*bool, bool) {
	if o == nil || o.CountAssemblyUnplaced == nil {
		return nil, false
	}
	return o.CountAssemblyUnplaced, true
}

// HasCountAssemblyUnplaced returns a boolean if a field has been set.
func (o *V2AssemblySequenceReportsRequest) HasCountAssemblyUnplaced() bool {
	if o != nil && o.CountAssemblyUnplaced != nil {
		return true
	}

	return false
}

// SetCountAssemblyUnplaced gets a reference to the given bool and assigns it to the CountAssemblyUnplaced field.
func (o *V2AssemblySequenceReportsRequest) SetCountAssemblyUnplaced(v bool) {
	o.CountAssemblyUnplaced = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *V2AssemblySequenceReportsRequest) GetPageSize() int32 {
	if o == nil || o.PageSize == nil {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblySequenceReportsRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil || o.PageSize == nil {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *V2AssemblySequenceReportsRequest) HasPageSize() bool {
	if o != nil && o.PageSize != nil {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *V2AssemblySequenceReportsRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetPageToken returns the PageToken field value if set, zero value otherwise.
func (o *V2AssemblySequenceReportsRequest) GetPageToken() string {
	if o == nil || o.PageToken == nil {
		var ret string
		return ret
	}
	return *o.PageToken
}

// GetPageTokenOk returns a tuple with the PageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblySequenceReportsRequest) GetPageTokenOk() (*string, bool) {
	if o == nil || o.PageToken == nil {
		return nil, false
	}
	return o.PageToken, true
}

// HasPageToken returns a boolean if a field has been set.
func (o *V2AssemblySequenceReportsRequest) HasPageToken() bool {
	if o != nil && o.PageToken != nil {
		return true
	}

	return false
}

// SetPageToken gets a reference to the given string and assigns it to the PageToken field.
func (o *V2AssemblySequenceReportsRequest) SetPageToken(v string) {
	o.PageToken = &v
}

// GetIncludeTabularHeader returns the IncludeTabularHeader field value if set, zero value otherwise.
func (o *V2AssemblySequenceReportsRequest) GetIncludeTabularHeader() V2IncludeTabularHeader {
	if o == nil || o.IncludeTabularHeader == nil {
		var ret V2IncludeTabularHeader
		return ret
	}
	return *o.IncludeTabularHeader
}

// GetIncludeTabularHeaderOk returns a tuple with the IncludeTabularHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblySequenceReportsRequest) GetIncludeTabularHeaderOk() (*V2IncludeTabularHeader, bool) {
	if o == nil || o.IncludeTabularHeader == nil {
		return nil, false
	}
	return o.IncludeTabularHeader, true
}

// HasIncludeTabularHeader returns a boolean if a field has been set.
func (o *V2AssemblySequenceReportsRequest) HasIncludeTabularHeader() bool {
	if o != nil && o.IncludeTabularHeader != nil {
		return true
	}

	return false
}

// SetIncludeTabularHeader gets a reference to the given V2IncludeTabularHeader and assigns it to the IncludeTabularHeader field.
func (o *V2AssemblySequenceReportsRequest) SetIncludeTabularHeader(v V2IncludeTabularHeader) {
	o.IncludeTabularHeader = &v
}

// GetTableFormat returns the TableFormat field value if set, zero value otherwise.
func (o *V2AssemblySequenceReportsRequest) GetTableFormat() string {
	if o == nil || o.TableFormat == nil {
		var ret string
		return ret
	}
	return *o.TableFormat
}

// GetTableFormatOk returns a tuple with the TableFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblySequenceReportsRequest) GetTableFormatOk() (*string, bool) {
	if o == nil || o.TableFormat == nil {
		return nil, false
	}
	return o.TableFormat, true
}

// HasTableFormat returns a boolean if a field has been set.
func (o *V2AssemblySequenceReportsRequest) HasTableFormat() bool {
	if o != nil && o.TableFormat != nil {
		return true
	}

	return false
}

// SetTableFormat gets a reference to the given string and assigns it to the TableFormat field.
func (o *V2AssemblySequenceReportsRequest) SetTableFormat(v string) {
	o.TableFormat = &v
}

func (o V2AssemblySequenceReportsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accession != nil {
		toSerialize["accession"] = o.Accession
	}
	if o.Chromosomes != nil {
		toSerialize["chromosomes"] = o.Chromosomes
	}
	if o.RoleFilters != nil {
		toSerialize["role_filters"] = o.RoleFilters
	}
	if o.TableFields != nil {
		toSerialize["table_fields"] = o.TableFields
	}
	if o.CountAssemblyUnplaced != nil {
		toSerialize["count_assembly_unplaced"] = o.CountAssemblyUnplaced
	}
	if o.PageSize != nil {
		toSerialize["page_size"] = o.PageSize
	}
	if o.PageToken != nil {
		toSerialize["page_token"] = o.PageToken
	}
	if o.IncludeTabularHeader != nil {
		toSerialize["include_tabular_header"] = o.IncludeTabularHeader
	}
	if o.TableFormat != nil {
		toSerialize["table_format"] = o.TableFormat
	}
	return json.Marshal(toSerialize)
}

type NullableV2AssemblySequenceReportsRequest struct {
	value *V2AssemblySequenceReportsRequest
	isSet bool
}

func (v NullableV2AssemblySequenceReportsRequest) Get() *V2AssemblySequenceReportsRequest {
	return v.value
}

func (v *NullableV2AssemblySequenceReportsRequest) Set(val *V2AssemblySequenceReportsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV2AssemblySequenceReportsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV2AssemblySequenceReportsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2AssemblySequenceReportsRequest(val *V2AssemblySequenceReportsRequest) *NullableV2AssemblySequenceReportsRequest {
	return &NullableV2AssemblySequenceReportsRequest{value: val, isSet: true}
}

func (v NullableV2AssemblySequenceReportsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2AssemblySequenceReportsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


