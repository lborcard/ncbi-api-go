/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2reportsAnnotationInfo struct for V2reportsAnnotationInfo
type V2reportsAnnotationInfo struct {
	Name *string `json:"name,omitempty"`
	Provider *string `json:"provider,omitempty"`
	ReleaseDate *string `json:"release_date,omitempty"`
	ReportUrl *string `json:"report_url,omitempty"`
	Stats *V2reportsFeatureCounts `json:"stats,omitempty"`
	Busco *V2reportsBuscoStat `json:"busco,omitempty"`
	Method *string `json:"method,omitempty"`
	Pipeline *string `json:"pipeline,omitempty"`
	SoftwareVersion *string `json:"software_version,omitempty"`
	Status *string `json:"status,omitempty"`
	ReleaseVersion *string `json:"release_version,omitempty"`
}

// NewV2reportsAnnotationInfo instantiates a new V2reportsAnnotationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsAnnotationInfo() *V2reportsAnnotationInfo {
	this := V2reportsAnnotationInfo{}
	return &this
}

// NewV2reportsAnnotationInfoWithDefaults instantiates a new V2reportsAnnotationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsAnnotationInfoWithDefaults() *V2reportsAnnotationInfo {
	this := V2reportsAnnotationInfo{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V2reportsAnnotationInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAnnotationInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V2reportsAnnotationInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V2reportsAnnotationInfo) SetName(v string) {
	o.Name = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *V2reportsAnnotationInfo) GetProvider() string {
	if o == nil || o.Provider == nil {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAnnotationInfo) GetProviderOk() (*string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *V2reportsAnnotationInfo) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *V2reportsAnnotationInfo) SetProvider(v string) {
	o.Provider = &v
}

// GetReleaseDate returns the ReleaseDate field value if set, zero value otherwise.
func (o *V2reportsAnnotationInfo) GetReleaseDate() string {
	if o == nil || o.ReleaseDate == nil {
		var ret string
		return ret
	}
	return *o.ReleaseDate
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAnnotationInfo) GetReleaseDateOk() (*string, bool) {
	if o == nil || o.ReleaseDate == nil {
		return nil, false
	}
	return o.ReleaseDate, true
}

// HasReleaseDate returns a boolean if a field has been set.
func (o *V2reportsAnnotationInfo) HasReleaseDate() bool {
	if o != nil && o.ReleaseDate != nil {
		return true
	}

	return false
}

// SetReleaseDate gets a reference to the given string and assigns it to the ReleaseDate field.
func (o *V2reportsAnnotationInfo) SetReleaseDate(v string) {
	o.ReleaseDate = &v
}

// GetReportUrl returns the ReportUrl field value if set, zero value otherwise.
func (o *V2reportsAnnotationInfo) GetReportUrl() string {
	if o == nil || o.ReportUrl == nil {
		var ret string
		return ret
	}
	return *o.ReportUrl
}

// GetReportUrlOk returns a tuple with the ReportUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAnnotationInfo) GetReportUrlOk() (*string, bool) {
	if o == nil || o.ReportUrl == nil {
		return nil, false
	}
	return o.ReportUrl, true
}

// HasReportUrl returns a boolean if a field has been set.
func (o *V2reportsAnnotationInfo) HasReportUrl() bool {
	if o != nil && o.ReportUrl != nil {
		return true
	}

	return false
}

// SetReportUrl gets a reference to the given string and assigns it to the ReportUrl field.
func (o *V2reportsAnnotationInfo) SetReportUrl(v string) {
	o.ReportUrl = &v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *V2reportsAnnotationInfo) GetStats() V2reportsFeatureCounts {
	if o == nil || o.Stats == nil {
		var ret V2reportsFeatureCounts
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAnnotationInfo) GetStatsOk() (*V2reportsFeatureCounts, bool) {
	if o == nil || o.Stats == nil {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *V2reportsAnnotationInfo) HasStats() bool {
	if o != nil && o.Stats != nil {
		return true
	}

	return false
}

// SetStats gets a reference to the given V2reportsFeatureCounts and assigns it to the Stats field.
func (o *V2reportsAnnotationInfo) SetStats(v V2reportsFeatureCounts) {
	o.Stats = &v
}

// GetBusco returns the Busco field value if set, zero value otherwise.
func (o *V2reportsAnnotationInfo) GetBusco() V2reportsBuscoStat {
	if o == nil || o.Busco == nil {
		var ret V2reportsBuscoStat
		return ret
	}
	return *o.Busco
}

// GetBuscoOk returns a tuple with the Busco field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAnnotationInfo) GetBuscoOk() (*V2reportsBuscoStat, bool) {
	if o == nil || o.Busco == nil {
		return nil, false
	}
	return o.Busco, true
}

// HasBusco returns a boolean if a field has been set.
func (o *V2reportsAnnotationInfo) HasBusco() bool {
	if o != nil && o.Busco != nil {
		return true
	}

	return false
}

// SetBusco gets a reference to the given V2reportsBuscoStat and assigns it to the Busco field.
func (o *V2reportsAnnotationInfo) SetBusco(v V2reportsBuscoStat) {
	o.Busco = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *V2reportsAnnotationInfo) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAnnotationInfo) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *V2reportsAnnotationInfo) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *V2reportsAnnotationInfo) SetMethod(v string) {
	o.Method = &v
}

// GetPipeline returns the Pipeline field value if set, zero value otherwise.
func (o *V2reportsAnnotationInfo) GetPipeline() string {
	if o == nil || o.Pipeline == nil {
		var ret string
		return ret
	}
	return *o.Pipeline
}

// GetPipelineOk returns a tuple with the Pipeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAnnotationInfo) GetPipelineOk() (*string, bool) {
	if o == nil || o.Pipeline == nil {
		return nil, false
	}
	return o.Pipeline, true
}

// HasPipeline returns a boolean if a field has been set.
func (o *V2reportsAnnotationInfo) HasPipeline() bool {
	if o != nil && o.Pipeline != nil {
		return true
	}

	return false
}

// SetPipeline gets a reference to the given string and assigns it to the Pipeline field.
func (o *V2reportsAnnotationInfo) SetPipeline(v string) {
	o.Pipeline = &v
}

// GetSoftwareVersion returns the SoftwareVersion field value if set, zero value otherwise.
func (o *V2reportsAnnotationInfo) GetSoftwareVersion() string {
	if o == nil || o.SoftwareVersion == nil {
		var ret string
		return ret
	}
	return *o.SoftwareVersion
}

// GetSoftwareVersionOk returns a tuple with the SoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAnnotationInfo) GetSoftwareVersionOk() (*string, bool) {
	if o == nil || o.SoftwareVersion == nil {
		return nil, false
	}
	return o.SoftwareVersion, true
}

// HasSoftwareVersion returns a boolean if a field has been set.
func (o *V2reportsAnnotationInfo) HasSoftwareVersion() bool {
	if o != nil && o.SoftwareVersion != nil {
		return true
	}

	return false
}

// SetSoftwareVersion gets a reference to the given string and assigns it to the SoftwareVersion field.
func (o *V2reportsAnnotationInfo) SetSoftwareVersion(v string) {
	o.SoftwareVersion = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V2reportsAnnotationInfo) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAnnotationInfo) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V2reportsAnnotationInfo) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *V2reportsAnnotationInfo) SetStatus(v string) {
	o.Status = &v
}

// GetReleaseVersion returns the ReleaseVersion field value if set, zero value otherwise.
func (o *V2reportsAnnotationInfo) GetReleaseVersion() string {
	if o == nil || o.ReleaseVersion == nil {
		var ret string
		return ret
	}
	return *o.ReleaseVersion
}

// GetReleaseVersionOk returns a tuple with the ReleaseVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAnnotationInfo) GetReleaseVersionOk() (*string, bool) {
	if o == nil || o.ReleaseVersion == nil {
		return nil, false
	}
	return o.ReleaseVersion, true
}

// HasReleaseVersion returns a boolean if a field has been set.
func (o *V2reportsAnnotationInfo) HasReleaseVersion() bool {
	if o != nil && o.ReleaseVersion != nil {
		return true
	}

	return false
}

// SetReleaseVersion gets a reference to the given string and assigns it to the ReleaseVersion field.
func (o *V2reportsAnnotationInfo) SetReleaseVersion(v string) {
	o.ReleaseVersion = &v
}

func (o V2reportsAnnotationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.ReleaseDate != nil {
		toSerialize["release_date"] = o.ReleaseDate
	}
	if o.ReportUrl != nil {
		toSerialize["report_url"] = o.ReportUrl
	}
	if o.Stats != nil {
		toSerialize["stats"] = o.Stats
	}
	if o.Busco != nil {
		toSerialize["busco"] = o.Busco
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.Pipeline != nil {
		toSerialize["pipeline"] = o.Pipeline
	}
	if o.SoftwareVersion != nil {
		toSerialize["software_version"] = o.SoftwareVersion
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.ReleaseVersion != nil {
		toSerialize["release_version"] = o.ReleaseVersion
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsAnnotationInfo struct {
	value *V2reportsAnnotationInfo
	isSet bool
}

func (v NullableV2reportsAnnotationInfo) Get() *V2reportsAnnotationInfo {
	return v.value
}

func (v *NullableV2reportsAnnotationInfo) Set(val *V2reportsAnnotationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsAnnotationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsAnnotationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsAnnotationInfo(val *V2reportsAnnotationInfo) *NullableV2reportsAnnotationInfo {
	return &NullableV2reportsAnnotationInfo{value: val, isSet: true}
}

func (v NullableV2reportsAnnotationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsAnnotationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


