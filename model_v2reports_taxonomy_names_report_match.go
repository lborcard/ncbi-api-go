/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2reportsTaxonomyNamesReportMatch struct for V2reportsTaxonomyNamesReportMatch
type V2reportsTaxonomyNamesReportMatch struct {
	Taxonomy *V2reportsTaxonomyNamesDescriptor `json:"taxonomy,omitempty"`
	Query []string `json:"query,omitempty"`
	Warning *V2reportsWarning `json:"warning,omitempty"`
	Errors []V2reportsError `json:"errors,omitempty"`
}

// NewV2reportsTaxonomyNamesReportMatch instantiates a new V2reportsTaxonomyNamesReportMatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsTaxonomyNamesReportMatch() *V2reportsTaxonomyNamesReportMatch {
	this := V2reportsTaxonomyNamesReportMatch{}
	return &this
}

// NewV2reportsTaxonomyNamesReportMatchWithDefaults instantiates a new V2reportsTaxonomyNamesReportMatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsTaxonomyNamesReportMatchWithDefaults() *V2reportsTaxonomyNamesReportMatch {
	this := V2reportsTaxonomyNamesReportMatch{}
	return &this
}

// GetTaxonomy returns the Taxonomy field value if set, zero value otherwise.
func (o *V2reportsTaxonomyNamesReportMatch) GetTaxonomy() V2reportsTaxonomyNamesDescriptor {
	if o == nil || o.Taxonomy == nil {
		var ret V2reportsTaxonomyNamesDescriptor
		return ret
	}
	return *o.Taxonomy
}

// GetTaxonomyOk returns a tuple with the Taxonomy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTaxonomyNamesReportMatch) GetTaxonomyOk() (*V2reportsTaxonomyNamesDescriptor, bool) {
	if o == nil || o.Taxonomy == nil {
		return nil, false
	}
	return o.Taxonomy, true
}

// HasTaxonomy returns a boolean if a field has been set.
func (o *V2reportsTaxonomyNamesReportMatch) HasTaxonomy() bool {
	if o != nil && o.Taxonomy != nil {
		return true
	}

	return false
}

// SetTaxonomy gets a reference to the given V2reportsTaxonomyNamesDescriptor and assigns it to the Taxonomy field.
func (o *V2reportsTaxonomyNamesReportMatch) SetTaxonomy(v V2reportsTaxonomyNamesDescriptor) {
	o.Taxonomy = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *V2reportsTaxonomyNamesReportMatch) GetQuery() []string {
	if o == nil || o.Query == nil {
		var ret []string
		return ret
	}
	return o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTaxonomyNamesReportMatch) GetQueryOk() ([]string, bool) {
	if o == nil || o.Query == nil {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *V2reportsTaxonomyNamesReportMatch) HasQuery() bool {
	if o != nil && o.Query != nil {
		return true
	}

	return false
}

// SetQuery gets a reference to the given []string and assigns it to the Query field.
func (o *V2reportsTaxonomyNamesReportMatch) SetQuery(v []string) {
	o.Query = v
}

// GetWarning returns the Warning field value if set, zero value otherwise.
func (o *V2reportsTaxonomyNamesReportMatch) GetWarning() V2reportsWarning {
	if o == nil || o.Warning == nil {
		var ret V2reportsWarning
		return ret
	}
	return *o.Warning
}

// GetWarningOk returns a tuple with the Warning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTaxonomyNamesReportMatch) GetWarningOk() (*V2reportsWarning, bool) {
	if o == nil || o.Warning == nil {
		return nil, false
	}
	return o.Warning, true
}

// HasWarning returns a boolean if a field has been set.
func (o *V2reportsTaxonomyNamesReportMatch) HasWarning() bool {
	if o != nil && o.Warning != nil {
		return true
	}

	return false
}

// SetWarning gets a reference to the given V2reportsWarning and assigns it to the Warning field.
func (o *V2reportsTaxonomyNamesReportMatch) SetWarning(v V2reportsWarning) {
	o.Warning = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *V2reportsTaxonomyNamesReportMatch) GetErrors() []V2reportsError {
	if o == nil || o.Errors == nil {
		var ret []V2reportsError
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsTaxonomyNamesReportMatch) GetErrorsOk() ([]V2reportsError, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *V2reportsTaxonomyNamesReportMatch) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []V2reportsError and assigns it to the Errors field.
func (o *V2reportsTaxonomyNamesReportMatch) SetErrors(v []V2reportsError) {
	o.Errors = v
}

func (o V2reportsTaxonomyNamesReportMatch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Taxonomy != nil {
		toSerialize["taxonomy"] = o.Taxonomy
	}
	if o.Query != nil {
		toSerialize["query"] = o.Query
	}
	if o.Warning != nil {
		toSerialize["warning"] = o.Warning
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsTaxonomyNamesReportMatch struct {
	value *V2reportsTaxonomyNamesReportMatch
	isSet bool
}

func (v NullableV2reportsTaxonomyNamesReportMatch) Get() *V2reportsTaxonomyNamesReportMatch {
	return v.value
}

func (v *NullableV2reportsTaxonomyNamesReportMatch) Set(val *V2reportsTaxonomyNamesReportMatch) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsTaxonomyNamesReportMatch) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsTaxonomyNamesReportMatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsTaxonomyNamesReportMatch(val *V2reportsTaxonomyNamesReportMatch) *NullableV2reportsTaxonomyNamesReportMatch {
	return &NullableV2reportsTaxonomyNamesReportMatch{value: val, isSet: true}
}

func (v NullableV2reportsTaxonomyNamesReportMatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsTaxonomyNamesReportMatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


