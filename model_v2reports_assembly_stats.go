/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2reportsAssemblyStats struct for V2reportsAssemblyStats
type V2reportsAssemblyStats struct {
	TotalNumberOfChromosomes *int32 `json:"total_number_of_chromosomes,omitempty"`
	TotalSequenceLength *string `json:"total_sequence_length,omitempty"`
	TotalUngappedLength *string `json:"total_ungapped_length,omitempty"`
	NumberOfContigs *int32 `json:"number_of_contigs,omitempty"`
	ContigN50 *int32 `json:"contig_n50,omitempty"`
	ContigL50 *int32 `json:"contig_l50,omitempty"`
	NumberOfScaffolds *int32 `json:"number_of_scaffolds,omitempty"`
	ScaffoldN50 *int32 `json:"scaffold_n50,omitempty"`
	ScaffoldL50 *int32 `json:"scaffold_l50,omitempty"`
	GapsBetweenScaffoldsCount *int32 `json:"gaps_between_scaffolds_count,omitempty"`
	NumberOfComponentSequences *int32 `json:"number_of_component_sequences,omitempty"`
	GcCount *string `json:"gc_count,omitempty"`
	GcPercent *float32 `json:"gc_percent,omitempty"`
	GenomeCoverage *string `json:"genome_coverage,omitempty"`
	NumberOfOrganelles *int32 `json:"number_of_organelles,omitempty"`
}

// NewV2reportsAssemblyStats instantiates a new V2reportsAssemblyStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsAssemblyStats() *V2reportsAssemblyStats {
	this := V2reportsAssemblyStats{}
	return &this
}

// NewV2reportsAssemblyStatsWithDefaults instantiates a new V2reportsAssemblyStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsAssemblyStatsWithDefaults() *V2reportsAssemblyStats {
	this := V2reportsAssemblyStats{}
	return &this
}

// GetTotalNumberOfChromosomes returns the TotalNumberOfChromosomes field value if set, zero value otherwise.
func (o *V2reportsAssemblyStats) GetTotalNumberOfChromosomes() int32 {
	if o == nil || o.TotalNumberOfChromosomes == nil {
		var ret int32
		return ret
	}
	return *o.TotalNumberOfChromosomes
}

// GetTotalNumberOfChromosomesOk returns a tuple with the TotalNumberOfChromosomes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAssemblyStats) GetTotalNumberOfChromosomesOk() (*int32, bool) {
	if o == nil || o.TotalNumberOfChromosomes == nil {
		return nil, false
	}
	return o.TotalNumberOfChromosomes, true
}

// HasTotalNumberOfChromosomes returns a boolean if a field has been set.
func (o *V2reportsAssemblyStats) HasTotalNumberOfChromosomes() bool {
	if o != nil && o.TotalNumberOfChromosomes != nil {
		return true
	}

	return false
}

// SetTotalNumberOfChromosomes gets a reference to the given int32 and assigns it to the TotalNumberOfChromosomes field.
func (o *V2reportsAssemblyStats) SetTotalNumberOfChromosomes(v int32) {
	o.TotalNumberOfChromosomes = &v
}

// GetTotalSequenceLength returns the TotalSequenceLength field value if set, zero value otherwise.
func (o *V2reportsAssemblyStats) GetTotalSequenceLength() string {
	if o == nil || o.TotalSequenceLength == nil {
		var ret string
		return ret
	}
	return *o.TotalSequenceLength
}

// GetTotalSequenceLengthOk returns a tuple with the TotalSequenceLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAssemblyStats) GetTotalSequenceLengthOk() (*string, bool) {
	if o == nil || o.TotalSequenceLength == nil {
		return nil, false
	}
	return o.TotalSequenceLength, true
}

// HasTotalSequenceLength returns a boolean if a field has been set.
func (o *V2reportsAssemblyStats) HasTotalSequenceLength() bool {
	if o != nil && o.TotalSequenceLength != nil {
		return true
	}

	return false
}

// SetTotalSequenceLength gets a reference to the given string and assigns it to the TotalSequenceLength field.
func (o *V2reportsAssemblyStats) SetTotalSequenceLength(v string) {
	o.TotalSequenceLength = &v
}

// GetTotalUngappedLength returns the TotalUngappedLength field value if set, zero value otherwise.
func (o *V2reportsAssemblyStats) GetTotalUngappedLength() string {
	if o == nil || o.TotalUngappedLength == nil {
		var ret string
		return ret
	}
	return *o.TotalUngappedLength
}

// GetTotalUngappedLengthOk returns a tuple with the TotalUngappedLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAssemblyStats) GetTotalUngappedLengthOk() (*string, bool) {
	if o == nil || o.TotalUngappedLength == nil {
		return nil, false
	}
	return o.TotalUngappedLength, true
}

// HasTotalUngappedLength returns a boolean if a field has been set.
func (o *V2reportsAssemblyStats) HasTotalUngappedLength() bool {
	if o != nil && o.TotalUngappedLength != nil {
		return true
	}

	return false
}

// SetTotalUngappedLength gets a reference to the given string and assigns it to the TotalUngappedLength field.
func (o *V2reportsAssemblyStats) SetTotalUngappedLength(v string) {
	o.TotalUngappedLength = &v
}

// GetNumberOfContigs returns the NumberOfContigs field value if set, zero value otherwise.
func (o *V2reportsAssemblyStats) GetNumberOfContigs() int32 {
	if o == nil || o.NumberOfContigs == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfContigs
}

// GetNumberOfContigsOk returns a tuple with the NumberOfContigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAssemblyStats) GetNumberOfContigsOk() (*int32, bool) {
	if o == nil || o.NumberOfContigs == nil {
		return nil, false
	}
	return o.NumberOfContigs, true
}

// HasNumberOfContigs returns a boolean if a field has been set.
func (o *V2reportsAssemblyStats) HasNumberOfContigs() bool {
	if o != nil && o.NumberOfContigs != nil {
		return true
	}

	return false
}

// SetNumberOfContigs gets a reference to the given int32 and assigns it to the NumberOfContigs field.
func (o *V2reportsAssemblyStats) SetNumberOfContigs(v int32) {
	o.NumberOfContigs = &v
}

// GetContigN50 returns the ContigN50 field value if set, zero value otherwise.
func (o *V2reportsAssemblyStats) GetContigN50() int32 {
	if o == nil || o.ContigN50 == nil {
		var ret int32
		return ret
	}
	return *o.ContigN50
}

// GetContigN50Ok returns a tuple with the ContigN50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAssemblyStats) GetContigN50Ok() (*int32, bool) {
	if o == nil || o.ContigN50 == nil {
		return nil, false
	}
	return o.ContigN50, true
}

// HasContigN50 returns a boolean if a field has been set.
func (o *V2reportsAssemblyStats) HasContigN50() bool {
	if o != nil && o.ContigN50 != nil {
		return true
	}

	return false
}

// SetContigN50 gets a reference to the given int32 and assigns it to the ContigN50 field.
func (o *V2reportsAssemblyStats) SetContigN50(v int32) {
	o.ContigN50 = &v
}

// GetContigL50 returns the ContigL50 field value if set, zero value otherwise.
func (o *V2reportsAssemblyStats) GetContigL50() int32 {
	if o == nil || o.ContigL50 == nil {
		var ret int32
		return ret
	}
	return *o.ContigL50
}

// GetContigL50Ok returns a tuple with the ContigL50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAssemblyStats) GetContigL50Ok() (*int32, bool) {
	if o == nil || o.ContigL50 == nil {
		return nil, false
	}
	return o.ContigL50, true
}

// HasContigL50 returns a boolean if a field has been set.
func (o *V2reportsAssemblyStats) HasContigL50() bool {
	if o != nil && o.ContigL50 != nil {
		return true
	}

	return false
}

// SetContigL50 gets a reference to the given int32 and assigns it to the ContigL50 field.
func (o *V2reportsAssemblyStats) SetContigL50(v int32) {
	o.ContigL50 = &v
}

// GetNumberOfScaffolds returns the NumberOfScaffolds field value if set, zero value otherwise.
func (o *V2reportsAssemblyStats) GetNumberOfScaffolds() int32 {
	if o == nil || o.NumberOfScaffolds == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfScaffolds
}

// GetNumberOfScaffoldsOk returns a tuple with the NumberOfScaffolds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAssemblyStats) GetNumberOfScaffoldsOk() (*int32, bool) {
	if o == nil || o.NumberOfScaffolds == nil {
		return nil, false
	}
	return o.NumberOfScaffolds, true
}

// HasNumberOfScaffolds returns a boolean if a field has been set.
func (o *V2reportsAssemblyStats) HasNumberOfScaffolds() bool {
	if o != nil && o.NumberOfScaffolds != nil {
		return true
	}

	return false
}

// SetNumberOfScaffolds gets a reference to the given int32 and assigns it to the NumberOfScaffolds field.
func (o *V2reportsAssemblyStats) SetNumberOfScaffolds(v int32) {
	o.NumberOfScaffolds = &v
}

// GetScaffoldN50 returns the ScaffoldN50 field value if set, zero value otherwise.
func (o *V2reportsAssemblyStats) GetScaffoldN50() int32 {
	if o == nil || o.ScaffoldN50 == nil {
		var ret int32
		return ret
	}
	return *o.ScaffoldN50
}

// GetScaffoldN50Ok returns a tuple with the ScaffoldN50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAssemblyStats) GetScaffoldN50Ok() (*int32, bool) {
	if o == nil || o.ScaffoldN50 == nil {
		return nil, false
	}
	return o.ScaffoldN50, true
}

// HasScaffoldN50 returns a boolean if a field has been set.
func (o *V2reportsAssemblyStats) HasScaffoldN50() bool {
	if o != nil && o.ScaffoldN50 != nil {
		return true
	}

	return false
}

// SetScaffoldN50 gets a reference to the given int32 and assigns it to the ScaffoldN50 field.
func (o *V2reportsAssemblyStats) SetScaffoldN50(v int32) {
	o.ScaffoldN50 = &v
}

// GetScaffoldL50 returns the ScaffoldL50 field value if set, zero value otherwise.
func (o *V2reportsAssemblyStats) GetScaffoldL50() int32 {
	if o == nil || o.ScaffoldL50 == nil {
		var ret int32
		return ret
	}
	return *o.ScaffoldL50
}

// GetScaffoldL50Ok returns a tuple with the ScaffoldL50 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAssemblyStats) GetScaffoldL50Ok() (*int32, bool) {
	if o == nil || o.ScaffoldL50 == nil {
		return nil, false
	}
	return o.ScaffoldL50, true
}

// HasScaffoldL50 returns a boolean if a field has been set.
func (o *V2reportsAssemblyStats) HasScaffoldL50() bool {
	if o != nil && o.ScaffoldL50 != nil {
		return true
	}

	return false
}

// SetScaffoldL50 gets a reference to the given int32 and assigns it to the ScaffoldL50 field.
func (o *V2reportsAssemblyStats) SetScaffoldL50(v int32) {
	o.ScaffoldL50 = &v
}

// GetGapsBetweenScaffoldsCount returns the GapsBetweenScaffoldsCount field value if set, zero value otherwise.
func (o *V2reportsAssemblyStats) GetGapsBetweenScaffoldsCount() int32 {
	if o == nil || o.GapsBetweenScaffoldsCount == nil {
		var ret int32
		return ret
	}
	return *o.GapsBetweenScaffoldsCount
}

// GetGapsBetweenScaffoldsCountOk returns a tuple with the GapsBetweenScaffoldsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAssemblyStats) GetGapsBetweenScaffoldsCountOk() (*int32, bool) {
	if o == nil || o.GapsBetweenScaffoldsCount == nil {
		return nil, false
	}
	return o.GapsBetweenScaffoldsCount, true
}

// HasGapsBetweenScaffoldsCount returns a boolean if a field has been set.
func (o *V2reportsAssemblyStats) HasGapsBetweenScaffoldsCount() bool {
	if o != nil && o.GapsBetweenScaffoldsCount != nil {
		return true
	}

	return false
}

// SetGapsBetweenScaffoldsCount gets a reference to the given int32 and assigns it to the GapsBetweenScaffoldsCount field.
func (o *V2reportsAssemblyStats) SetGapsBetweenScaffoldsCount(v int32) {
	o.GapsBetweenScaffoldsCount = &v
}

// GetNumberOfComponentSequences returns the NumberOfComponentSequences field value if set, zero value otherwise.
func (o *V2reportsAssemblyStats) GetNumberOfComponentSequences() int32 {
	if o == nil || o.NumberOfComponentSequences == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfComponentSequences
}

// GetNumberOfComponentSequencesOk returns a tuple with the NumberOfComponentSequences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAssemblyStats) GetNumberOfComponentSequencesOk() (*int32, bool) {
	if o == nil || o.NumberOfComponentSequences == nil {
		return nil, false
	}
	return o.NumberOfComponentSequences, true
}

// HasNumberOfComponentSequences returns a boolean if a field has been set.
func (o *V2reportsAssemblyStats) HasNumberOfComponentSequences() bool {
	if o != nil && o.NumberOfComponentSequences != nil {
		return true
	}

	return false
}

// SetNumberOfComponentSequences gets a reference to the given int32 and assigns it to the NumberOfComponentSequences field.
func (o *V2reportsAssemblyStats) SetNumberOfComponentSequences(v int32) {
	o.NumberOfComponentSequences = &v
}

// GetGcCount returns the GcCount field value if set, zero value otherwise.
func (o *V2reportsAssemblyStats) GetGcCount() string {
	if o == nil || o.GcCount == nil {
		var ret string
		return ret
	}
	return *o.GcCount
}

// GetGcCountOk returns a tuple with the GcCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAssemblyStats) GetGcCountOk() (*string, bool) {
	if o == nil || o.GcCount == nil {
		return nil, false
	}
	return o.GcCount, true
}

// HasGcCount returns a boolean if a field has been set.
func (o *V2reportsAssemblyStats) HasGcCount() bool {
	if o != nil && o.GcCount != nil {
		return true
	}

	return false
}

// SetGcCount gets a reference to the given string and assigns it to the GcCount field.
func (o *V2reportsAssemblyStats) SetGcCount(v string) {
	o.GcCount = &v
}

// GetGcPercent returns the GcPercent field value if set, zero value otherwise.
func (o *V2reportsAssemblyStats) GetGcPercent() float32 {
	if o == nil || o.GcPercent == nil {
		var ret float32
		return ret
	}
	return *o.GcPercent
}

// GetGcPercentOk returns a tuple with the GcPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAssemblyStats) GetGcPercentOk() (*float32, bool) {
	if o == nil || o.GcPercent == nil {
		return nil, false
	}
	return o.GcPercent, true
}

// HasGcPercent returns a boolean if a field has been set.
func (o *V2reportsAssemblyStats) HasGcPercent() bool {
	if o != nil && o.GcPercent != nil {
		return true
	}

	return false
}

// SetGcPercent gets a reference to the given float32 and assigns it to the GcPercent field.
func (o *V2reportsAssemblyStats) SetGcPercent(v float32) {
	o.GcPercent = &v
}

// GetGenomeCoverage returns the GenomeCoverage field value if set, zero value otherwise.
func (o *V2reportsAssemblyStats) GetGenomeCoverage() string {
	if o == nil || o.GenomeCoverage == nil {
		var ret string
		return ret
	}
	return *o.GenomeCoverage
}

// GetGenomeCoverageOk returns a tuple with the GenomeCoverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAssemblyStats) GetGenomeCoverageOk() (*string, bool) {
	if o == nil || o.GenomeCoverage == nil {
		return nil, false
	}
	return o.GenomeCoverage, true
}

// HasGenomeCoverage returns a boolean if a field has been set.
func (o *V2reportsAssemblyStats) HasGenomeCoverage() bool {
	if o != nil && o.GenomeCoverage != nil {
		return true
	}

	return false
}

// SetGenomeCoverage gets a reference to the given string and assigns it to the GenomeCoverage field.
func (o *V2reportsAssemblyStats) SetGenomeCoverage(v string) {
	o.GenomeCoverage = &v
}

// GetNumberOfOrganelles returns the NumberOfOrganelles field value if set, zero value otherwise.
func (o *V2reportsAssemblyStats) GetNumberOfOrganelles() int32 {
	if o == nil || o.NumberOfOrganelles == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfOrganelles
}

// GetNumberOfOrganellesOk returns a tuple with the NumberOfOrganelles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsAssemblyStats) GetNumberOfOrganellesOk() (*int32, bool) {
	if o == nil || o.NumberOfOrganelles == nil {
		return nil, false
	}
	return o.NumberOfOrganelles, true
}

// HasNumberOfOrganelles returns a boolean if a field has been set.
func (o *V2reportsAssemblyStats) HasNumberOfOrganelles() bool {
	if o != nil && o.NumberOfOrganelles != nil {
		return true
	}

	return false
}

// SetNumberOfOrganelles gets a reference to the given int32 and assigns it to the NumberOfOrganelles field.
func (o *V2reportsAssemblyStats) SetNumberOfOrganelles(v int32) {
	o.NumberOfOrganelles = &v
}

func (o V2reportsAssemblyStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalNumberOfChromosomes != nil {
		toSerialize["total_number_of_chromosomes"] = o.TotalNumberOfChromosomes
	}
	if o.TotalSequenceLength != nil {
		toSerialize["total_sequence_length"] = o.TotalSequenceLength
	}
	if o.TotalUngappedLength != nil {
		toSerialize["total_ungapped_length"] = o.TotalUngappedLength
	}
	if o.NumberOfContigs != nil {
		toSerialize["number_of_contigs"] = o.NumberOfContigs
	}
	if o.ContigN50 != nil {
		toSerialize["contig_n50"] = o.ContigN50
	}
	if o.ContigL50 != nil {
		toSerialize["contig_l50"] = o.ContigL50
	}
	if o.NumberOfScaffolds != nil {
		toSerialize["number_of_scaffolds"] = o.NumberOfScaffolds
	}
	if o.ScaffoldN50 != nil {
		toSerialize["scaffold_n50"] = o.ScaffoldN50
	}
	if o.ScaffoldL50 != nil {
		toSerialize["scaffold_l50"] = o.ScaffoldL50
	}
	if o.GapsBetweenScaffoldsCount != nil {
		toSerialize["gaps_between_scaffolds_count"] = o.GapsBetweenScaffoldsCount
	}
	if o.NumberOfComponentSequences != nil {
		toSerialize["number_of_component_sequences"] = o.NumberOfComponentSequences
	}
	if o.GcCount != nil {
		toSerialize["gc_count"] = o.GcCount
	}
	if o.GcPercent != nil {
		toSerialize["gc_percent"] = o.GcPercent
	}
	if o.GenomeCoverage != nil {
		toSerialize["genome_coverage"] = o.GenomeCoverage
	}
	if o.NumberOfOrganelles != nil {
		toSerialize["number_of_organelles"] = o.NumberOfOrganelles
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsAssemblyStats struct {
	value *V2reportsAssemblyStats
	isSet bool
}

func (v NullableV2reportsAssemblyStats) Get() *V2reportsAssemblyStats {
	return v.value
}

func (v *NullableV2reportsAssemblyStats) Set(val *V2reportsAssemblyStats) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsAssemblyStats) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsAssemblyStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsAssemblyStats(val *V2reportsAssemblyStats) *NullableV2reportsAssemblyStats {
	return &NullableV2reportsAssemblyStats{value: val, isSet: true}
}

func (v NullableV2reportsAssemblyStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsAssemblyStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


