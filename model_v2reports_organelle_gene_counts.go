/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2reportsOrganelleGeneCounts struct for V2reportsOrganelleGeneCounts
type V2reportsOrganelleGeneCounts struct {
	Total *int32 `json:"total,omitempty"`
	ProteinCoding *int32 `json:"protein_coding,omitempty"`
	Rrna *int32 `json:"rrna,omitempty"`
	Trna *int32 `json:"trna,omitempty"`
	Lncrna *int32 `json:"lncrna,omitempty"`
}

// NewV2reportsOrganelleGeneCounts instantiates a new V2reportsOrganelleGeneCounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsOrganelleGeneCounts() *V2reportsOrganelleGeneCounts {
	this := V2reportsOrganelleGeneCounts{}
	return &this
}

// NewV2reportsOrganelleGeneCountsWithDefaults instantiates a new V2reportsOrganelleGeneCounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsOrganelleGeneCountsWithDefaults() *V2reportsOrganelleGeneCounts {
	this := V2reportsOrganelleGeneCounts{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *V2reportsOrganelleGeneCounts) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsOrganelleGeneCounts) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *V2reportsOrganelleGeneCounts) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *V2reportsOrganelleGeneCounts) SetTotal(v int32) {
	o.Total = &v
}

// GetProteinCoding returns the ProteinCoding field value if set, zero value otherwise.
func (o *V2reportsOrganelleGeneCounts) GetProteinCoding() int32 {
	if o == nil || o.ProteinCoding == nil {
		var ret int32
		return ret
	}
	return *o.ProteinCoding
}

// GetProteinCodingOk returns a tuple with the ProteinCoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsOrganelleGeneCounts) GetProteinCodingOk() (*int32, bool) {
	if o == nil || o.ProteinCoding == nil {
		return nil, false
	}
	return o.ProteinCoding, true
}

// HasProteinCoding returns a boolean if a field has been set.
func (o *V2reportsOrganelleGeneCounts) HasProteinCoding() bool {
	if o != nil && o.ProteinCoding != nil {
		return true
	}

	return false
}

// SetProteinCoding gets a reference to the given int32 and assigns it to the ProteinCoding field.
func (o *V2reportsOrganelleGeneCounts) SetProteinCoding(v int32) {
	o.ProteinCoding = &v
}

// GetRrna returns the Rrna field value if set, zero value otherwise.
func (o *V2reportsOrganelleGeneCounts) GetRrna() int32 {
	if o == nil || o.Rrna == nil {
		var ret int32
		return ret
	}
	return *o.Rrna
}

// GetRrnaOk returns a tuple with the Rrna field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsOrganelleGeneCounts) GetRrnaOk() (*int32, bool) {
	if o == nil || o.Rrna == nil {
		return nil, false
	}
	return o.Rrna, true
}

// HasRrna returns a boolean if a field has been set.
func (o *V2reportsOrganelleGeneCounts) HasRrna() bool {
	if o != nil && o.Rrna != nil {
		return true
	}

	return false
}

// SetRrna gets a reference to the given int32 and assigns it to the Rrna field.
func (o *V2reportsOrganelleGeneCounts) SetRrna(v int32) {
	o.Rrna = &v
}

// GetTrna returns the Trna field value if set, zero value otherwise.
func (o *V2reportsOrganelleGeneCounts) GetTrna() int32 {
	if o == nil || o.Trna == nil {
		var ret int32
		return ret
	}
	return *o.Trna
}

// GetTrnaOk returns a tuple with the Trna field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsOrganelleGeneCounts) GetTrnaOk() (*int32, bool) {
	if o == nil || o.Trna == nil {
		return nil, false
	}
	return o.Trna, true
}

// HasTrna returns a boolean if a field has been set.
func (o *V2reportsOrganelleGeneCounts) HasTrna() bool {
	if o != nil && o.Trna != nil {
		return true
	}

	return false
}

// SetTrna gets a reference to the given int32 and assigns it to the Trna field.
func (o *V2reportsOrganelleGeneCounts) SetTrna(v int32) {
	o.Trna = &v
}

// GetLncrna returns the Lncrna field value if set, zero value otherwise.
func (o *V2reportsOrganelleGeneCounts) GetLncrna() int32 {
	if o == nil || o.Lncrna == nil {
		var ret int32
		return ret
	}
	return *o.Lncrna
}

// GetLncrnaOk returns a tuple with the Lncrna field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsOrganelleGeneCounts) GetLncrnaOk() (*int32, bool) {
	if o == nil || o.Lncrna == nil {
		return nil, false
	}
	return o.Lncrna, true
}

// HasLncrna returns a boolean if a field has been set.
func (o *V2reportsOrganelleGeneCounts) HasLncrna() bool {
	if o != nil && o.Lncrna != nil {
		return true
	}

	return false
}

// SetLncrna gets a reference to the given int32 and assigns it to the Lncrna field.
func (o *V2reportsOrganelleGeneCounts) SetLncrna(v int32) {
	o.Lncrna = &v
}

func (o V2reportsOrganelleGeneCounts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	if o.ProteinCoding != nil {
		toSerialize["protein_coding"] = o.ProteinCoding
	}
	if o.Rrna != nil {
		toSerialize["rrna"] = o.Rrna
	}
	if o.Trna != nil {
		toSerialize["trna"] = o.Trna
	}
	if o.Lncrna != nil {
		toSerialize["lncrna"] = o.Lncrna
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsOrganelleGeneCounts struct {
	value *V2reportsOrganelleGeneCounts
	isSet bool
}

func (v NullableV2reportsOrganelleGeneCounts) Get() *V2reportsOrganelleGeneCounts {
	return v.value
}

func (v *NullableV2reportsOrganelleGeneCounts) Set(val *V2reportsOrganelleGeneCounts) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsOrganelleGeneCounts) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsOrganelleGeneCounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsOrganelleGeneCounts(val *V2reportsOrganelleGeneCounts) *NullableV2reportsOrganelleGeneCounts {
	return &NullableV2reportsOrganelleGeneCounts{value: val, isSet: true}
}

func (v NullableV2reportsOrganelleGeneCounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsOrganelleGeneCounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


