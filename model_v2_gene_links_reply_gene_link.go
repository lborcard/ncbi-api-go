/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2GeneLinksReplyGeneLink struct for V2GeneLinksReplyGeneLink
type V2GeneLinksReplyGeneLink struct {
	GeneId *int32 `json:"gene_id,omitempty"`
	GeneLinkType *V2GeneLinksReplyGeneLinkType `json:"gene_link_type,omitempty"`
	ResourceLink *string `json:"resource_link,omitempty"`
	ResourceId *string `json:"resource_id,omitempty"`
}

// NewV2GeneLinksReplyGeneLink instantiates a new V2GeneLinksReplyGeneLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2GeneLinksReplyGeneLink() *V2GeneLinksReplyGeneLink {
	this := V2GeneLinksReplyGeneLink{}
	var geneLinkType V2GeneLinksReplyGeneLinkType = "DEFAULT"
	this.GeneLinkType = &geneLinkType
	return &this
}

// NewV2GeneLinksReplyGeneLinkWithDefaults instantiates a new V2GeneLinksReplyGeneLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2GeneLinksReplyGeneLinkWithDefaults() *V2GeneLinksReplyGeneLink {
	this := V2GeneLinksReplyGeneLink{}
	var geneLinkType V2GeneLinksReplyGeneLinkType = "DEFAULT"
	this.GeneLinkType = &geneLinkType
	return &this
}

// GetGeneId returns the GeneId field value if set, zero value otherwise.
func (o *V2GeneLinksReplyGeneLink) GetGeneId() int32 {
	if o == nil || o.GeneId == nil {
		var ret int32
		return ret
	}
	return *o.GeneId
}

// GetGeneIdOk returns a tuple with the GeneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneLinksReplyGeneLink) GetGeneIdOk() (*int32, bool) {
	if o == nil || o.GeneId == nil {
		return nil, false
	}
	return o.GeneId, true
}

// HasGeneId returns a boolean if a field has been set.
func (o *V2GeneLinksReplyGeneLink) HasGeneId() bool {
	if o != nil && o.GeneId != nil {
		return true
	}

	return false
}

// SetGeneId gets a reference to the given int32 and assigns it to the GeneId field.
func (o *V2GeneLinksReplyGeneLink) SetGeneId(v int32) {
	o.GeneId = &v
}

// GetGeneLinkType returns the GeneLinkType field value if set, zero value otherwise.
func (o *V2GeneLinksReplyGeneLink) GetGeneLinkType() V2GeneLinksReplyGeneLinkType {
	if o == nil || o.GeneLinkType == nil {
		var ret V2GeneLinksReplyGeneLinkType
		return ret
	}
	return *o.GeneLinkType
}

// GetGeneLinkTypeOk returns a tuple with the GeneLinkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneLinksReplyGeneLink) GetGeneLinkTypeOk() (*V2GeneLinksReplyGeneLinkType, bool) {
	if o == nil || o.GeneLinkType == nil {
		return nil, false
	}
	return o.GeneLinkType, true
}

// HasGeneLinkType returns a boolean if a field has been set.
func (o *V2GeneLinksReplyGeneLink) HasGeneLinkType() bool {
	if o != nil && o.GeneLinkType != nil {
		return true
	}

	return false
}

// SetGeneLinkType gets a reference to the given V2GeneLinksReplyGeneLinkType and assigns it to the GeneLinkType field.
func (o *V2GeneLinksReplyGeneLink) SetGeneLinkType(v V2GeneLinksReplyGeneLinkType) {
	o.GeneLinkType = &v
}

// GetResourceLink returns the ResourceLink field value if set, zero value otherwise.
func (o *V2GeneLinksReplyGeneLink) GetResourceLink() string {
	if o == nil || o.ResourceLink == nil {
		var ret string
		return ret
	}
	return *o.ResourceLink
}

// GetResourceLinkOk returns a tuple with the ResourceLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneLinksReplyGeneLink) GetResourceLinkOk() (*string, bool) {
	if o == nil || o.ResourceLink == nil {
		return nil, false
	}
	return o.ResourceLink, true
}

// HasResourceLink returns a boolean if a field has been set.
func (o *V2GeneLinksReplyGeneLink) HasResourceLink() bool {
	if o != nil && o.ResourceLink != nil {
		return true
	}

	return false
}

// SetResourceLink gets a reference to the given string and assigns it to the ResourceLink field.
func (o *V2GeneLinksReplyGeneLink) SetResourceLink(v string) {
	o.ResourceLink = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *V2GeneLinksReplyGeneLink) GetResourceId() string {
	if o == nil || o.ResourceId == nil {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneLinksReplyGeneLink) GetResourceIdOk() (*string, bool) {
	if o == nil || o.ResourceId == nil {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *V2GeneLinksReplyGeneLink) HasResourceId() bool {
	if o != nil && o.ResourceId != nil {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *V2GeneLinksReplyGeneLink) SetResourceId(v string) {
	o.ResourceId = &v
}

func (o V2GeneLinksReplyGeneLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GeneId != nil {
		toSerialize["gene_id"] = o.GeneId
	}
	if o.GeneLinkType != nil {
		toSerialize["gene_link_type"] = o.GeneLinkType
	}
	if o.ResourceLink != nil {
		toSerialize["resource_link"] = o.ResourceLink
	}
	if o.ResourceId != nil {
		toSerialize["resource_id"] = o.ResourceId
	}
	return json.Marshal(toSerialize)
}

type NullableV2GeneLinksReplyGeneLink struct {
	value *V2GeneLinksReplyGeneLink
	isSet bool
}

func (v NullableV2GeneLinksReplyGeneLink) Get() *V2GeneLinksReplyGeneLink {
	return v.value
}

func (v *NullableV2GeneLinksReplyGeneLink) Set(val *V2GeneLinksReplyGeneLink) {
	v.value = val
	v.isSet = true
}

func (v NullableV2GeneLinksReplyGeneLink) IsSet() bool {
	return v.isSet
}

func (v *NullableV2GeneLinksReplyGeneLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2GeneLinksReplyGeneLink(val *V2GeneLinksReplyGeneLink) *NullableV2GeneLinksReplyGeneLink {
	return &NullableV2GeneLinksReplyGeneLink{value: val, isSet: true}
}

func (v NullableV2GeneLinksReplyGeneLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2GeneLinksReplyGeneLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


