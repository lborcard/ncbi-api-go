/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2AssemblyLinksReply struct for V2AssemblyLinksReply
type V2AssemblyLinksReply struct {
	AssemblyLinks []V2AssemblyLinksReplyAssemblyLink `json:"assembly_links,omitempty"`
}

// NewV2AssemblyLinksReply instantiates a new V2AssemblyLinksReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2AssemblyLinksReply() *V2AssemblyLinksReply {
	this := V2AssemblyLinksReply{}
	return &this
}

// NewV2AssemblyLinksReplyWithDefaults instantiates a new V2AssemblyLinksReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2AssemblyLinksReplyWithDefaults() *V2AssemblyLinksReply {
	this := V2AssemblyLinksReply{}
	return &this
}

// GetAssemblyLinks returns the AssemblyLinks field value if set, zero value otherwise.
func (o *V2AssemblyLinksReply) GetAssemblyLinks() []V2AssemblyLinksReplyAssemblyLink {
	if o == nil || o.AssemblyLinks == nil {
		var ret []V2AssemblyLinksReplyAssemblyLink
		return ret
	}
	return o.AssemblyLinks
}

// GetAssemblyLinksOk returns a tuple with the AssemblyLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssemblyLinksReply) GetAssemblyLinksOk() ([]V2AssemblyLinksReplyAssemblyLink, bool) {
	if o == nil || o.AssemblyLinks == nil {
		return nil, false
	}
	return o.AssemblyLinks, true
}

// HasAssemblyLinks returns a boolean if a field has been set.
func (o *V2AssemblyLinksReply) HasAssemblyLinks() bool {
	if o != nil && o.AssemblyLinks != nil {
		return true
	}

	return false
}

// SetAssemblyLinks gets a reference to the given []V2AssemblyLinksReplyAssemblyLink and assigns it to the AssemblyLinks field.
func (o *V2AssemblyLinksReply) SetAssemblyLinks(v []V2AssemblyLinksReplyAssemblyLink) {
	o.AssemblyLinks = v
}

func (o V2AssemblyLinksReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssemblyLinks != nil {
		toSerialize["assembly_links"] = o.AssemblyLinks
	}
	return json.Marshal(toSerialize)
}

type NullableV2AssemblyLinksReply struct {
	value *V2AssemblyLinksReply
	isSet bool
}

func (v NullableV2AssemblyLinksReply) Get() *V2AssemblyLinksReply {
	return v.value
}

func (v *NullableV2AssemblyLinksReply) Set(val *V2AssemblyLinksReply) {
	v.value = val
	v.isSet = true
}

func (v NullableV2AssemblyLinksReply) IsSet() bool {
	return v.isSet
}

func (v *NullableV2AssemblyLinksReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2AssemblyLinksReply(val *V2AssemblyLinksReply) *NullableV2AssemblyLinksReply {
	return &NullableV2AssemblyLinksReply{value: val, isSet: true}
}

func (v NullableV2AssemblyLinksReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2AssemblyLinksReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


