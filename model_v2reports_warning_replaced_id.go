/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2reportsWarningReplacedId struct for V2reportsWarningReplacedId
type V2reportsWarningReplacedId struct {
	Requested *string `json:"requested,omitempty"`
	Returned *string `json:"returned,omitempty"`
}

// NewV2reportsWarningReplacedId instantiates a new V2reportsWarningReplacedId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsWarningReplacedId() *V2reportsWarningReplacedId {
	this := V2reportsWarningReplacedId{}
	return &this
}

// NewV2reportsWarningReplacedIdWithDefaults instantiates a new V2reportsWarningReplacedId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsWarningReplacedIdWithDefaults() *V2reportsWarningReplacedId {
	this := V2reportsWarningReplacedId{}
	return &this
}

// GetRequested returns the Requested field value if set, zero value otherwise.
func (o *V2reportsWarningReplacedId) GetRequested() string {
	if o == nil || o.Requested == nil {
		var ret string
		return ret
	}
	return *o.Requested
}

// GetRequestedOk returns a tuple with the Requested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsWarningReplacedId) GetRequestedOk() (*string, bool) {
	if o == nil || o.Requested == nil {
		return nil, false
	}
	return o.Requested, true
}

// HasRequested returns a boolean if a field has been set.
func (o *V2reportsWarningReplacedId) HasRequested() bool {
	if o != nil && o.Requested != nil {
		return true
	}

	return false
}

// SetRequested gets a reference to the given string and assigns it to the Requested field.
func (o *V2reportsWarningReplacedId) SetRequested(v string) {
	o.Requested = &v
}

// GetReturned returns the Returned field value if set, zero value otherwise.
func (o *V2reportsWarningReplacedId) GetReturned() string {
	if o == nil || o.Returned == nil {
		var ret string
		return ret
	}
	return *o.Returned
}

// GetReturnedOk returns a tuple with the Returned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsWarningReplacedId) GetReturnedOk() (*string, bool) {
	if o == nil || o.Returned == nil {
		return nil, false
	}
	return o.Returned, true
}

// HasReturned returns a boolean if a field has been set.
func (o *V2reportsWarningReplacedId) HasReturned() bool {
	if o != nil && o.Returned != nil {
		return true
	}

	return false
}

// SetReturned gets a reference to the given string and assigns it to the Returned field.
func (o *V2reportsWarningReplacedId) SetReturned(v string) {
	o.Returned = &v
}

func (o V2reportsWarningReplacedId) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Requested != nil {
		toSerialize["requested"] = o.Requested
	}
	if o.Returned != nil {
		toSerialize["returned"] = o.Returned
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsWarningReplacedId struct {
	value *V2reportsWarningReplacedId
	isSet bool
}

func (v NullableV2reportsWarningReplacedId) Get() *V2reportsWarningReplacedId {
	return v.value
}

func (v *NullableV2reportsWarningReplacedId) Set(val *V2reportsWarningReplacedId) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsWarningReplacedId) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsWarningReplacedId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsWarningReplacedId(val *V2reportsWarningReplacedId) *NullableV2reportsWarningReplacedId {
	return &NullableV2reportsWarningReplacedId{value: val, isSet: true}
}

func (v NullableV2reportsWarningReplacedId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsWarningReplacedId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


