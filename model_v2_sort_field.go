/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2SortField struct for V2SortField
type V2SortField struct {
	Field *string `json:"field,omitempty"`
	Direction *V2SortDirection `json:"direction,omitempty"`
}

// NewV2SortField instantiates a new V2SortField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2SortField() *V2SortField {
	this := V2SortField{}
	var direction V2SortDirection = V2SORTDIRECTION_UNSPECIFIED
	this.Direction = &direction
	return &this
}

// NewV2SortFieldWithDefaults instantiates a new V2SortField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2SortFieldWithDefaults() *V2SortField {
	this := V2SortField{}
	var direction V2SortDirection = V2SORTDIRECTION_UNSPECIFIED
	this.Direction = &direction
	return &this
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *V2SortField) GetField() string {
	if o == nil || o.Field == nil {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SortField) GetFieldOk() (*string, bool) {
	if o == nil || o.Field == nil {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *V2SortField) HasField() bool {
	if o != nil && o.Field != nil {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *V2SortField) SetField(v string) {
	o.Field = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *V2SortField) GetDirection() V2SortDirection {
	if o == nil || o.Direction == nil {
		var ret V2SortDirection
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SortField) GetDirectionOk() (*V2SortDirection, bool) {
	if o == nil || o.Direction == nil {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *V2SortField) HasDirection() bool {
	if o != nil && o.Direction != nil {
		return true
	}

	return false
}

// SetDirection gets a reference to the given V2SortDirection and assigns it to the Direction field.
func (o *V2SortField) SetDirection(v V2SortDirection) {
	o.Direction = &v
}

func (o V2SortField) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Field != nil {
		toSerialize["field"] = o.Field
	}
	if o.Direction != nil {
		toSerialize["direction"] = o.Direction
	}
	return json.Marshal(toSerialize)
}

type NullableV2SortField struct {
	value *V2SortField
	isSet bool
}

func (v NullableV2SortField) Get() *V2SortField {
	return v.value
}

func (v *NullableV2SortField) Set(val *V2SortField) {
	v.value = val
	v.isSet = true
}

func (v NullableV2SortField) IsSet() bool {
	return v.isSet
}

func (v *NullableV2SortField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2SortField(val *V2SortField) *NullableV2SortField {
	return &NullableV2SortField{value: val, isSet: true}
}

func (v NullableV2SortField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2SortField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


