/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ncbi-openapi-v2_goland

import (
	"encoding/json"
)

// V2reportsSequenceInformation struct for V2reportsSequenceInformation
type V2reportsSequenceInformation struct {
	Accession *string `json:"accession,omitempty"`
	SubmissionDate *string `json:"submission_date,omitempty"`
	Submitter *string `json:"submitter,omitempty"`
}

// NewV2reportsSequenceInformation instantiates a new V2reportsSequenceInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2reportsSequenceInformation() *V2reportsSequenceInformation {
	this := V2reportsSequenceInformation{}
	return &this
}

// NewV2reportsSequenceInformationWithDefaults instantiates a new V2reportsSequenceInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2reportsSequenceInformationWithDefaults() *V2reportsSequenceInformation {
	this := V2reportsSequenceInformation{}
	return &this
}

// GetAccession returns the Accession field value if set, zero value otherwise.
func (o *V2reportsSequenceInformation) GetAccession() string {
	if o == nil || o.Accession == nil {
		var ret string
		return ret
	}
	return *o.Accession
}

// GetAccessionOk returns a tuple with the Accession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsSequenceInformation) GetAccessionOk() (*string, bool) {
	if o == nil || o.Accession == nil {
		return nil, false
	}
	return o.Accession, true
}

// HasAccession returns a boolean if a field has been set.
func (o *V2reportsSequenceInformation) HasAccession() bool {
	if o != nil && o.Accession != nil {
		return true
	}

	return false
}

// SetAccession gets a reference to the given string and assigns it to the Accession field.
func (o *V2reportsSequenceInformation) SetAccession(v string) {
	o.Accession = &v
}

// GetSubmissionDate returns the SubmissionDate field value if set, zero value otherwise.
func (o *V2reportsSequenceInformation) GetSubmissionDate() string {
	if o == nil || o.SubmissionDate == nil {
		var ret string
		return ret
	}
	return *o.SubmissionDate
}

// GetSubmissionDateOk returns a tuple with the SubmissionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsSequenceInformation) GetSubmissionDateOk() (*string, bool) {
	if o == nil || o.SubmissionDate == nil {
		return nil, false
	}
	return o.SubmissionDate, true
}

// HasSubmissionDate returns a boolean if a field has been set.
func (o *V2reportsSequenceInformation) HasSubmissionDate() bool {
	if o != nil && o.SubmissionDate != nil {
		return true
	}

	return false
}

// SetSubmissionDate gets a reference to the given string and assigns it to the SubmissionDate field.
func (o *V2reportsSequenceInformation) SetSubmissionDate(v string) {
	o.SubmissionDate = &v
}

// GetSubmitter returns the Submitter field value if set, zero value otherwise.
func (o *V2reportsSequenceInformation) GetSubmitter() string {
	if o == nil || o.Submitter == nil {
		var ret string
		return ret
	}
	return *o.Submitter
}

// GetSubmitterOk returns a tuple with the Submitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2reportsSequenceInformation) GetSubmitterOk() (*string, bool) {
	if o == nil || o.Submitter == nil {
		return nil, false
	}
	return o.Submitter, true
}

// HasSubmitter returns a boolean if a field has been set.
func (o *V2reportsSequenceInformation) HasSubmitter() bool {
	if o != nil && o.Submitter != nil {
		return true
	}

	return false
}

// SetSubmitter gets a reference to the given string and assigns it to the Submitter field.
func (o *V2reportsSequenceInformation) SetSubmitter(v string) {
	o.Submitter = &v
}

func (o V2reportsSequenceInformation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accession != nil {
		toSerialize["accession"] = o.Accession
	}
	if o.SubmissionDate != nil {
		toSerialize["submission_date"] = o.SubmissionDate
	}
	if o.Submitter != nil {
		toSerialize["submitter"] = o.Submitter
	}
	return json.Marshal(toSerialize)
}

type NullableV2reportsSequenceInformation struct {
	value *V2reportsSequenceInformation
	isSet bool
}

func (v NullableV2reportsSequenceInformation) Get() *V2reportsSequenceInformation {
	return v.value
}

func (v *NullableV2reportsSequenceInformation) Set(val *V2reportsSequenceInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableV2reportsSequenceInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableV2reportsSequenceInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2reportsSequenceInformation(val *V2reportsSequenceInformation) *NullableV2reportsSequenceInformation {
	return &NullableV2reportsSequenceInformation{value: val, isSet: true}
}

func (v NullableV2reportsSequenceInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2reportsSequenceInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


