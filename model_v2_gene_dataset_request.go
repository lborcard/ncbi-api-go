/*
NCBI Datasets API

### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

API version: v2alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V2GeneDatasetRequest struct for V2GeneDatasetRequest
type V2GeneDatasetRequest struct {
	GeneIds []int32 `json:"gene_ids,omitempty"`
	IncludeAnnotationType []V2Fasta `json:"include_annotation_type,omitempty"`
	ReturnedContent *V2GeneDatasetRequestContentType `json:"returned_content,omitempty"`
	FastaFilter []string `json:"fasta_filter,omitempty"`
	AuxReport []V2GeneDatasetRequestGeneDatasetReportType `json:"aux_report,omitempty"`
	TableFields []string `json:"table_fields,omitempty"`
	TableReportType *V2GeneDatasetRequestGeneDatasetReportType `json:"table_report_type,omitempty"`
}

// NewV2GeneDatasetRequest instantiates a new V2GeneDatasetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2GeneDatasetRequest() *V2GeneDatasetRequest {
	this := V2GeneDatasetRequest{}
	var returnedContent V2GeneDatasetRequestContentType = V2GENEDATASETREQUESTCONTENTTYPE_COMPLETE
	this.ReturnedContent = &returnedContent
	var tableReportType V2GeneDatasetRequestGeneDatasetReportType = V2GENEDATASETREQUESTGENEDATASETREPORTTYPE_DATASET_REPORT
	this.TableReportType = &tableReportType
	return &this
}

// NewV2GeneDatasetRequestWithDefaults instantiates a new V2GeneDatasetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2GeneDatasetRequestWithDefaults() *V2GeneDatasetRequest {
	this := V2GeneDatasetRequest{}
	var returnedContent V2GeneDatasetRequestContentType = V2GENEDATASETREQUESTCONTENTTYPE_COMPLETE
	this.ReturnedContent = &returnedContent
	var tableReportType V2GeneDatasetRequestGeneDatasetReportType = V2GENEDATASETREQUESTGENEDATASETREPORTTYPE_DATASET_REPORT
	this.TableReportType = &tableReportType
	return &this
}

// GetGeneIds returns the GeneIds field value if set, zero value otherwise.
func (o *V2GeneDatasetRequest) GetGeneIds() []int32 {
	if o == nil || o.GeneIds == nil {
		var ret []int32
		return ret
	}
	return o.GeneIds
}

// GetGeneIdsOk returns a tuple with the GeneIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetRequest) GetGeneIdsOk() ([]int32, bool) {
	if o == nil || o.GeneIds == nil {
		return nil, false
	}
	return o.GeneIds, true
}

// HasGeneIds returns a boolean if a field has been set.
func (o *V2GeneDatasetRequest) HasGeneIds() bool {
	if o != nil && o.GeneIds != nil {
		return true
	}

	return false
}

// SetGeneIds gets a reference to the given []int32 and assigns it to the GeneIds field.
func (o *V2GeneDatasetRequest) SetGeneIds(v []int32) {
	o.GeneIds = v
}

// GetIncludeAnnotationType returns the IncludeAnnotationType field value if set, zero value otherwise.
func (o *V2GeneDatasetRequest) GetIncludeAnnotationType() []V2Fasta {
	if o == nil || o.IncludeAnnotationType == nil {
		var ret []V2Fasta
		return ret
	}
	return o.IncludeAnnotationType
}

// GetIncludeAnnotationTypeOk returns a tuple with the IncludeAnnotationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetRequest) GetIncludeAnnotationTypeOk() ([]V2Fasta, bool) {
	if o == nil || o.IncludeAnnotationType == nil {
		return nil, false
	}
	return o.IncludeAnnotationType, true
}

// HasIncludeAnnotationType returns a boolean if a field has been set.
func (o *V2GeneDatasetRequest) HasIncludeAnnotationType() bool {
	if o != nil && o.IncludeAnnotationType != nil {
		return true
	}

	return false
}

// SetIncludeAnnotationType gets a reference to the given []V2Fasta and assigns it to the IncludeAnnotationType field.
func (o *V2GeneDatasetRequest) SetIncludeAnnotationType(v []V2Fasta) {
	o.IncludeAnnotationType = v
}

// GetReturnedContent returns the ReturnedContent field value if set, zero value otherwise.
func (o *V2GeneDatasetRequest) GetReturnedContent() V2GeneDatasetRequestContentType {
	if o == nil || o.ReturnedContent == nil {
		var ret V2GeneDatasetRequestContentType
		return ret
	}
	return *o.ReturnedContent
}

// GetReturnedContentOk returns a tuple with the ReturnedContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetRequest) GetReturnedContentOk() (*V2GeneDatasetRequestContentType, bool) {
	if o == nil || o.ReturnedContent == nil {
		return nil, false
	}
	return o.ReturnedContent, true
}

// HasReturnedContent returns a boolean if a field has been set.
func (o *V2GeneDatasetRequest) HasReturnedContent() bool {
	if o != nil && o.ReturnedContent != nil {
		return true
	}

	return false
}

// SetReturnedContent gets a reference to the given V2GeneDatasetRequestContentType and assigns it to the ReturnedContent field.
func (o *V2GeneDatasetRequest) SetReturnedContent(v V2GeneDatasetRequestContentType) {
	o.ReturnedContent = &v
}

// GetFastaFilter returns the FastaFilter field value if set, zero value otherwise.
func (o *V2GeneDatasetRequest) GetFastaFilter() []string {
	if o == nil || o.FastaFilter == nil {
		var ret []string
		return ret
	}
	return o.FastaFilter
}

// GetFastaFilterOk returns a tuple with the FastaFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetRequest) GetFastaFilterOk() ([]string, bool) {
	if o == nil || o.FastaFilter == nil {
		return nil, false
	}
	return o.FastaFilter, true
}

// HasFastaFilter returns a boolean if a field has been set.
func (o *V2GeneDatasetRequest) HasFastaFilter() bool {
	if o != nil && o.FastaFilter != nil {
		return true
	}

	return false
}

// SetFastaFilter gets a reference to the given []string and assigns it to the FastaFilter field.
func (o *V2GeneDatasetRequest) SetFastaFilter(v []string) {
	o.FastaFilter = v
}

// GetAuxReport returns the AuxReport field value if set, zero value otherwise.
func (o *V2GeneDatasetRequest) GetAuxReport() []V2GeneDatasetRequestGeneDatasetReportType {
	if o == nil || o.AuxReport == nil {
		var ret []V2GeneDatasetRequestGeneDatasetReportType
		return ret
	}
	return o.AuxReport
}

// GetAuxReportOk returns a tuple with the AuxReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetRequest) GetAuxReportOk() ([]V2GeneDatasetRequestGeneDatasetReportType, bool) {
	if o == nil || o.AuxReport == nil {
		return nil, false
	}
	return o.AuxReport, true
}

// HasAuxReport returns a boolean if a field has been set.
func (o *V2GeneDatasetRequest) HasAuxReport() bool {
	if o != nil && o.AuxReport != nil {
		return true
	}

	return false
}

// SetAuxReport gets a reference to the given []V2GeneDatasetRequestGeneDatasetReportType and assigns it to the AuxReport field.
func (o *V2GeneDatasetRequest) SetAuxReport(v []V2GeneDatasetRequestGeneDatasetReportType) {
	o.AuxReport = v
}

// GetTableFields returns the TableFields field value if set, zero value otherwise.
func (o *V2GeneDatasetRequest) GetTableFields() []string {
	if o == nil || o.TableFields == nil {
		var ret []string
		return ret
	}
	return o.TableFields
}

// GetTableFieldsOk returns a tuple with the TableFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetRequest) GetTableFieldsOk() ([]string, bool) {
	if o == nil || o.TableFields == nil {
		return nil, false
	}
	return o.TableFields, true
}

// HasTableFields returns a boolean if a field has been set.
func (o *V2GeneDatasetRequest) HasTableFields() bool {
	if o != nil && o.TableFields != nil {
		return true
	}

	return false
}

// SetTableFields gets a reference to the given []string and assigns it to the TableFields field.
func (o *V2GeneDatasetRequest) SetTableFields(v []string) {
	o.TableFields = v
}

// GetTableReportType returns the TableReportType field value if set, zero value otherwise.
func (o *V2GeneDatasetRequest) GetTableReportType() V2GeneDatasetRequestGeneDatasetReportType {
	if o == nil || o.TableReportType == nil {
		var ret V2GeneDatasetRequestGeneDatasetReportType
		return ret
	}
	return *o.TableReportType
}

// GetTableReportTypeOk returns a tuple with the TableReportType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2GeneDatasetRequest) GetTableReportTypeOk() (*V2GeneDatasetRequestGeneDatasetReportType, bool) {
	if o == nil || o.TableReportType == nil {
		return nil, false
	}
	return o.TableReportType, true
}

// HasTableReportType returns a boolean if a field has been set.
func (o *V2GeneDatasetRequest) HasTableReportType() bool {
	if o != nil && o.TableReportType != nil {
		return true
	}

	return false
}

// SetTableReportType gets a reference to the given V2GeneDatasetRequestGeneDatasetReportType and assigns it to the TableReportType field.
func (o *V2GeneDatasetRequest) SetTableReportType(v V2GeneDatasetRequestGeneDatasetReportType) {
	o.TableReportType = &v
}

func (o V2GeneDatasetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GeneIds != nil {
		toSerialize["gene_ids"] = o.GeneIds
	}
	if o.IncludeAnnotationType != nil {
		toSerialize["include_annotation_type"] = o.IncludeAnnotationType
	}
	if o.ReturnedContent != nil {
		toSerialize["returned_content"] = o.ReturnedContent
	}
	if o.FastaFilter != nil {
		toSerialize["fasta_filter"] = o.FastaFilter
	}
	if o.AuxReport != nil {
		toSerialize["aux_report"] = o.AuxReport
	}
	if o.TableFields != nil {
		toSerialize["table_fields"] = o.TableFields
	}
	if o.TableReportType != nil {
		toSerialize["table_report_type"] = o.TableReportType
	}
	return json.Marshal(toSerialize)
}

type NullableV2GeneDatasetRequest struct {
	value *V2GeneDatasetRequest
	isSet bool
}

func (v NullableV2GeneDatasetRequest) Get() *V2GeneDatasetRequest {
	return v.value
}

func (v *NullableV2GeneDatasetRequest) Set(val *V2GeneDatasetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV2GeneDatasetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV2GeneDatasetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2GeneDatasetRequest(val *V2GeneDatasetRequest) *NullableV2GeneDatasetRequest {
	return &NullableV2GeneDatasetRequest{value: val, isSet: true}
}

func (v NullableV2GeneDatasetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2GeneDatasetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


